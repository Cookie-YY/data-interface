{"version":3,"sources":["webpack:///./src/components/incNumber/index.vue?bf88","webpack:///./src/components/bar/BarLine.vue?ff23","webpack:///src/components/bar/BarLine.vue","webpack:///./src/components/bar/BarLine.vue?d9e9","webpack:///./src/components/bar/BarLine.vue","webpack:///./src/components/incNumber/index.vue?e04b","webpack:///src/components/incNumber/index.vue","webpack:///./src/components/incNumber/index.vue?778e","webpack:///./src/components/incNumber/index.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","params","data","length","expression","ref","style","width","canvasStyle","height","attrs","$STANDARD","loadingBgColor","staticRenderFns","item","code","categoryData","push","options","xName","component","staticClass","_v","_s","number"],"mappings":"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","file":"static/js/chunk-6f7538a1.e606b50e.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=cfc5ad0e&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=cfc5ad0e&lang=stylus&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(!_vm.params.data.length),expression:\"!params.data.length\"}],ref:\"chartEl\",style:({width : _vm.params.canvasStyle.width, height: _vm.params.canvasStyle.height}),attrs:{\"element-loading-background\":_vm.$STANDARD.loadingBgColor}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\n  @auth:yw\n  echarts柱图折线图\n-->\n\n<template>\n  <div\n    v-loading=\"!params.data.length\"\n    :element-loading-background=\"$STANDARD.loadingBgColor\"\n    ref=\"chartEl\"\n    :style=\"{width : params.canvasStyle.width, height: params.canvasStyle.height}\"\n  ></div>\n</template>\n\n<script>\n  import * as echarts from \"echarts\";\n  import {gradientColor} from \"@/utils/gradient\";\n\n  export default {\n    name: \"barline\",\n    props: {\n      animateFlag: Boolean,\n      params: {\n        type: Object,\n        default() {\n          return {\n            canvasStyle: {\n              width: \"1000px\",\n              height: \"600px\"\n            },\n            data: [],\n            /*\n               *没有写默认值的都为false\n               *带***为必填\n               * */\n            options: {\n              mode: \"abreast\", // 柱图模式  abreast(并排) | overlap(重叠) | stack(堆叠)  默认并排 ***\n              overlap: \"investigators\", // ***如果mode为'abreast' (重叠) 此项为必填 值为重叠在底部数据的key值\n              legendBgSrc: {\n                // ***如果mode为'abreast' (重叠) 此项为必填\n                // 值为 #激活#和 #未激活# 的背景图片的图片名(图片需为png格式,路径需在assets下)\n                // 例: avtive.png 取active\n                active: \"legendActive\",\n                inActive: \"legendInactive\"\n              },\n              colors: {\n                //颜色  STANDARD对象后的值按图表的需求给,详情请看standard.js,\n                //如果值为字符串请放入数组内\n                bar: this.$STANDARD.gradientColors,\n                line: this.$STANDARD.gradientColors\n              },\n              itemLabelColor: \"#fff\",//bar label的颜色\n              rotate: 20,//x轴旋转角度\n              colorisarry: false,//每个柱图选择不同的颜色,\n              //colorsbox:[],//颜色数组\n              xName: \"name\", // ***类目轴key值\n              isVertical: true, // 类目轴是否垂直\n              nameLocation: true, //isVertical为true时,Value轴名称是否在右侧，默认显示\n              splitLine: true, //isVertical为true时,Value轴splitLine是否显示，默认显示\n              axisLabel: true, //isVertical为true时,Value轴label是否显示，默认显示\n              axisValuePosition: true, //isVertical为true时,Value轴显示位置\n              categoryInverse: true, // isVertical为true时,类目轴是否在右侧\n              axisValueShow: true, // value轴 label 和 splitLine是否显示\n              axisLineShow: true, // 类目轴底线是否显示\n              axisLabelColor: \" #fff\",\n              categoryBr: true, // 类目轴label是否折行\n              categoryCut: true, // 类目轴label最后三个字是否折行\n              brNum: 2, // 类目轴label每隔多少字符折行 默认2\n              barBorderRadius: true, //柱图是否显示圆角，默认不显示\n              legendShow: true, // legend是否显示\n              legendCut: true, // legend换行\n              barLabelShow: true, // bar label是否显示  默认true\n              barWidth: 10, // bar label是否隐藏 默认15\n              top: \"5%\", // grid 上下左右值 默认5%\n              left: \"5%\",\n              right: \"5%\",\n              bottom: \"5%\",\n              legendPos: {\n                //图例位置\n                right: \"5%\",\n                top: \"5%\"\n              },\n              legendW: 10, //legend宽  默认25\n              legendH: 10, //legend高  默认14\n              legendGap: 10, //legend间距\n              legendIcon: 'rect', // legend图标形状\n              borderRadius: '50%', //legend的圆角\n              map: {\n                // ***数据映射\n                num: \"班子人数\",\n                age: \"平均年龄\"\n              },\n              addTooltip: {  // legend和图表不显示而tooltip显示的数据\n                \"add_holder\": \"持证人员\"\n              },\n              isLeftScale: true, // 左侧value轴是否取最小值\n              isRightScale: true, // 右侧value轴是否取最小值\n              // 以下为 line 才需要的参数\n              axis1Name: \"（人）\", // 左侧value轴name名称 默认''\n              axis2Name: \"（岁）\", // 右侧value轴name名称 默认''\n              splitLineShow: false, //value轴splitline是否显示\n              line: [\"age\", \"num\"], // ***line 包含的key值\n              isAverage: true, // line 是否需要平均markline\n              lineWidth: 2, // line宽度 默认1\n              tooltipPercent: true, // tooltip 是否带百分比 (需要数据支持,格式为:值|百分数, 1234|23.32)\n              tooltipShow: true,// tooltip是否展示\n              iscolor: true,\n              axisCategoryName: \"政府部门\", // 类目轴name名称 默认''\n              smooth: true, // 曲线是否平滑显示\n              showSymbol: true, // 曲线是否显示拐点\n              lineLabelShow: false, //曲线拐点 label是否隐藏 默认true\n              symbolSize: 5, // 曲线拐点的大小\n              lineShadowBlur: 20, // 曲线阴影宽度\n              lineShadowColor: options.colors.line[1],  // 曲线阴影颜色\n              lineShadowOffsetY: 15, //曲线阴影位移\n              lineOpacity: 0.5, // 曲线阴影透明度\n              tooltipType: \"shadow\", // 选中样式 shadow || line\n              axisLabelSize: 20, // label字号\n              legendSize: 20, // label字号\n            }\n          };\n        }\n      }\n    },\n    data() {\n      return {\n        myChart: null,\n        legendActive: true, //边框bar legend 状态\n        animation: true//是否开启开场动画，切换皮肤时禁用\n      };\n    },\n    mounted() {\n      this.init();\n      this.$once('hook:beforeDestroy', () => {\n        if (this.interval) {\n          clearInterval(this.interval);\n        }\n        this.myChart && this.myChart.dispose();\n      })\n    },\n    methods: {\n      init() {\n\n        if (this.params.data.length === 0) {\n          return;\n        }\n\n        if (this.myChart) {\n          this.myChart.dispose();\n          this.myChart = null;\n        }\n\n        let propData = [...this.params.data]; //深拷贝数据\n        let categoryData = []; //刻度值\n\n        let options = this.params.options;\n        //渐变方向\n        let linearGradient = options.isVertical ? [0, 1, 1, 0] : [0, 0, 0, 1];\n        // 获取keys数组(series数组)\n        let dataKeys = Object.keys(options.map);\n        // 是否全为line\n        let isAllLines = options.line\n          ? options.line.length === dataKeys.length\n          : false;\n        // 获取key对应的中文数组(legend数组)\n        this.legendData = Object.values(options.map);\n        //如果为重叠柱图需要引入legend背景图片\n        if (options.mode === \"overlap\" && options.legendBgSrc) {\n          let activeSrc = options.legendBgSrc.active;\n          let inActiveSrc = options.legendBgSrc.inActive;\n          this.activeLegendBg = require(`@/assets/${activeSrc}.png`);\n          this.inActiveLegendBg = require(`@/assets/${inActiveSrc}.png`);\n\n          this.legendData.forEach((item, index) => {\n            if (options.map[options.overlap] === item) {\n              this.legendData[index] = {\n                name: item,\n                icon:\n                  this.params.legendActive === undefined\n                    ? `image://${this.activeLegendBg}`\n                    : this.params.legendActive[item]\n                    ? `image://${this.activeLegendBg}`\n                    : `image://${this.inActiveLegendBg}`\n              };\n            }\n          });\n        }\n\n        //   let fixLegendData = [];\n        //   legendData.forEach((item, index) => {\n        //     if (options.legendCut && index == 1) {\n        //       fixLegendData.push(item);\n        //       fixLegendData.push(\"\"); //图例换行\n        //     } else {\n        //       fixLegendData.push(item);\n        //     }\n        //   });\n\n        let serirsArr = [];\n        let average = 0;\n        let percentObj = {}; //line百分比\n        if (options.tooltipPercent) {\n          // 为每个类目设置空数组\n          propData.forEach(item => {\n            percentObj[item[options.xName]] = [];\n          });\n        }\n\n        // 为每个类目填充相应的百分比\n        if (options.tooltipPercent) {\n          propData.forEach((item, index) => {\n            //  记录当前类目值\n            let name = item[options.xName];\n            for (let key in item) {\n              //跳过key为name 和 genre\n              if (key !== \"name\" && key !== \"genre\") {\n                percentObj[name].push(item[key].split(\"|\")[1]);\n              }\n            }\n          });\n        }\n        // line和bar的index\n        let lineIndex = 0,\n          barIndex = 0,\n          stack = 1;\n        //循环series数组\n        dataKeys.forEach((item, index) => {\n          //每个series数据\n          let data = [];\n          let map = options.map;\n\n\n          //填充数据\n          propData.forEach(innerItem => {\n\n            if (options.tooltipPercent) {\n              data.push(innerItem[item].split(\"|\")[0]);\n            } else {\n              data.push(innerItem[item]);\n            }\n          });\n          //每个系列的平均数\n          average = options.isAverage\n            ? data.reduce((x, y) => +x + +y) / propData.length\n            : 0;\n\n          let series = {};\n          //判断图表类型\n          if (options.line && options.line.includes(item)) {\n            // lineIndex = 0;\n            //如果line的legend尾部是'比','度','率'为右侧轴\n            this.isRightAxis =\n              map[item].endsWith(\"比\") ||\n              map[item].endsWith(\"度\") ||\n              map[item].endsWith(\"率\");\n            series = {\n              name: map[item],\n              type: \"line\",\n              yAxisIndex: isAllLines ? 0 : this.isRightAxis ? 1 : 0, //全为line 取左侧y轴\n              label: {\n                show: false\n              },\n              symbolSize: options.symbolSize ? options.symbolSize : 5,\n              symbol: \"circle\",\n              showSymbol: options.showSymbol === undefined ? false : options.showSymbol, //是否显示折线上的点\n              smooth: options.smooth === undefined ? false : options.smooth, // 是否平滑\n              // hoverAnimation: false,\n              itemStyle: {\n                normal: {\n                  label: {\n                    show:\n                      options.lineLabelShow === undefined\n                        ? true\n                        : options.lineLabelShow,\n                    fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n                    formatter: this.isRightAxis ? \"{c}%\" : \"{c}\"\n                  },\n                  // shadowColor: options.gradientColor[index][1],\n                  // shadowBlur: 15,\n                  color:\n                    options.colors && options.colors.line\n                      ? this.$STANDARD.getColor(\n                      options.colors.line[lineIndex],\n\n                      [0, 1, 1, 0],\n                      echarts\n                      )\n                      : \"\"\n                },\n                emphasis: {\n                  label: {\n                    show: true,\n                    fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n                  },\n                  borderColor:\n                    options.colors && options.colors.line\n                      ? this.$STANDARD.colorToRgba(\n                      options.colors.line[lineIndex],\n                      0.3\n                      )\n                      : \"rgba(255,255,255,.3)\",\n                  borderWidth: 10\n                }\n              },\n              lineStyle: {\n                // 线性渐变，前四个参数分别是 x0, y0, x2, y2, 范围从 0 - 1，相当于在图形包围盒中的百分比，如果 globalCoord 为 `true`，则该四个值是绝对的像素位置\n                color:\n                  options.colors && options.colors.line\n                    ? this.$STANDARD.getColor(\n                    options.colors.line[lineIndex++],\n                    // linearGradient,\n                    [0, 0, 0, 1],\n                    echarts\n                    )\n                    : \"\",\n                width: options.lineWidth ? options.lineWidth : 3,\n                shadowBlur: options.lineShadowBlur ? options.lineShadowBlur : 0,\n                shadowColor: options.lineShadowColor ? options.lineShadowColor : 'none',\n                shadowOffsetY: options.lineShadowOffsetY ? options.lineShadowOffsetY : 0,\n                opacity: options.lineOpacity ? options.lineOpacity : 1,\n              },\n              //平均线\n              markLine: {\n                symbolSize: 10,\n                label: {\n                  normal: {\n                    show: true,\n                    color: \"#fff\",\n                    fontSize: 20\n                  }\n                },\n                data: [\n                  [\n                    {\n                      symbol: \"line\",\n                      symbolSize: \"0\",\n                      x: options.isAverage ? \"6.7%\" : \"\",\n                      yAxis: average\n                    },\n                    {\n                      symbol: \"line\",\n                      symbolSize: \"0\",\n                      x: \"95%\",\n                      yAxis: average\n                    }\n                  ]\n                ],\n                lineStyle: {\n                  normal: {\n                    width: 2,\n                    type: \"solid\",\n                    color: \"#FF507B\"\n                  }\n                }\n              },\n              data: data\n            };\n          } else {\n            series = {\n              name: map[item],\n              type: \"bar\",\n              stack: options.mode === \"stack\" ? stack : stack++,\n              yAxisIndex: 0,\n              xAxisIndex:\n                options.mode === \"overlap\" && item === options.overlap ? 1 : 0,\n              barWidth: options.barWidth ? options.barWidth : \"auto\",\n              //同series柱图间距\n              barGap: options.barGaps ? options.barGaps : \"50%\",\n              //不同series之间的间距\n              // barCategoryGap: \"50%\",\n              label: {\n                show:\n                  options.barLabelShow === undefined ? true : options.barLabelShow,\n                position: options.barLabelOptions ? options.barLabelOptions : (options.isVertical ? options.categoryInverse ? 'left' : 'right' : ''),\n                fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n                textStyle: {\n                  color: options.itemLabelColor ? options.itemLabelColor : \"#fff\"\n                }\n                // ,\n              },\n              itemStyle: {\n                normal: {\n                  barBorderRadius:\n                    options.barBorderRadius === undefined\n                      ? 0\n                      : options.barBorderRadius,\n                  color:\n                    options.mode !== \"overlap\" || options.overlap !== item\n                      ? options.colors && options.colors.bar\n                      ? options.colorisarry ?\n                        function (params) {\n                          let colorList = options.colors.bar ?\n                            options.colors.bar : [\n                              \"#fa2b7d\",\n                              \"#ff5463\",\n                              \"#ff874a\",\n                              \"#f1825f\",\n                              \"#c64aa7\",\n                              \"#9a23e6\",\n                              \"#7537fb\",\n                              \"#5660fe\",\n                              \"#4ac0ff\",\n                              \"#4ae6ff\"\n                            ];\n                          return colorList[params.dataIndex];\n                        }\n                        : this.$STANDARD.getColor(\n                          options.colors.bar[barIndex++],\n                          linearGradient,\n                          echarts\n                        )\n                      : \"\"\n                      : \"transparent\",\n                  borderColor:\n                    options.mode === \"overlap\" && options.overlap === item\n                      ? options.colors && options.colors.bar\n                      ? this.$STANDARD.getColor(\n                        options.colors.bar[barIndex++],\n                        linearGradient,\n                        echarts\n                      )\n                      : \"\"\n                      : \"transparent\",\n                  borderWidth: 2,\n\n                }\n              },\n              emphasis: {\n                label: {\n                  show: options.barLabelShow === undefined ? true : options.barLabelShow,\n                  fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n                }\n              },\n              data: data\n            };\n          }\n          serirsArr.push(series);\n        });\n\n        //值轴\n        let axisValue = [\n          {\n            show: options.axisValueShow,\n            type: \"value\",\n            name: options.axis1Name ? options.axis1Name : \"\",\n            nameLocation: options.nameLocation ? \"start\" : \"end\",\n            nameTextStyle: {\n              color: options.YaxisNameColor ? options.YaxisNameColor : \"#ff517f\",\n              fontSize: options.axisLabelSize ? options.axisLabelSize : 14,\n              fontWeight: 'bold',\n              padding: [0, 45, 0, 0]\n            },\n            splitNumber: options.splitNumber ? options.splitNumber : 5,\n            position: options.isVertical && options.axisValuePosition ? 'top' : 'bottom',\n            inverse: options.categoryInverse,\n            scale: options.isLeftScale ? true : false,\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              show: options.isVertical && options.axisLabel ? false : true,\n              margin: 10,\n              fontSize: 14,\n              color: (value, index) => {\n                let arr = [];\n                let num = options.splitNumber ? options.splitNumber : 5;\n                if (index < num) {\n                  for (let i = 0; i < num; i++) {\n                    arr.push(0)\n                  }\n                  let gradientC = gradientColor(arr, \"#fdc48d\", \"#ff517f\");\n                  return gradientC(index)\n                } else {\n                  return \"#ff517f\"\n                }\n              },\n              // color: options.axisLabelColor? options.axisLabelColor : this.$STANDARD(this.styleType).xAxisColor,\n              // //轴与标签的距离\n              // margin: 15,\n              // fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n            },\n            axisLine: {\n              show: false\n            },\n            splitLine: {\n              show: options.isVertical && options.splitLine ? false : options.splitLineShow === undefined ? options.axisValueShow : options.splitLineShow,\n              lineStyle: {\n                type: 'dashed',\n                color: \"#2c344c\" //网格线颜色（所有图表需要统一）\n              }\n            }\n          },\n          {\n            show: options.axisValueShow,\n            type: \"value\",\n            name: options.axis2Name ? options.axis2Name : \"\",\n            nameTextStyle: {\n              color: this.$STANDARD.xAxisColor,\n              fontSize: 20\n            },\n            scale: options.isRightScale ? true : false,\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              color: this.$STANDARD.xAxisColor,\n              //轴与标签的距离\n              margin: 15,\n              fontSize: 20,\n              formatter: this.isRightAxis ? \"{value}%\" : \"{value}\"\n            },\n            axisLine: {\n              show: false\n            },\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: this.$STANDARD.splitLineColor //网格线颜色（所有图表需要统一）\n              }\n            }\n          }\n        ];\n\n        //类目轴数据\n        for (let item of propData) {\n          if (item.code) {\n            categoryData.push({value: item[options.xName], id: item.code});\n          } else {\n            categoryData.push(item[options.xName]);\n          }\n        }\n        // x轴长度大于等于15 dataZoom 出现\n        let dataZoomShow = categoryData.length >= 100 ? true : false;\n        if (options.isVertical) {\n          dataZoomShow = false;\n        }\n        //类目轴\n        let axisCategory = [\n          {\n            type: \"category\", //类目轴\n            data: categoryData,\n            inverse: options.isVertical ? true : false,\n            axisTick: {\n              show: false\n            },\n            position: options.categoryInverse ? \"right\" : \"left\",\n            triggerEvent: true,\n            name: options.axisCategoryName ? options.axisCategoryName : \"\",\n            nameLocation: options.isVertical && options.nameLocation ? \"start\" : \"end\",\n            nameTextStyle: {\n              color: this.$STANDARD.xAxisColor,\n              fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n            },\n            axisLabel: {\n              interval: 0,\n              rotate: options.rotate ? options.rotate : 0,\n              // color: this.$STANDARD.xAxisColor,\n              color: \"#fff\",\n              inside: options.XasisLabelInside !== undefined ? options.XasisLabelInside : false,\n              padding: options.XasisLabelPad ? options.XasisLabelPad : 0,\n              fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n              lineHeight: options.XaxisLabelLH ? options.XaxisLabelLH : 14,\n              height: options.XaxisLabelH ? options.XaxisLabelH : 30,\n              //轴与标签的距离\n              margin: 15,\n              formatter: params => {\n\n                let res = \"\";\n                let name = \"\";\n                //label换行\n                if (options.categoryBr) {\n                  name = \"\";\n                  let brNum = options.brNum ? options.brNum : 1;\n                  for (let i = 0; i < params.length; i++) {\n                    name += params[i];\n                    if (i % brNum == brNum - 1) name += \"\\n\";\n                  }\n                  res = name;\n                } else {\n                  res = params;\n                }\n                return res;\n              },\n              // rich: {\n              //   value: {\n              //     lineHeight: 16,\n              //     fontSize: 20,\n              //   }\n              // }\n            },\n            //底线颜色\n            axisLine: {\n              show: options.axisLineShow ? true : false,\n              lineStyle: {\n                color: \"#a1a1b4\"\n              }\n            },\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: this.$STANDARD.splitLineColor\n              }\n            }\n          },\n          {\n            show: false,\n            type: \"category\", //类目轴\n            data: categoryData\n          }\n        ];\n\n        // 显示滚动轴过滤\n        let dataZoom = [\n          {\n            show: dataZoomShow,\n            type: \"slider\",\n            backgroundColor: \"rgba(70,235,255,0.1)\",\n            fillerColor: \"rgba(70,235,255,0.3)\",\n            borderColor: \"rgba(70,235,255,0.6)\",\n            xAxisIndex: [0, 1],\n\n            filterMode: \"filter\",\n            start: 0,\n            end: 100,\n            textStyle: {\n              color: \"#fff\"\n            },\n            handleIcon:\n              \"M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z\",\n            handleSize: \"80%\",\n            handleStyle: {\n              color: \"#fff\",\n              shadowBlur: 3,\n              shadowColor: \"rgba(0, 0, 0, 0.6)\",\n              shadowOffsetX: 2,\n              shadowOffsetY: 2\n            }\n          }\n        ];\n\n        this.myChart = echarts.init(this.$refs.chartEl);\n        this.option = {\n          tooltip: {\n            show: options.tooltipShow === undefined ? true : options.tooltipShow,\n            trigger: \"axis\",\n            backgroundColor: this.$STANDARD.tooltipBackgroundColor,\n            borderColor: this.$STANDARD.tooltipBorderColor,\n            // borderWidth: 1,\n            padding: 12,\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: options.tooltipType ? options.tooltipType : \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n            },\n            formatter: function (params) {\n              var result = params[0].name + \"<br/>\";\n\n              if (options.mode === \"overlap\") {\n                params.unshift(params.pop());\n              }\n              if (options.addTooltip) {\n                let name = params[0].name;\n                let dataItem = propData.filter(item => {\n                  return item[options.xName] === name;\n                })[0];\n                for (const n in options.addTooltip) {\n                  if (options.addTooltip.hasOwnProperty(n)) {\n                    params.push({\n                      seriesName: options.addTooltip[n],\n                      value: dataItem[n]\n                    });\n                  }\n                }\n              }\n              params.forEach(function (item, index) {\n                let lastChar = item.seriesName.charAt(item.seriesName.length - 1);\n\n                // 数据名称以\"率\",\"度\"或者\"比\"结尾的加上百分号\n                if (lastChar !== \"率\" && lastChar !== \"度\" && lastChar !== \"比\") {\n                  result += `${item.marker}${item.seriesName} : ${item.value}</br>`;\n                } else {\n                  result += `${item.marker}${item.seriesName} : ${item.value}%</br>`;\n                }\n              });\n              return result;\n            }\n          },\n          legend: {\n            show: options.legendShow,\n            data: this.legendData,\n            itemGap: options.legendGap ? options.legendGap : 10,\n            top: options.legendPos ? options.legendPos.top : \"3%\",\n            right: options.legendPos ? options.legendPos.right : \"5%\",\n            itemWidth: options.legendW ? options.legendW : 25,\n            itemHeight: options.legendH ? options.legendH : 14,\n            icon: options.legendIcon === \"undefined\" ? 'rect' : options.legendIcon,\n            borderRadius: options.borderRadius ? options.borderRadius : 0,\n            selected: this.params.legendActive ? this.params.legendActive : {},\n            //   formatter: name => {\n            //     let fix = \"\";\n            //     fix = options.legendCut ? `{title|${name}}` : name;\n            //     return fix;\n            //   },\n            textStyle: {\n              fontSize: options.legendSize ? options.legendSize : 20,\n              //跟随图标颜色\n              // color: () => {\n              //   return ''\n              // },\n              color: options.legendColor ? options.legendColor : this.$STANDARD.legendColor,\n              rich: {\n                title: {\n                  width: 233,\n                  fontSize: 20,\n                  color: this.$STANDARD.legendColor\n                }\n              }\n            }\n          },\n          grid: {\n            left: options.left ? options.left : \"5%\",\n            right: options.right ? options.right : \"5%\",\n            top: options.top ? options.top : \"5%\",\n            // bottom: options.bottom ? options.bottom : '5%',\n            bottom: dataZoomShow ? \"6%\" : options.bottom ? options.bottom : '5%',\n            containLabel: true,\n          },\n          label: {\n            show: true,\n            position: options.isVertical ? \"right\" : \"top\",\n            distance: 10,\n            color: this.$STANDARD.xAxisColor,\n            fontSize: 20,\n            zlevel: 10,\n          },\n          xAxis: options.isVertical ? axisValue : axisCategory,\n          yAxis: options.isVertical ? axisCategory : axisValue,\n          series: serirsArr,\n          dataZoom: dataZoom,\n          animation: this.animation,\n          // animationEasing: \"elasticOut\",\n          animationDelay: function (idx) {\n            // 越往后的数据延迟越大\n            return idx * 50;\n          }\n        };\n\n        this.myChart.setOption(this.option);\n\n        // 下钻页面\n        this.myChart.on(\"click\", params => {\n          let _this = this;\n\n          if (params.componentType === \"series\") {\n            params.allData = {\n              data: propData,\n              params: params,\n            };\n            _this.$emit(\"canvasClick\", params.allData);\n            _this.$emit(\"departmentClick\", params.name);\n          }\n          if (params.componentType === \"yAxis\") {\n            params.name = params.value;\n            categoryData.filter(item => {\n              if (item.value == params.name) {\n                params.id = item.id;\n              }\n            })\n            params.allData = {\n              data: propData,\n              params: params,\n            };\n            _this.$emit(\"canvasClick\", params.allData);\n          }\n        });\n        this.legendselectchanged();\n      },\n\n      //边框bar legend 点击其背景图切换\n      legendselectchanged() {\n        this.myChart.on(\"legendselectchanged\", params => {\n          let options = this.params.options;\n          let selected = params.selected;\n          this.$emit(\"changeLegend\", selected);\n\n          if (options.mode === \"overlap\") {\n            // 点击的legend name和边框bar name相等 && 其legend处于激活状态\n            if (\n              params.name === options.map[options.overlap] &&\n              this.legendActive\n            ) {\n              this.legendActive = !this.legendActive;\n              // this.imgSrc = require(\"@/assets/legendInactive.png\");\n              this.legendData.forEach((item, index) => {\n                if (typeof item === \"object\") {\n                  this.legendData[index].icon = `image://${\n                    this.inActiveLegendBg\n                    }`;\n                }\n              });\n              this.myChart.setOption({\n                legend: {\n                  data: this.legendData\n                }\n              });\n              // 点击的legend name和边框bar name相等 && 其legend处于未激活状态\n            } else if (\n              params.name === options.map[options.overlap] &&\n              !this.legendActive\n            ) {\n              this.legendActive = !this.legendActive;\n              //this.imgSrc = require(\"@/assets/legendActive.png\");\n              this.legendData.forEach((item, index) => {\n                if (typeof item === \"object\") {\n                  this.legendData[index].icon = `image://${this.activeLegendBg}`;\n                }\n              });\n              this.myChart.setOption({\n                legend: {\n                  data: this.legendData\n                }\n              });\n            }\n          }\n        });\n      },\n\n    },\n    watch: {\n      animateFlag: {\n        handler(newVal, oldVal) {\n          this.init();\n        },\n        deep: true\n      },\n      'params.data': {\n        handler(newVal, oldVal) {\n          this.init();\n        },\n        deep: true\n      }\n    }\n  };\n</script>\n\n<style lang=\"stylus\" scoped>\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarLine.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarLine.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BarLine.vue?vue&type=template&id=095b8c83&scoped=true&\"\nimport script from \"./BarLine.vue?vue&type=script&lang=js&\"\nexport * from \"./BarLine.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"095b8c83\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"incNumber\"},[_vm._v(_vm._s(_vm.number))])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\n  @auth:lcw\n  数字递增组件\n  修改：@lyq 去掉组件id 增加{{number}}\n-->\n\n<template>\n  <div class=\"incNumber\">{{number}}</div>\n</template>\n\n<script>\n  export default {\n    name: \"index\",\n    props: {\n      // 数值\n      incNumber: {\n        type: [Number, String],\n        default() {\n          return 0\n        }\n      }\n    },\n    data() {\n      return {\n        number: 0\n      }\n    },\n    created() {\n      this.init();\n    },\n    methods: {\n      init() {\n        this.NumAutoPlusAnimation({\n          time: 3000,\n          num: this.incNumber,\n          regulator: 100\n        });\n      },\n      //数字自增到某一值动画参数（目标元素,自定义配置）\n      NumAutoPlusAnimation(options) {\n        options = options || {};\n\n        let\n          // $this = document.getElementById(targetEle),\n          // time = options.time || $this.data('time'), //总时间--毫秒为单位\n          time = options.time || 10, //总时间--毫秒为单位\n          //  finalNum = options.num || $this.data('value'), //要显示的真实数值\n          finalNum = options.num === undefined ? 0 : options.num, //上面那行报错\n          //finalNum = options.num || 10, //要显示的真实数值\n          regulator = options.regulator || 100, //调速器，改变regulator的数值可以调节数字改变的速度\n\n          step = finalNum / (time / regulator), /*每30ms增加的数值--*/\n          decimalSplit,\n          decimalNum,\n          count = 0, //计数器\n          initial = 0;\n\n        if (finalNum % 1 !== 0) {\n          decimalSplit = String(finalNum).split(\".\");\n          decimalNum = decimalSplit[1].length;\n        }\n\n        let timer = setInterval(() => {\n          count = count + step;\n\n          if (count >= finalNum) {\n            clearInterval(timer);\n            count = finalNum;\n          }\n\n          //t未发生改变的话就直接返回\n          //避免调用text函数，提高DOM性能\n          let t = 0;\n          // 判断最终数值是否是整数\n          if (finalNum % 1 === 0) {\n            t = Math.floor(count);\n          } else {\n            t = count.toFixed(decimalNum);\n          }\n\n          if (t === initial) return;\n\n          initial = t;\n          // 格式化数值（添加千分位符）\n          // let formatNumber = this.formatMoney(initial, 1);\n          // $this.innerHTML = initial;\n          this.number = initial;\n        }, 50);\n      },\n\n      /*\n       * formatMoney(s,type)\n       * 功能：数值按千位逗号分隔\n       * 参数：s，需要格式化的金额数值.\n       * 参数：type,判断格式化后的金额是否需要小数位（0/1）.\n       * 返回：返回格式化后的数值字符串.\n       */\n      formatMoney(s, type) {\n        if (/[^0-9\\.]/.test(s))\n          return \"0.00\";\n        if (s == null || s == \"null\" || s == \"\")\n          return \"0.00\";\n        s = s.toString().replace(/^(\\d*)$/, \"$1.\");\n        s = (s + \"00\").replace(/(\\d*\\.\\d\\d)\\d*/, \"$1\");\n        s = s.replace(\".\", \",\");\n        var re = /(\\d)(\\d{3},)/;\n        while (re.test(s))\n          s = s.replace(re, \"$1,$2\");\n        s = s.replace(/,(\\d\\d)$/, \".$1\");\n        if (type == 0) {\n          var a = s.split(\".\");\n          if (a[1] == \"00\") {\n            s = a[0];\n          }\n        }\n        return s;\n      }\n    },\n    watch: {\n      incNumber: {\n        handler(newVal, oldVal) {\n          this.number = newVal;\n          this.init();\n        },\n        deep: true\n      }\n    }\n\n  }\n</script>\n\n<style lang=\"stylus\" scoped>\n  .incNumber\n    display inline-block\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=cfc5ad0e&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=cfc5ad0e&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"cfc5ad0e\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}