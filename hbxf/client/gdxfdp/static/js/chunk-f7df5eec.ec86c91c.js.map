{"version":3,"sources":["webpack:///./src/views/xfxs/sanJiViews/lmwt.vue?52cf","webpack:///src/views/xfxs/sanJiViews/lmwt.vue","webpack:///./src/views/xfxs/sanJiViews/lmwt.vue?f671","webpack:///./src/views/xfxs/sanJiViews/lmwt.vue","webpack:///./node_modules/core-js/modules/es.array.reduce.js","webpack:///./src/components/line/LinesR.vue?f904","webpack:///src/components/line/LinesR.vue","webpack:///./src/components/line/LinesR.vue?92bb","webpack:///./src/components/line/LinesR.vue","webpack:///./src/components/bar/BarLine.vue?18bb","webpack:///src/components/bar/BarLine.vue","webpack:///./src/components/bar/BarLine.vue?d9e9","webpack:///./src/components/bar/BarLine.vue","webpack:///./node_modules/core-js/internals/array-reduce.js","webpack:///./src/components/pie/BasicPie.vue?16ec","webpack:///src/components/pie/BasicPie.vue","webpack:///./src/components/pie/BasicPie.vue?d44f","webpack:///./src/components/pie/BasicPie.vue","webpack:///./src/views/xfxs/sanJiViews/lmwt.vue?f4a5"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","rszbPieParams","zsLineParams","dqfbPieParams","_v","nlBarParams","xfmdPieParams","tswtPieParams","staticRenderFns","component","$","$reduce","left","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","1","target","proto","forced","reduce","callbackfn","arguments","length","undefined","directives","name","rawName","value","params","data","expression","ref","style","width","canvasStyle","height","$STANDARD","loadingBgColor","xAxis","push","item","dataKeys","forEach","maxArr","lineDataArr","code","categoryData","options","xName","aFunction","toObject","IndexedObject","toLength","createMethod","IS_RIGHT","that","argumentsLength","memo","O","self","index","i","TypeError","module","exports","right"],"mappings":"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","file":"static/js/chunk-f7df5eec.ec86c91c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"content\"},[_c('div',{staticClass:\"c-top\"},[_c('div',{staticClass:\"ct-left\"},[_c('ctitle',{attrs:{\"title\":'联名网信人数占比'}}),_c('div',{staticClass:\"chart\"},[_c('BasicPie',{attrs:{\"params\":_vm.rszbPieParams}})],1)],1),_c('div',{staticClass:\"ct-right\"},[_c('ctitle',{attrs:{\"title\":'联名网信人数占比走势'}}),_c('div',{staticClass:\"chart\"},[_c('LinesR',{attrs:{\"params\":_vm.zsLineParams}})],1)],1)]),_c('div',{staticClass:\"c-bottom\"},[_c('div',{staticClass:\"cb-left\"},[_c('ctitle',{attrs:{\"title\":'信访群体'}}),_c('div',{staticClass:\"inner\"},[_c('div',{staticClass:\"chart\"},[_c('loopPie',{attrs:{\"params\":_vm.dqfbPieParams}}),_c('p',{staticClass:\"chartTitle\"},[_vm._v(\"地区分布\")])],1),_c('div',{staticClass:\"chart\"},[_c('barline',{attrs:{\"params\":_vm.nlBarParams}}),_c('p',{staticClass:\"chartTitle\"},[_vm._v(\"年龄统计\")])],1)])],1),_c('div',{staticClass:\"cb-right\"},[_c('ctitle',{attrs:{\"title\":'信访诉求'}}),_c('div',{staticClass:\"inner\"},[_c('div',{staticClass:\"chart\"},[_c('pie-chart3D',{attrs:{\"params\":_vm.xfmdPieParams}}),_c('p',{staticClass:\"chartTitle\"},[_vm._v(\"信访目的占比\")])],1),_c('div',{staticClass:\"chart\"},[_c('loopPie',{attrs:{\"params\":_vm.tswtPieParams}}),_c('p',{staticClass:\"chartTitle\"},[_vm._v(\"投诉问题占比\")])],1)])],1)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"wrapper\">\r\n    <div class=\"content\">\r\n      <div class=\"c-top\">\r\n        <div class=\"ct-left\">\r\n          <ctitle :title=\"'联名网信人数占比'\"></ctitle>\r\n          <div class=\"chart\">\r\n            <BasicPie :params=\"rszbPieParams\"></BasicPie>\r\n          </div>\r\n        </div>\r\n        <div class=\"ct-right\">\r\n          <ctitle :title=\"'联名网信人数占比走势'\"></ctitle>\r\n          <div class=\"chart\">\r\n            <LinesR :params=\"zsLineParams\"></LinesR>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"c-bottom\">\r\n        <div class=\"cb-left\">\r\n          <ctitle :title=\"'信访群体'\"></ctitle>\r\n          <div class=\"inner\">\r\n            <div class=\"chart\">\r\n              <loopPie :params=\"dqfbPieParams\"></loopPie>\r\n              <p class=\"chartTitle\">地区分布</p>\r\n            </div>\r\n            <div class=\"chart\">\r\n              <barline :params=\"nlBarParams\"></barline>\r\n              <p class=\"chartTitle\">年龄统计</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"cb-right\">\r\n          <ctitle :title=\"'信访诉求'\"></ctitle>\r\n          <div class=\"inner\">\r\n            <div class=\"chart\">\r\n              <pie-chart3D :params=\"xfmdPieParams\"></pie-chart3D>\r\n              <p class=\"chartTitle\">信访目的占比</p>\r\n            </div>\r\n            <div class=\"chart\">\r\n              <loopPie :params=\"tswtPieParams\"></loopPie>\r\n              <p class=\"chartTitle\">投诉问题占比</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {get_http} from \"@/api/index\";\r\n  import ctitle from \"@/components/title/index\";\r\n  import LinesR from \"@/components/line/LinesR\";\r\n  import loopPie from \"@/components/pie/LoopPie\";\r\n  import PieChart3D from \"@/components/pie/PieChart3D\";\r\n  import barline from \"@/components/bar/BarLine\";\r\n  import BasicPie from \"@/components/pie/BasicPie\";\r\n\r\n  export default {\r\n    name: \"jjf\",\r\n    components: {\r\n      ctitle,\r\n      LinesR,\r\n      loopPie,\r\n      PieChart3D,\r\n      barline,\r\n      BasicPie\r\n    },\r\n    data() {\r\n      return {\r\n        // 联名网信人数占比\r\n        rszbPieParams: {\r\n          canvasStyle: {\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n          },\r\n          data: [],\r\n          options: {\r\n            colors: this.$STANDARD.gradientColors,\r\n            title: \"\",\r\n            insidePercent:true,\r\n            radius: [\"45%\", \"60%\"],\r\n            center: [\"50%\", \"50%\"],\r\n            labelShow:true,\r\n            labelRich: {\r\n              b: this.fontSize(0.18),\r\n              d: this.fontSize(0.24),\r\n              bHeight: this.fontSize(0.3)\r\n            },\r\n            length: 20,\r\n            length2: 50,\r\n            borderColor: \"#0B2244\",\r\n            bRichPadding: [30, -50, 0, -50],\r\n            borderWidth: 0,\r\n            itemLabelShow: true, //数据扇区label是否显示\r\n            //图例\r\n            legend: {\r\n              show: false\r\n            },\r\n            rich: {\r\n              bfontsize: \"12%\" //文字大小\r\n            },\r\n            labelSize: \"20%\", // label字号\r\n            rollFlag: true\r\n          }\r\n        },\r\n        // 联名网信人数占比走势\r\n        zsLineParams: {\r\n          data: [],\r\n          colors: [\r\n            {\r\n              line: \"#e11770\",\r\n              start: \"rgba(225, 23, 112, .5)\",\r\n              end: \"rgba(225, 23, 112, .5)\"\r\n            },\r\n            {\r\n              line: \"#ffb435\",\r\n              start: \"rgba(255, 180, 53, .5)\",\r\n              end: \"rgba(255, 180, 53, .5)\"\r\n            },\r\n            {\r\n              line: \"#1a82f7\",\r\n              start: \"rgba(26, 130, 247, .5)\",\r\n              end: \"rgba(26, 130, 247, .5)\"\r\n            },\r\n            {\r\n              line: \"#a1d871\",\r\n              start: \"rgba(161, 216, 113, .5)\",\r\n              end: \"rgba(161, 216, 113, .5)\"\r\n            },\r\n            {\r\n              line: \"#ff825b\",\r\n              start: \"rgba(255, 130, 91, .5)\",\r\n              end: \"rgba(255, 130, 91, .5)\"\r\n            }\r\n          ],\r\n          option: {\r\n            rollFlag:false,\r\n            axisLabelColor: \"#fff\",\r\n            yaxisLabelColor: \"#82d8ff\",\r\n            legendShow:true,\r\n            splitLineShow: true,\r\n            axisLabelShow: true,\r\n            axisTickShow: false,\r\n            axisCategoryName: \"\",\r\n            axisYName: \"件次\",\r\n            axisLabelSize: 14,\r\n            scales: true,\r\n            axisLabelFontSize: 16,\r\n            yaxisLabelFontSize: 14,\r\n            Tofixed: false,\r\n            smooth: true,\r\n            areaShow: 0,\r\n            smoothMonotone: \"none\",\r\n            dataZoomshow: false,\r\n            legendIcon: \"rect\",\r\n            left: \"5%\",\r\n            right: \"10%\",\r\n            top: \"15%\",\r\n            bottom: \"10%\",\r\n            legendTop: \"2%\",\r\n            legendRight: \"10%\"\r\n          },\r\n          canvasStyle: {\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n          },\r\n          map: {\r\n            value: \"集体访\"\r\n          },\r\n          xName: \"name\",\r\n        },\r\n        // 地区分布\r\n        dqfbPieParams: {\r\n          canvasStyle: {\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n          },\r\n          data: [],\r\n          options: {\r\n            colors:this.$STANDARD.pieMoreColors,\r\n            radius: [\"50%\", \"65%\"],\r\n            center: [\"50%\", \"50%\"],\r\n            centerRadius: [\"39%\", \"40%\"],\r\n            labelRich: {\r\n              b: this.fontSize(0.2),\r\n              d: this.fontSize(0.2)\r\n            },\r\n            borderWidth: 0,\r\n            length: 20,\r\n            length2: 70,\r\n            itemLabelShow: true, //数据扇区label是否显示\r\n            //图例\r\n            legend: {\r\n              show: false\r\n            },\r\n            rich: {\r\n              bfontsize: \"16%\" //文字大小\r\n            },\r\n            labelSize: \"22%\", // label字号\r\n            rollFlag: true\r\n          }\r\n        },\r\n        // 年龄统计\r\n        nlBarParams: {\r\n          data: [],\r\n          canvasStyle: {\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n          },\r\n          options: {\r\n            title: \"年龄统计\",\r\n            xName: \"name\", //x轴字段\r\n            axisValueShow: true,\r\n            splitLineShow: false, //value轴splitline是否显示\r\n            axis1Name:\"人次\",\r\n            axisLabelSize: 14, // label字号\r\n            left: \"7%\",\r\n            right: \"5%\",\r\n            top: \"15%\",\r\n            bottom: \"15%\",\r\n            barWidth: 30,\r\n            barLabelOptions: \"top\",\r\n            barLabelShow: true, //柱状图数量值显示\r\n            axisLabelColor: \"#82d8ff\",\r\n            itemLabelColor: \"rgba(0, 176, 255, .8)\",\r\n            colors: {\r\n              bar: [\r\n                [\"#d2f69d\", \"#79cc7a\"]\r\n              ]\r\n            },\r\n            map: {\r\n              value: \"人数\"\r\n            }\r\n          }\r\n        },\r\n        // 信访目的占比\r\n        xfmdPieParams: {\r\n          data: [],\r\n          angle: 20,\r\n          radius: \"30%\",\r\n          labelRadius:25,\r\n          fontSize: this.fontSize(0.16),\r\n          color: this.$STANDARD.pieColors,\r\n          styleObj: {\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n          }\r\n        },\r\n        // 投诉问题占比\r\n        tswtPieParams: {\r\n          canvasStyle: {\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n          },\r\n          data: [],\r\n          options: {\r\n            bgSize:220,\r\n            colors:this.$STANDARD.pieColors,\r\n            title: \"\",\r\n            radius: [\"45%\", \"55%\"],\r\n            center: [\"50%\", \"50%\"],\r\n            centerRadius: [\"40%\", \"41%\"],\r\n            labelRich: {\r\n              b: this.fontSize(0.2),\r\n              d: this.fontSize(0.2),\r\n              bHeight: this.fontSize(0.3)\r\n            },\r\n            length: 20,\r\n            length2: 50,\r\n            borderColor: \"#0B2244\",\r\n            bRichPadding: [30, -50, 0, -50],\r\n            borderWidth: 0,\r\n            itemLabelShow: true, //数据扇区label是否显示\r\n            //图例\r\n            legend: {\r\n              show: false\r\n            },\r\n            rich: {\r\n              bfontsize: \"12%\" //文字大小\r\n            },\r\n            labelSize: \"20%\", // label字号\r\n            threeLevel:true,\r\n            rollFlag: true\r\n          }\r\n        },\r\n      };\r\n    },\r\n    mounted() {\r\n      this.getAPI(this.date);\r\n    },\r\n    methods: {\r\n      getAPI(date){\r\n        // 1.联名网信人数占比\r\n        get_http(\"xfxsWxLmwxRszbPie\", {day:`[${date.startDate},${date.endDate}]`})\r\n          .then(res => {\r\n            this.rszbPieParams.data = res.data.data;\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n        // 2.联名网信人数占比走势\r\n        get_http(\"xfxsWxLmwxZsLine\", {day:`[${date.startDate},${date.endDate}]`})\r\n          .then(res => {\r\n            this.zsLineParams.map = res.data.map;\r\n            this.zsLineParams.data = res.data.data;\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n        // 3.地区分布\r\n        get_http(\"xfxsWxLmwxDqfbPie\", {day:`[${date.startDate},${date.endDate}]`})\r\n          .then(res => {\r\n            this.dqfbPieParams.data = res.data.data;\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n        // 4.年龄统计\r\n        get_http(\"xfxsWxLmwxNlBar\", {day:`[${date.startDate},${date.endDate}]`})\r\n          .then(res => {\r\n            this.nlBarParams.data = res.data.data;\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n        // 5.信访目的占比\r\n        get_http(\"xfxsWxLmwxXfmdPie\", {day:`[${date.startDate},${date.endDate}]`})\r\n          .then(res => {\r\n            this.xfmdPieParams.data = res.data.data;\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n        // 6.投诉问题占比\r\n        get_http(\"xfxsWxLmwxTswtPie\", {day:`[${date.startDate},${date.endDate}]`})\r\n          .then(res => {\r\n            this.tswtPieParams.data = res.data.data;\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n      },\r\n      fontSize(res) {\r\n        let docEl = document.documentElement,\r\n          clientWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n        if (!clientWidth) return;\r\n        let fontSize = 100 * (clientWidth / 1920);\r\n        return res * fontSize;\r\n      }\r\n    },\r\n    computed: {\r\n      date() {\r\n        return this.$store.state.date;\r\n      }\r\n    },\r\n    watch: {\r\n      date(val) {\r\n        this.getAPI(val);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n  .wrapper\r\n    position relative\r\n    top 0.8rem\r\n    height calc(100% - 0.8rem)\r\n\r\n    .content\r\n      width 100%\r\n      height 100%\r\n      display flex\r\n      flex-direction column\r\n      padding .2rem .3rem\r\n      box-sizing border-box\r\n\r\n      .c-top\r\n        flex 1\r\n        display flex\r\n        .chart\r\n          flex 1\r\n          width 100%\r\n          height calc(100% - 0.28rem)\r\n        .ct-left\r\n          flex 1\r\n          height 100%\r\n        .ct-right\r\n          flex 2\r\n          height 100%\r\n          .timeChange\r\n            top 0\r\n            right 1.5rem\r\n      .c-bottom\r\n        flex 1\r\n        background url('../../../assets/c-bottom-bg.png') no-repeat center\r\n        background-size 100% 100%\r\n        position relative\r\n        display flex\r\n        box-sizing border-box\r\n        padding .4rem  .3rem 0 .3rem\r\n        margin 0 .2rem .1rem .2rem\r\n        .chartTitle\r\n          position absolute\r\n          width auto\r\n          bottom 0.1rem\r\n          left 50%\r\n          color #fff\r\n          font-weight bold\r\n          font-size 0.2rem\r\n          transform translate(-50%, 0)\r\n        .inner\r\n          display flex\r\n          width 100%\r\n          height calc(100% - 0.28rem)\r\n          .chart\r\n            flex 1\r\n            width 100%\r\n            height 94%\r\n            position relative\r\n        .cb-left\r\n          flex 1\r\n          height 100%\r\n        .cb-right\r\n          flex 1\r\n          height 100%\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./lmwt.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./lmwt.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./lmwt.vue?vue&type=template&id=103ebe1a&scoped=true&\"\nimport script from \"./lmwt.vue?vue&type=script&lang=js&\"\nexport * from \"./lmwt.vue?vue&type=script&lang=js&\"\nimport style0 from \"./lmwt.vue?vue&type=style&index=0&id=103ebe1a&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"103ebe1a\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $reduce = require('../internals/array-reduce').left;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('reduce');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('reduce', { 1: 0 });\n\n// `Array.prototype.reduce` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(!_vm.params.data.length),expression:\"!params.data.length\"}],ref:\"chartEl\",style:({width : _vm.params.canvasStyle.width, height: _vm.params.canvasStyle.height}),attrs:{\"element-loading-background\":_vm.$STANDARD.loadingBgColor}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n  echarts折线图\r\n  @auth yw\r\n-->\r\n<template>\r\n  <div\r\n    v-loading=\"!params.data.length\"\r\n    :element-loading-background=\"$STANDARD.loadingBgColor\"\r\n    ref=\"chartEl\"\r\n    :style=\"{width : params.canvasStyle.width, height: params.canvasStyle.height}\"\r\n  ></div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from \"echarts\";\r\n  import {gradientColor} from \"@/utils/gradient\";\r\n\r\n  export default {\r\n    name: \"lines\",\r\n    props: {\r\n      animateFlag: Boolean,\r\n      maps: Object,\r\n      params: {\r\n        type: Object,\r\n        dafault() {\r\n          return {\r\n            option: {\r\n              legendShow: true, //图例是否显示\r\n              legendfontSize: 14, //图例字体大小\r\n              XaxisLineShow: false, //x轴线是否显示\r\n              xaxisLineColor: \"rgba(255,255,255,0.1)\", //x轴线的颜色\r\n              axisLabelShow: false, //x轴名是否显示\r\n              axisLabelFontSize: 12, //x轴字体大小\r\n              yaxisLabelFontSize: 14, //y轴字体大小\r\n              yaxisLabelColor: \"#fff\",\r\n              axisLabelColor: \"#fff\",\r\n              boundaryGap: true, //坐标轴是否留白\r\n              xAxisBr: false, //x轴标签是否换行\r\n              YaxisLineShow: true, //y轴线是否显示\r\n              yaxisLineColor: \"rgba(255,255,255,0.1)\", //y轴线的颜色\r\n              YaxisaxisLabelShow: true, //y轴刻度是否显示\r\n              scales: true, //y轴刻度最小值是否为0\r\n              lineWidth: 2, //指示竖线的宽度\r\n              Lcolor: \"red\", //指示竖线的颜色\r\n              splitLineShow: true, //网格线是否显示\r\n              axisTickShow: true, //x轴刻度是否显示,\r\n              showK: true, //y轴刻度值是否以k为单位\r\n              legenditemWidth: 100, //图例icon的宽度\r\n              //Tofixed:false, //y轴刻度保留小数点\r\n              dataZoomshow: false, //是否显示datazoom\r\n              dataZoomstart: 0,\r\n              dataZoomend: 100,\r\n              legendTop: \"5%\", //图例高度\r\n              showSymbol: false, //是否显示折点上的圆点\r\n              axisCategoryName: \"\",\r\n              nameLocation: \"start\",\r\n              XaxisNameColor: \"#fff\",\r\n              axisLabelSize: 16,\r\n              legendItemgap: 20 //legend间距\r\n            },\r\n            colors: []\r\n          };\r\n        }\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        colors: [\r\n          {\r\n            line: \"rgba(209, 48, 20, 1)\",\r\n            start: \"rgba(62, 73, 67, .3)\",\r\n            end: \"rgba(78, 173, 254, 0)\"\r\n          },\r\n          {\r\n            line: \"rgba(29, 209, 200, 1)\",\r\n            start: \"rgba(242, 104, 210, .3)\",\r\n            end: \"rgba(188, 60, 113, 0)\"\r\n          },\r\n          {\r\n            line: \"rgba(208, 45, 222, 1)\",\r\n            start: \"rgba(208, 45, 222, .3)\",\r\n            end: \"rgba(101, 30, 206, 0)\"\r\n          },\r\n          {\r\n            line: \"rgba(162, 227, 105, 1)\",\r\n            start: \"rgba(162, 227, 105, .3)\",\r\n            end: \"rgba(60, 234, 166, 0)\"\r\n          },\r\n\r\n          {\r\n            line: \"rgba(240, 151, 26, 1)\",\r\n            start: \"rgba(240, 151, 26, .3)\",\r\n            end: \"rgba(255, 88, 88, 0)\"\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    mounted() {\r\n      this.init();\r\n    },\r\n    methods: {\r\n      init() {\r\n        if (this.myChart) {\r\n          this.myChart.dispose();\r\n        }\r\n        if (this.params.data.length === 0) return;\r\n\r\n        let options = this.params.option;\r\n\r\n        // 数据暂存\r\n        let propData = this.params.data;\r\n        // let legendArr = this.params.legendArr;\r\n        let map = {};\r\n        if (this.maps) {\r\n          map = this.maps;\r\n        } else {\r\n          map = this.params.map;\r\n        }\r\n        // 获取keys数组\r\n        let dataKeys = Object.keys(map);\r\n        // console.log(dataKeys)\r\n        \r\n        // 获取key对应的中文数组\r\n        let legendData = Object.values(map);\r\n        // console.log(legendData)\r\n        // let newArr=[]\r\n        // let newObj={}\r\n        // for(var i=0;i<3;i++){\r\n        //   newObj[dataKeys[i]]=legendData[i]\r\n        //   newArr.push(newObj)\r\n        // }\r\n        \r\n        // newArr.splice(0,1)\r\n        // console.log(newArr)\r\n        let xAxis = [];\r\n        // 所有line数据数组\r\n        let lineDataArr = [];\r\n        // echarts series数据\r\n        let seriesArr = [];\r\n        // 根据legend设置每条line数据对应的key值\r\n        let maxArr = [];\r\n        dataKeys.forEach(value => {\r\n          lineDataArr[value] = [];\r\n        });\r\n\r\n        for (let [index, item] of propData.entries()) {\r\n          // x轴数据添加\r\n\r\n          xAxis.push(item[this.params.xName]);\r\n          dataKeys.forEach(value => {\r\n            maxArr.push(item[value]);\r\n            // 为每条line对应的数组添加数据\r\n            lineDataArr[value].push(item[value]);\r\n          });\r\n        }\r\n        let max = Math.max(...maxArr) + 100;\r\n        let min = Math.min(...maxArr) - 100;\r\n        if (min < 0) min = 0;\r\n\r\n        dataKeys.forEach((value, index) => {\r\n          let series = {\r\n            name: map[value],\r\n            type: \"line\",\r\n            smooth: options.smooth === undefined ? false : options.smooth,\r\n            smoothMonotone:\r\n              options.smooth && options.smoothMonotone\r\n                ? options.smoothMonotone\r\n                : \"none\",\r\n            symbolSize: 10,\r\n            symbol: \"circle\",\r\n            hoverAnimation: false,\r\n            showSymbol: options.showSymbol === undefined ? false : options.showSymbol, //是否显示折线上的点\r\n            itemStyle: {\r\n              normal: {\r\n                borderWidth: 2,\r\n                borderColor: \"#fff\",\r\n                color: this.params.colors[index].line\r\n              },\r\n              emphasis: {\r\n                // borderWidth: 3,\r\n                color: this.params.colors[index].line,\r\n                borderColor: this.params.colors[index].start,\r\n                borderWidth: 12\r\n              }\r\n            },\r\n            lineStyle: {\r\n              width: options.lineWidth === undefined ? 3 : options.lineWidth,\r\n              color: this.params.colors[index].line\r\n              //type:\"dotted\"\r\n            },\r\n            areaStyle: {\r\n              normal: {\r\n                opacity: options.areaShow === undefined ? true : options.areaShow,\r\n                color: new echarts.graphic.LinearGradient(\r\n                  0,\r\n                  0,\r\n                  0,\r\n                  1,\r\n                  [\r\n                    {\r\n                      offset: 0,\r\n                      color: this.params.colors[index].start\r\n                    },\r\n                    {\r\n                      offset: 1,\r\n                      color: this.params.colors[index].end\r\n                    }\r\n                  ],\r\n                  false\r\n                ),\r\n                shadowColor: \"rgba(0, 0, 0, 0.1)\",\r\n                shadowBlur: 10,\r\n              }\r\n            },\r\n            data: lineDataArr[value]\r\n          };\r\n          seriesArr.push(series);\r\n        });\r\n\r\n        this.myChart = echarts.init(this.$refs.chartEl);\r\n        this.option = {\r\n          // 鼠标悬浮时弹框样式（所有图表需统一）\r\n          tooltip: {\r\n            trigger: \"axis\",\r\n            backgroundColor: this.$STANDARD.tooltipBackgroundColor,\r\n            padding: [10, 20],\r\n            // axisPointer: {\r\n            //   type: \"line\",\r\n            //   lineStyle: {\r\n            //     // color: options.Lcolor ? options.Lcolor : \"#00d8d2\",\r\n            //     width: options.lineWidth ? options.lineWidth : 2\r\n            //   }\r\n            // },\r\n            formatter: function (params) {\r\n              var result = params[0].name + options.axisCategoryName + \"<br/>\";\r\n              params.forEach(function (item, index) {\r\n                let lastChar = item.seriesName.charAt(item.seriesName.length - 1);\r\n                // 数据名称以比的加上百分号\r\n                if (options.axisYName === '%') {\r\n                  result += `${item.marker} ${item.seriesName} : ${\r\n                    (item.value * 100).toFixed(2)\r\n                    }%</br>`;\r\n                } else {\r\n                  // result += `${item.marker} ${item.seriesName} : ${item.value.toLocaleString()}</br>`;\r\n                  result += `${item.marker} ${item.seriesName} : ${item.value}</br>`;\r\n                }\r\n              });\r\n              return result;\r\n            }\r\n          },\r\n          grid: {\r\n            left: options.left ? options.left : \"6%\",\r\n            right: options.right ? options.right : \"6%\",\r\n            bottom: options.bottom ? options.bottom : \"6%\",\r\n            top: options.top ? options.top : \"6%\",\r\n            containLabel: true\r\n          },\r\n          // label: {\r\n          //   show: false,\r\n          //   position: \"top\",\r\n          //   color: \"#fff\",\r\n          //   fontSize: 14,\r\n          //   zlevel: 10\r\n          // },\r\n          // emphasis: {\r\n          //   label: {\r\n          //     show: false,\r\n          //     formatter: params => {\r\n          //       let lastChar = params.seriesName.charAt(\r\n          //         params.seriesName.length - 1\r\n          //       );\r\n          //       // 数据名称以比的加上百分号\r\n          //       if (lastChar == \"比\" || lastChar == \"率\") {\r\n          //         return params.value.toFixed(2) + \"%\";\r\n          //       } else {\r\n          //         return params.value.toLocaleString();\r\n          //       }\r\n          //     }\r\n          //   }\r\n          // },\r\n          legend: {\r\n            icon: options.legendIcon ? options.legendIcon : \"roundRect\",\r\n            // itemWidth: 10, //图例的大小\r\n            show: options.legendShow === undefined ? true : options.legendShow,\r\n            itemWidth: 20,\r\n            itemHeight: 5,\r\n            color: \"#fff\",\r\n            itemGap: options.legendItemgap ? options.legendItemgap : 20,\r\n            right: options.legendRight ? options.legendRight : \"5%\",\r\n            top: options.legendTop ? options.legendTop : \"2%\",\r\n            textStyle: {\r\n              color: \"#fff\", //图例颜色\r\n              //fontSize: 14,\r\n              fontSize: options.legendfontSize ? options.legendfontSize : 18\r\n            },\r\n            data: legendData\r\n          },\r\n          xAxis: [\r\n            {\r\n              type: \"category\",\r\n              boundaryGap:\r\n                options.boundaryGap === undefined ? false : options.boundaryGap,\r\n              triggerEvent: true,\r\n              interval: 1,\r\n              data: xAxis,\r\n              name: options.axisCategoryName ? options.axisCategoryName : \"\",\r\n              nameLocation: options.nameLocation ? \"start\" : \"end\",\r\n              nameTextStyle: {\r\n                color: options.XaxisNameColor ? options.XaxisNameColor : \"#fff\",\r\n                fontSize: options.axisLabelSize ? options.axisLabelSize : 20\r\n              },\r\n              axisLabel: {\r\n                show: options.axisLabelShow ? true : false,\r\n                margin: 10,\r\n                fontSize: 16,\r\n                color: this.$STANDARD.xAxisColor,\r\n                formatter: params => {\r\n                  return options.xAxisBr ? params.split(\"\").join(\"\\n\") : params;\r\n                }\r\n              },\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  width: 2,\r\n                  color: this.$STANDARD.xAxisLineColor\r\n                }\r\n              },\r\n              axisTick: {\r\n                alignWithLabel: true,\r\n                //show: false,//x轴刻度是否显示\r\n                show: options.axisTickShow ? true : false,\r\n                inside: true //x轴刻度是否朝内\r\n              }\r\n            }\r\n          ],\r\n          yAxis: [\r\n            {\r\n              type: \"value\",\r\n              name: options.axisYName ? options.axisYName : \"\",\r\n              nameLocation: options.nameLocation ? \"start\" : \"end\",\r\n              nameTextStyle: {\r\n                color: options.YaxisNameColor ? options.YaxisNameColor : \"#ff517f\",\r\n                fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\r\n                fontWeight: 'bold',\r\n                padding: [0, 45, 0, 0]\r\n              },\r\n              //scale: true, //y轴最小值是否为0\r\n              scale: options.scales ? false : true,\r\n              // max: this.params.areaShow === undefined ? null : max,\r\n              max: this.params.axisMax === undefined ? null : this.params.axisMax,\r\n              // min: this.params.areaShow === undefined ? null : min,\r\n              min: this.params.axisMin === undefined ? null : this.params.axisMin,\r\n              splitNumber: options.splitNumber ? options.splitNumber : 5,\r\n              axisLabel: {\r\n                show: options.YaxisaxisLabelShow ? false : true,\r\n                margin: 10,\r\n                fontSize: 14,\r\n                color: (value, index) => {\r\n                  let arr = [];\r\n                  let num = options.splitNumber ? options.splitNumber : 5;\r\n                  if (index < num) {\r\n                    for (let i = 0; i < num; i++) {\r\n                      arr.push(0)\r\n                    }\r\n                    let gradientC = gradientColor(arr, \"#fdc48d\", \"#ff517f\");\r\n                    return gradientC(index)\r\n                  } else {\r\n                    return \"#ff517f\"\r\n                  }\r\n                },\r\n                formatter: (value) => {\r\n                  if (options.axisYName === '%') {\r\n                    return value * 100\r\n                  } else {\r\n                    return value\r\n                  }\r\n                }\r\n              },\r\n              axisLine: {\r\n                show: options.YaxisLineShow ? true : false,\r\n                width: 2,\r\n                type: \"dotted\",\r\n                color: this.$STANDARD.yAxisSplitLineColor\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              splitLine: {\r\n                show: options.splitLineShow ? true : false,\r\n                lineStyle: {\r\n                  type: 'dashed',\r\n                  color: \"#2c344c\" //网格线颜色（所有图表需要统一）\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          dataZoom: {\r\n            show: options.dataZoomshow ? true : false,\r\n            realtime: true, //拖动时实时更新\r\n            // backgroundColor: \"rgba(70,235,255,0.1)\",\r\n            fillerColor: \"rgba(70,235,255,0.3)\",\r\n            borderColor: \"rgba(70,235,255,0.6)\",\r\n            showDetail: false,\r\n            handleIcon:\r\n              \"M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z\",\r\n            handleSize: \"100%\",\r\n            bottom: 0,\r\n            height: 20,\r\n            start: options.dataZoomstart ? options.dataZoomstart : 0,\r\n            end: options.dataZoomend ? options.dataZoomend : 100\r\n\r\n            //itemWidth: options.legenditemWidth ? options.legenditemWidth : 10,\r\n          },\r\n          series: seriesArr\r\n        };\r\n        this.myChart.setOption(this.option);\r\n\r\n        if (this.params.option.rollFlag) {\r\n          this.chartMove();\r\n          this.myChart.on(\"mouseover\", params => {\r\n            this.params.option.rollFlag = false;\r\n            if (params.dataIndex === this.app.currentIndex) {\r\n              // 序号相同不取消高亮\r\n              return;\r\n            } else {\r\n              // 取消之前高亮的图形\r\n              this.myChart.dispatchAction({\r\n                type: \"downplay\",\r\n                dataIndex: this.app.currentIndex\r\n              });\r\n            }\r\n          });\r\n          this.myChart.on(\"mouseout\", params => {\r\n            this.params.option.rollFlag = true;\r\n          });\r\n        }\r\n\r\n        //柱图点击事件\r\n        this.myChart.on(\"click\", params => {\r\n          if (params.componentType === \"series\") {\r\n            this.$emit(\"departmentClick\", params.name);\r\n          } else {\r\n            this.$emit(\"departmentClick\", params.value);\r\n          }\r\n        });\r\n      },\r\n      chartMove() {\r\n        this.app = {};\r\n        this.app.currentIndex = -1;\r\n        if (this.interval) {\r\n          clearInterval(this.interval);\r\n        }\r\n        this.interval = setInterval(() => {\r\n          let dataLen = this.params.data.length;\r\n          if (this.params.option.rollFlag) {\r\n            // 取消之前高亮的图形\r\n            this.myChart.dispatchAction({\r\n              type: \"downplay\",\r\n              dataIndex: this.app.currentIndex\r\n            });\r\n            this.app.currentIndex = (this.app.currentIndex + 1) % dataLen;\r\n            // 高亮当前图形\r\n            this.myChart.dispatchAction({\r\n              type: \"highlight\",\r\n              dataIndex: this.app.currentIndex\r\n            });\r\n            this.myChart.dispatchAction({\r\n              type: \"showTip\",\r\n              seriesIndex: 0,\r\n              dataIndex: this.app.currentIndex\r\n            });\r\n          }\r\n        }, 2000);\r\n      }\r\n    },\r\n    computed: {\r\n      // realData() {\r\n      //   return this.params.data\r\n      // }\r\n    },\r\n    watch: {\r\n      animateFlag: {\r\n        handler(newVal, oldVal) {\r\n          this.init();\r\n        },\r\n        deep: true\r\n      },\r\n      'params.data': {\r\n        handler(newVal, oldVal) {\r\n          this.init();\r\n        },\r\n        deep: true\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped></style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LinesR.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LinesR.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LinesR.vue?vue&type=template&id=3d0b102f&scoped=true&\"\nimport script from \"./LinesR.vue?vue&type=script&lang=js&\"\nexport * from \"./LinesR.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3d0b102f\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(!_vm.params.data.length),expression:\"!params.data.length\"}],ref:\"chartEl\",style:({width : _vm.params.canvasStyle.width, height: _vm.params.canvasStyle.height}),attrs:{\"element-loading-background\":_vm.$STANDARD.loadingBgColor}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n  @auth:yw\r\n  echarts柱图折线图\r\n-->\r\n\r\n<template>\r\n  <div\r\n    v-loading=\"!params.data.length\"\r\n    :element-loading-background=\"$STANDARD.loadingBgColor\"\r\n    ref=\"chartEl\"\r\n    :style=\"{width : params.canvasStyle.width, height: params.canvasStyle.height}\"\r\n  ></div>\r\n</template>\r\n\r\n<script>\r\n  import * as echarts from \"echarts\";\r\n  import {gradientColor} from \"@/utils/gradient\";\r\n\r\n  export default {\r\n    name: \"barline\",\r\n    props: {\r\n      animateFlag: Boolean,\r\n      params: {\r\n        type: Object,\r\n        default() {\r\n          return {\r\n            canvasStyle: {\r\n              width: \"1000px\",\r\n              height: \"600px\"\r\n            },\r\n            data: [],\r\n            /*\r\n               *没有写默认值的都为false\r\n               *带***为必填\r\n               * */\r\n            options: {\r\n              mode: \"abreast\", // 柱图模式  abreast(并排) | overlap(重叠) | stack(堆叠)  默认并排 ***\r\n              overlap: \"investigators\", // ***如果mode为'abreast' (重叠) 此项为必填 值为重叠在底部数据的key值\r\n              legendBgSrc: {\r\n                // ***如果mode为'abreast' (重叠) 此项为必填\r\n                // 值为 #激活#和 #未激活# 的背景图片的图片名(图片需为png格式,路径需在assets下)\r\n                // 例: avtive.png 取active\r\n                active: \"legendActive\",\r\n                inActive: \"legendInactive\"\r\n              },\r\n              colors: {\r\n                //颜色  STANDARD对象后的值按图表的需求给,详情请看standard.js,\r\n                //如果值为字符串请放入数组内\r\n                bar: this.$STANDARD.gradientColors,\r\n                line: this.$STANDARD.gradientColors\r\n              },\r\n              itemLabelColor: \"#fff\",//bar label的颜色\r\n              rotate: 20,//x轴旋转角度\r\n              colorisarry: false,//每个柱图选择不同的颜色,\r\n              //colorsbox:[],//颜色数组\r\n              xName: \"name\", // ***类目轴key值\r\n              isVertical: true, // 类目轴是否垂直\r\n              nameLocation: true, //isVertical为true时,Value轴名称是否在右侧，默认显示\r\n              splitLine: true, //isVertical为true时,Value轴splitLine是否显示，默认显示\r\n              axisLabel: true, //isVertical为true时,Value轴label是否显示，默认显示\r\n              axisValuePosition: true, //isVertical为true时,Value轴显示位置\r\n              categoryInverse: true, // isVertical为true时,类目轴是否在右侧\r\n              axisValueShow: true, // value轴 label 和 splitLine是否显示\r\n              axisLineShow: true, // 类目轴底线是否显示\r\n              axisLabelColor: \" #fff\",\r\n              categoryBr: true, // 类目轴label是否折行\r\n              categoryCut: true, // 类目轴label最后三个字是否折行\r\n              brNum: 2, // 类目轴label每隔多少字符折行 默认2\r\n              barBorderRadius: true, //柱图是否显示圆角，默认不显示\r\n              legendShow: true, // legend是否显示\r\n              legendCut: true, // legend换行\r\n              barLabelShow: true, // bar label是否显示  默认true\r\n              barWidth: 10, // bar label是否隐藏 默认15\r\n              top: \"5%\", // grid 上下左右值 默认5%\r\n              left: \"5%\",\r\n              right: \"5%\",\r\n              bottom: \"5%\",\r\n              legendPos: {\r\n                //图例位置\r\n                right: \"5%\",\r\n                top: \"5%\"\r\n              },\r\n              legendW: 10, //legend宽  默认25\r\n              legendH: 10, //legend高  默认14\r\n              legendGap: 10, //legend间距\r\n              legendIcon: 'rect', // legend图标形状\r\n              borderRadius: '50%', //legend的圆角\r\n              map: {\r\n                // ***数据映射\r\n                num: \"班子人数\",\r\n                age: \"平均年龄\"\r\n              },\r\n              addTooltip: {  // legend和图表不显示而tooltip显示的数据\r\n                \"add_holder\": \"持证人员\"\r\n              },\r\n              isLeftScale: true, // 左侧value轴是否取最小值\r\n              isRightScale: true, // 右侧value轴是否取最小值\r\n              // 以下为 line 才需要的参数\r\n              axis1Name: \"（人）\", // 左侧value轴name名称 默认''\r\n              axis2Name: \"（岁）\", // 右侧value轴name名称 默认''\r\n              splitLineShow: false, //value轴splitline是否显示\r\n              line: [\"age\", \"num\"], // ***line 包含的key值\r\n              isAverage: true, // line 是否需要平均markline\r\n              lineWidth: 2, // line宽度 默认1\r\n              tooltipPercent: true, // tooltip 是否带百分比 (需要数据支持,格式为:值|百分数, 1234|23.32)\r\n              tooltipShow: true,// tooltip是否展示\r\n              iscolor: true,\r\n              axisCategoryName: \"政府部门\", // 类目轴name名称 默认''\r\n              smooth: true, // 曲线是否平滑显示\r\n              showSymbol: true, // 曲线是否显示拐点\r\n              lineLabelShow: false, //曲线拐点 label是否隐藏 默认true\r\n              symbolSize: 5, // 曲线拐点的大小\r\n              lineShadowBlur: 20, // 曲线阴影宽度\r\n              lineShadowColor: options.colors.line[1],  // 曲线阴影颜色\r\n              lineShadowOffsetY: 15, //曲线阴影位移\r\n              lineOpacity: 0.5, // 曲线阴影透明度\r\n              tooltipType: \"shadow\", // 选中样式 shadow || line\r\n              axisLabelSize: 20, // label字号\r\n              legendSize: 20, // label字号\r\n            }\r\n          };\r\n        }\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        myChart: null,\r\n        legendActive: true, //边框bar legend 状态\r\n        animation: true//是否开启开场动画，切换皮肤时禁用\r\n      };\r\n    },\r\n    mounted() {\r\n      this.init();\r\n      this.$once('hook:beforeDestroy', () => {\r\n        if (this.interval) {\r\n          clearInterval(this.interval);\r\n        }\r\n        this.myChart && this.myChart.dispose();\r\n      })\r\n    },\r\n    methods: {\r\n      init() {\r\n\r\n        if (this.params.data.length === 0) {\r\n          return;\r\n        }\r\n\r\n        if (this.myChart) {\r\n          this.myChart.dispose();\r\n          this.myChart = null;\r\n        }\r\n\r\n        let propData = [...this.params.data]; //深拷贝数据\r\n        let categoryData = []; //刻度值\r\n\r\n        let options = this.params.options;\r\n        //渐变方向\r\n        let linearGradient = options.isVertical ? [0, 1, 1, 0] : [0, 0, 0, 1];\r\n        // 获取keys数组(series数组)\r\n        let dataKeys = Object.keys(options.map);\r\n        // 是否全为line\r\n        let isAllLines = options.line\r\n          ? options.line.length === dataKeys.length\r\n          : false;\r\n        // 获取key对应的中文数组(legend数组)\r\n        this.legendData = Object.values(options.map);\r\n        //如果为重叠柱图需要引入legend背景图片\r\n        if (options.mode === \"overlap\" && options.legendBgSrc) {\r\n          let activeSrc = options.legendBgSrc.active;\r\n          let inActiveSrc = options.legendBgSrc.inActive;\r\n          this.activeLegendBg = require(`@/assets/${activeSrc}.png`);\r\n          this.inActiveLegendBg = require(`@/assets/${inActiveSrc}.png`);\r\n\r\n          this.legendData.forEach((item, index) => {\r\n            if (options.map[options.overlap] === item) {\r\n              this.legendData[index] = {\r\n                name: item,\r\n                icon:\r\n                  this.params.legendActive === undefined\r\n                    ? `image://${this.activeLegendBg}`\r\n                    : this.params.legendActive[item]\r\n                    ? `image://${this.activeLegendBg}`\r\n                    : `image://${this.inActiveLegendBg}`\r\n              };\r\n            }\r\n          });\r\n        }\r\n\r\n        //   let fixLegendData = [];\r\n        //   legendData.forEach((item, index) => {\r\n        //     if (options.legendCut && index == 1) {\r\n        //       fixLegendData.push(item);\r\n        //       fixLegendData.push(\"\"); //图例换行\r\n        //     } else {\r\n        //       fixLegendData.push(item);\r\n        //     }\r\n        //   });\r\n\r\n        let serirsArr = [];\r\n        let average = 0;\r\n        let percentObj = {}; //line百分比\r\n        if (options.tooltipPercent) {\r\n          // 为每个类目设置空数组\r\n          propData.forEach(item => {\r\n            percentObj[item[options.xName]] = [];\r\n          });\r\n        }\r\n\r\n        // 为每个类目填充相应的百分比\r\n        if (options.tooltipPercent) {\r\n          propData.forEach((item, index) => {\r\n            //  记录当前类目值\r\n            let name = item[options.xName];\r\n            for (let key in item) {\r\n              //跳过key为name 和 genre\r\n              if (key !== \"name\" && key !== \"genre\") {\r\n                percentObj[name].push(item[key].split(\"|\")[1]);\r\n              }\r\n            }\r\n          });\r\n        }\r\n        // line和bar的index\r\n        let lineIndex = 0,\r\n          barIndex = 0,\r\n          stack = 1;\r\n        //循环series数组\r\n        dataKeys.forEach((item, index) => {\r\n          //每个series数据\r\n          let data = [];\r\n          let map = options.map;\r\n\r\n\r\n          //填充数据\r\n          propData.forEach(innerItem => {\r\n\r\n            if (options.tooltipPercent) {\r\n              data.push(innerItem[item].split(\"|\")[0]);\r\n            } else {\r\n              data.push(innerItem[item]);\r\n            }\r\n          });\r\n          //每个系列的平均数\r\n          average = options.isAverage\r\n            ? data.reduce((x, y) => +x + +y) / propData.length\r\n            : 0;\r\n\r\n          let series = {};\r\n          //判断图表类型\r\n          if (options.line && options.line.includes(item)) {\r\n            // lineIndex = 0;\r\n            //如果line的legend尾部是'比','度','率'为右侧轴\r\n            this.isRightAxis =\r\n              map[item].endsWith(\"比\") ||\r\n              map[item].endsWith(\"度\") ||\r\n              map[item].endsWith(\"率\");\r\n            series = {\r\n              name: map[item],\r\n              type: \"line\",\r\n              yAxisIndex: isAllLines ? 0 : this.isRightAxis ? 1 : 0, //全为line 取左侧y轴\r\n              label: {\r\n                show: false\r\n              },\r\n              symbolSize: options.symbolSize ? options.symbolSize : 5,\r\n              symbol: \"circle\",\r\n              showSymbol: options.showSymbol === undefined ? false : options.showSymbol, //是否显示折线上的点\r\n              smooth: options.smooth === undefined ? false : options.smooth, // 是否平滑\r\n              // hoverAnimation: false,\r\n              itemStyle: {\r\n                normal: {\r\n                  label: {\r\n                    show:\r\n                      options.lineLabelShow === undefined\r\n                        ? true\r\n                        : options.lineLabelShow,\r\n                    fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\r\n                    formatter: this.isRightAxis ? \"{c}%\" : \"{c}\"\r\n                  },\r\n                  // shadowColor: options.gradientColor[index][1],\r\n                  // shadowBlur: 15,\r\n                  color:\r\n                    options.colors && options.colors.line\r\n                      ? this.$STANDARD.getColor(\r\n                      options.colors.line[lineIndex],\r\n\r\n                      [0, 1, 1, 0],\r\n                      echarts\r\n                      )\r\n                      : \"\"\r\n                },\r\n                emphasis: {\r\n                  label: {\r\n                    show: true,\r\n                    fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\r\n                  },\r\n                  borderColor:\r\n                    options.colors && options.colors.line\r\n                      ? this.$STANDARD.colorToRgba(\r\n                      options.colors.line[lineIndex],\r\n                      0.3\r\n                      )\r\n                      : \"rgba(255,255,255,.3)\",\r\n                  borderWidth: 10\r\n                }\r\n              },\r\n              lineStyle: {\r\n                // 线性渐变，前四个参数分别是 x0, y0, x2, y2, 范围从 0 - 1，相当于在图形包围盒中的百分比，如果 globalCoord 为 `true`，则该四个值是绝对的像素位置\r\n                color:\r\n                  options.colors && options.colors.line\r\n                    ? this.$STANDARD.getColor(\r\n                    options.colors.line[lineIndex++],\r\n                    // linearGradient,\r\n                    [0, 0, 0, 1],\r\n                    echarts\r\n                    )\r\n                    : \"\",\r\n                width: options.lineWidth ? options.lineWidth : 3,\r\n                shadowBlur: options.lineShadowBlur ? options.lineShadowBlur : 0,\r\n                shadowColor: options.lineShadowColor ? options.lineShadowColor : 'none',\r\n                shadowOffsetY: options.lineShadowOffsetY ? options.lineShadowOffsetY : 0,\r\n                opacity: options.lineOpacity ? options.lineOpacity : 1,\r\n              },\r\n              //平均线\r\n              markLine: {\r\n                symbolSize: 10,\r\n                label: {\r\n                  normal: {\r\n                    show: true,\r\n                    color: \"#fff\",\r\n                    fontSize: 20\r\n                  }\r\n                },\r\n                data: [\r\n                  [\r\n                    {\r\n                      symbol: \"line\",\r\n                      symbolSize: \"0\",\r\n                      x: options.isAverage ? \"6.7%\" : \"\",\r\n                      yAxis: average\r\n                    },\r\n                    {\r\n                      symbol: \"line\",\r\n                      symbolSize: \"0\",\r\n                      x: \"95%\",\r\n                      yAxis: average\r\n                    }\r\n                  ]\r\n                ],\r\n                lineStyle: {\r\n                  normal: {\r\n                    width: 2,\r\n                    type: \"solid\",\r\n                    color: \"#FF507B\"\r\n                  }\r\n                }\r\n              },\r\n              data: data\r\n            };\r\n          } else {\r\n            console.log('barGap', options.barGaps);\r\n            \r\n            series = {\r\n              name: map[item],\r\n              type: \"bar\",\r\n              stack: options.mode === \"stack\" ? stack : stack++,\r\n              yAxisIndex: 0,\r\n              xAxisIndex:\r\n                options.mode === \"overlap\" && item === options.overlap ? 1 : 0,\r\n              barWidth: options.barWidth ? options.barWidth : \"auto\",\r\n              //同series柱图间距\r\n              barGap: options.barGaps ? options.barGaps : \"50%\",\r\n              //不同series之间的间距\r\n              // barCategoryGap: \"50%\",\r\n              label: {\r\n                show:\r\n                  options.barLabelShow === undefined ? true : options.barLabelShow,\r\n                position: options.barLabelOptions ? options.barLabelOptions : (options.isVertical ? options.categoryInverse ? 'left' : 'right' : ''),\r\n                fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\r\n                textStyle: {\r\n                  color: options.itemLabelColor ? options.itemLabelColor : \"#fff\"\r\n                }\r\n                // ,\r\n              },\r\n              itemStyle: {\r\n                normal: {\r\n                  barBorderRadius:\r\n                    options.barBorderRadius === undefined\r\n                      ? 0\r\n                      : options.barBorderRadius,\r\n                  color:\r\n                    options.mode !== \"overlap\" || options.overlap !== item\r\n                      ? options.colors && options.colors.bar\r\n                      ? options.colorisarry ?\r\n                        function (params) {\r\n                          let colorList = options.colors.bar ?\r\n                            options.colors.bar : [\r\n                              \"#fa2b7d\",\r\n                              \"#ff5463\",\r\n                              \"#ff874a\",\r\n                              \"#f1825f\",\r\n                              \"#c64aa7\",\r\n                              \"#9a23e6\",\r\n                              \"#7537fb\",\r\n                              \"#5660fe\",\r\n                              \"#4ac0ff\",\r\n                              \"#4ae6ff\"\r\n                            ];\r\n                          return colorList[params.dataIndex];\r\n                        }\r\n                        : this.$STANDARD.getColor(\r\n                          options.colors.bar[barIndex++],\r\n                          linearGradient,\r\n                          echarts\r\n                        )\r\n                      : \"\"\r\n                      : \"transparent\",\r\n                  borderColor:\r\n                    options.mode === \"overlap\" && options.overlap === item\r\n                      ? options.colors && options.colors.bar\r\n                      ? this.$STANDARD.getColor(\r\n                        options.colors.bar[barIndex++],\r\n                        linearGradient,\r\n                        echarts\r\n                      )\r\n                      : \"\"\r\n                      : \"transparent\",\r\n                  borderWidth: 2,\r\n\r\n                }\r\n              },\r\n              emphasis: {\r\n                label: {\r\n                  show: options.barLabelShow === undefined ? true : options.barLabelShow,\r\n                  fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\r\n                }\r\n              },\r\n              data: data\r\n            };\r\n          }\r\n          serirsArr.push(series);\r\n        });\r\n\r\n        //值轴\r\n        let axisValue = [\r\n          {\r\n            show: options.axisValueShow,\r\n            type: \"value\",\r\n            name: options.axis1Name ? options.axis1Name : \"\",\r\n            nameLocation: options.nameLocation ? \"start\" : \"end\",\r\n            nameTextStyle: {\r\n              color: options.YaxisNameColor ? options.YaxisNameColor : \"#ff517f\",\r\n              fontSize: options.axisLabelSize ? options.axisLabelSize : 14,\r\n              fontWeight: 'bold',\r\n              padding: [0, 45, 0, 0]\r\n            },\r\n            splitNumber: options.splitNumber ? options.splitNumber : 5,\r\n            position: options.isVertical && options.axisValuePosition ? 'top' : 'bottom',\r\n            inverse: options.categoryInverse,\r\n            scale: options.isLeftScale ? true : false,\r\n            axisTick: {\r\n              show: false\r\n            },\r\n            axisLabel: {\r\n              show: options.isVertical && options.axisLabel ? false : true,\r\n              margin: 10,\r\n              fontSize: 14,\r\n              color: (value, index) => {\r\n                let arr = [];\r\n                let num = options.splitNumber ? options.splitNumber : 5;\r\n                if (index < num) {\r\n                  for (let i = 0; i < num; i++) {\r\n                    arr.push(0)\r\n                  }\r\n                  let gradientC = gradientColor(arr, \"#fdc48d\", \"#ff517f\");\r\n                  return gradientC(index)\r\n                } else {\r\n                  return \"#ff517f\"\r\n                }\r\n              },\r\n              // color: options.axisLabelColor? options.axisLabelColor : this.$STANDARD(this.styleType).xAxisColor,\r\n              // //轴与标签的距离\r\n              // margin: 15,\r\n              // fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\r\n            },\r\n            axisLine: {\r\n              show: false\r\n            },\r\n            splitLine: {\r\n              show: options.isVertical && options.splitLine ? false : options.splitLineShow === undefined ? options.axisValueShow : options.splitLineShow,\r\n              lineStyle: {\r\n                type: 'dashed',\r\n                color: \"#2c344c\" //网格线颜色（所有图表需要统一）\r\n              }\r\n            }\r\n          },\r\n          {\r\n            show: options.axisValueShow,\r\n            type: \"value\",\r\n            name: options.axis2Name ? options.axis2Name : \"\",\r\n            nameTextStyle: {\r\n              color: this.$STANDARD.xAxisColor,\r\n              fontSize: 20\r\n            },\r\n            scale: options.isRightScale ? true : false,\r\n            axisTick: {\r\n              show: false\r\n            },\r\n            axisLabel: {\r\n              color: this.$STANDARD.xAxisColor,\r\n              //轴与标签的距离\r\n              margin: 15,\r\n              fontSize: 20,\r\n              formatter: this.isRightAxis ? \"{value}%\" : \"{value}\"\r\n            },\r\n            axisLine: {\r\n              show: false\r\n            },\r\n            splitLine: {\r\n              show: false,\r\n              lineStyle: {\r\n                color: this.$STANDARD.splitLineColor //网格线颜色（所有图表需要统一）\r\n              }\r\n            }\r\n          }\r\n        ];\r\n\r\n        //类目轴数据\r\n        for (let item of propData) {\r\n          if (item.code) {\r\n            categoryData.push({value: item[options.xName], id: item.code});\r\n          } else {\r\n            categoryData.push(item[options.xName]);\r\n          }\r\n        }\r\n        // x轴长度大于等于15 dataZoom 出现\r\n        let dataZoomShow = categoryData.length >= 100 ? true : false;\r\n        if (options.isVertical) {\r\n          dataZoomShow = false;\r\n        }\r\n        //类目轴\r\n        let axisCategory = [\r\n          {\r\n            type: \"category\", //类目轴\r\n            data: categoryData,\r\n            inverse: options.isVertical ? true : false,\r\n            axisTick: {\r\n              show: false\r\n            },\r\n            position: options.categoryInverse ? \"right\" : \"left\",\r\n            triggerEvent: true,\r\n            name: options.axisCategoryName ? options.axisCategoryName : \"\",\r\n            nameLocation: options.isVertical && options.nameLocation ? \"start\" : \"end\",\r\n            nameTextStyle: {\r\n              color: this.$STANDARD.xAxisColor,\r\n              fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\r\n            },\r\n            axisLabel: {\r\n              interval: 0,\r\n              rotate: options.rotate ? options.rotate : 0,\r\n              // color: this.$STANDARD.xAxisColor,\r\n              color: \"#fff\",\r\n              inside: options.XasisLabelInside !== undefined ? options.XasisLabelInside : false,\r\n              padding: options.XasisLabelPad ? options.XasisLabelPad : 0,\r\n              fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\r\n              lineHeight: options.XaxisLabelLH ? options.XaxisLabelLH : 14,\r\n              height: options.XaxisLabelH ? options.XaxisLabelH : 30,\r\n              //轴与标签的距离\r\n              margin: 15,\r\n              formatter: params => {\r\n\r\n                let res = \"\";\r\n                let name = \"\";\r\n                //label换行\r\n                if (options.categoryBr) {\r\n                  name = \"\";\r\n                  let brNum = options.brNum ? options.brNum : 1;\r\n                  for (let i = 0; i < params.length; i++) {\r\n                    name += params[i];\r\n                    if (i % brNum == brNum - 1) name += \"\\n\";\r\n                  }\r\n                  res = name;\r\n                } else {\r\n                  res = params;\r\n                }\r\n                return res;\r\n              },\r\n              // rich: {\r\n              //   value: {\r\n              //     lineHeight: 16,\r\n              //     fontSize: 20,\r\n              //   }\r\n              // }\r\n            },\r\n            //底线颜色\r\n            axisLine: {\r\n              show: options.axisLineShow ? true : false,\r\n              lineStyle: {\r\n                color: \"#a1a1b4\"\r\n              }\r\n            },\r\n            splitLine: {\r\n              show: false,\r\n              lineStyle: {\r\n                color: this.$STANDARD.splitLineColor\r\n              }\r\n            }\r\n          },\r\n          {\r\n            show: false,\r\n            type: \"category\", //类目轴\r\n            data: categoryData\r\n          }\r\n        ];\r\n\r\n        // 显示滚动轴过滤\r\n        let dataZoom = [\r\n          {\r\n            show: dataZoomShow,\r\n            type: \"slider\",\r\n            backgroundColor: \"rgba(70,235,255,0.1)\",\r\n            fillerColor: \"rgba(70,235,255,0.3)\",\r\n            borderColor: \"rgba(70,235,255,0.6)\",\r\n            xAxisIndex: [0, 1],\r\n\r\n            filterMode: \"filter\",\r\n            start: 0,\r\n            end: 100,\r\n            textStyle: {\r\n              color: \"#fff\"\r\n            },\r\n            handleIcon:\r\n              \"M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z\",\r\n            handleSize: \"80%\",\r\n            handleStyle: {\r\n              color: \"#fff\",\r\n              shadowBlur: 3,\r\n              shadowColor: \"rgba(0, 0, 0, 0.6)\",\r\n              shadowOffsetX: 2,\r\n              shadowOffsetY: 2\r\n            }\r\n          }\r\n        ];\r\n\r\n        this.myChart = echarts.init(this.$refs.chartEl);\r\n        this.option = {\r\n          tooltip: {\r\n            show: options.tooltipShow === undefined ? true : options.tooltipShow,\r\n            trigger: \"axis\",\r\n            backgroundColor: this.$STANDARD.tooltipBackgroundColor,\r\n            borderColor: this.$STANDARD.tooltipBorderColor,\r\n            // borderWidth: 1,\r\n            padding: 12,\r\n            axisPointer: {\r\n              // 坐标轴指示器，坐标轴触发有效\r\n              type: options.tooltipType ? options.tooltipType : \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\r\n            },\r\n            formatter: function (params) {\r\n              var result = params[0].name + \"<br/>\";\r\n\r\n              if (options.mode === \"overlap\") {\r\n                params.unshift(params.pop());\r\n              }\r\n              if (options.addTooltip) {\r\n                let name = params[0].name;\r\n                let dataItem = propData.filter(item => {\r\n                  return item[options.xName] === name;\r\n                })[0];\r\n                for (const n in options.addTooltip) {\r\n                  if (options.addTooltip.hasOwnProperty(n)) {\r\n                    params.push({\r\n                      seriesName: options.addTooltip[n],\r\n                      value: dataItem[n]\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n              params.forEach(function (item, index) {\r\n                let lastChar = item.seriesName.charAt(item.seriesName.length - 1);\r\n\r\n                // 数据名称以\"率\",\"度\"或者\"比\"结尾的加上百分号\r\n                if (lastChar !== \"率\" && lastChar !== \"度\" && lastChar !== \"比\") {\r\n                  result += `${item.marker}${item.seriesName} : ${item.value}</br>`;\r\n                } else {\r\n                  result += `${item.marker}${item.seriesName} : ${item.value}%</br>`;\r\n                }\r\n              });\r\n              return result;\r\n            }\r\n          },\r\n          legend: {\r\n            show: options.legendShow,\r\n            data: this.legendData,\r\n            itemGap: options.legendGap ? options.legendGap : 10,\r\n            top: options.legendPos ? options.legendPos.top : \"3%\",\r\n            right: options.legendPos ? options.legendPos.right : \"5%\",\r\n            itemWidth: options.legendW ? options.legendW : 25,\r\n            itemHeight: options.legendH ? options.legendH : 14,\r\n            icon: options.legendIcon === \"undefined\" ? 'rect' : options.legendIcon,\r\n            borderRadius: options.borderRadius ? options.borderRadius : 0,\r\n            selected: this.params.legendActive ? this.params.legendActive : {},\r\n            //   formatter: name => {\r\n            //     let fix = \"\";\r\n            //     fix = options.legendCut ? `{title|${name}}` : name;\r\n            //     return fix;\r\n            //   },\r\n            textStyle: {\r\n              fontSize: options.legendSize ? options.legendSize : 20,\r\n              //跟随图标颜色\r\n              // color: () => {\r\n              //   return ''\r\n              // },\r\n              color: options.legendColor ? options.legendColor : this.$STANDARD.legendColor,\r\n              rich: {\r\n                title: {\r\n                  width: 233,\r\n                  fontSize: 20,\r\n                  color: this.$STANDARD.legendColor\r\n                }\r\n              }\r\n            }\r\n          },\r\n          grid: {\r\n            left: options.left ? options.left : \"5%\",\r\n            right: options.right ? options.right : \"5%\",\r\n            top: options.top ? options.top : \"5%\",\r\n            // bottom: options.bottom ? options.bottom : '5%',\r\n            bottom: dataZoomShow ? \"6%\" : options.bottom ? options.bottom : '5%',\r\n            containLabel: true,\r\n          },\r\n          label: {\r\n            show: true,\r\n            position: options.isVertical ? \"right\" : \"top\",\r\n            distance: 10,\r\n            color: this.$STANDARD.xAxisColor,\r\n            fontSize: 20,\r\n            zlevel: 10,\r\n          },\r\n          xAxis: options.isVertical ? axisValue : axisCategory,\r\n          yAxis: options.isVertical ? axisCategory : axisValue,\r\n          series: serirsArr,\r\n          dataZoom: dataZoom,\r\n          animation: this.animation,\r\n          // animationEasing: \"elasticOut\",\r\n          animationDelay: function (idx) {\r\n            // 越往后的数据延迟越大\r\n            return idx * 50;\r\n          }\r\n        };\r\n\r\n        this.myChart.setOption(this.option);\r\n\r\n        // 下钻页面\r\n        this.myChart.on(\"click\", params => {\r\n          let _this = this;\r\n\r\n          if (params.componentType === \"series\") {\r\n            params.allData = {\r\n              data: propData,\r\n              params: params,\r\n            };\r\n            _this.$emit(\"canvasClick\", params.allData);\r\n            _this.$emit(\"departmentClick\", params.name);\r\n          }\r\n          if (params.componentType === \"yAxis\") {\r\n            params.name = params.value;\r\n            categoryData.filter(item => {\r\n              if (item.value == params.name) {\r\n                params.id = item.id;\r\n              }\r\n            })\r\n            params.allData = {\r\n              data: propData,\r\n              params: params,\r\n            };\r\n            _this.$emit(\"canvasClick\", params.allData);\r\n          }\r\n        });\r\n        this.legendselectchanged();\r\n      },\r\n\r\n      //边框bar legend 点击其背景图切换\r\n      legendselectchanged() {\r\n        this.myChart.on(\"legendselectchanged\", params => {\r\n          let options = this.params.options;\r\n          let selected = params.selected;\r\n          this.$emit(\"changeLegend\", selected);\r\n\r\n          if (options.mode === \"overlap\") {\r\n            // 点击的legend name和边框bar name相等 && 其legend处于激活状态\r\n            if (\r\n              params.name === options.map[options.overlap] &&\r\n              this.legendActive\r\n            ) {\r\n              this.legendActive = !this.legendActive;\r\n              // this.imgSrc = require(\"@/assets/legendInactive.png\");\r\n              this.legendData.forEach((item, index) => {\r\n                if (typeof item === \"object\") {\r\n                  this.legendData[index].icon = `image://${\r\n                    this.inActiveLegendBg\r\n                    }`;\r\n                }\r\n              });\r\n              this.myChart.setOption({\r\n                legend: {\r\n                  data: this.legendData\r\n                }\r\n              });\r\n              // 点击的legend name和边框bar name相等 && 其legend处于未激活状态\r\n            } else if (\r\n              params.name === options.map[options.overlap] &&\r\n              !this.legendActive\r\n            ) {\r\n              this.legendActive = !this.legendActive;\r\n              //this.imgSrc = require(\"@/assets/legendActive.png\");\r\n              this.legendData.forEach((item, index) => {\r\n                if (typeof item === \"object\") {\r\n                  this.legendData[index].icon = `image://${this.activeLegendBg}`;\r\n                }\r\n              });\r\n              this.myChart.setOption({\r\n                legend: {\r\n                  data: this.legendData\r\n                }\r\n              });\r\n            }\r\n          }\r\n        });\r\n      },\r\n\r\n    },\r\n    watch: {\r\n      animateFlag: {\r\n        handler(newVal, oldVal) {\r\n          this.init();\r\n        },\r\n        deep: true\r\n      },\r\n      'params.data': {\r\n        handler(newVal, oldVal) {\r\n          this.init();\r\n        },\r\n        deep: true\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarLine.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarLine.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BarLine.vue?vue&type=template&id=c4233072&scoped=true&\"\nimport script from \"./BarLine.vue?vue&type=script&lang=js&\"\nexport * from \"./BarLine.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c4233072\",\n  null\n  \n)\n\nexport default component.exports","var aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aFunction(callbackfn);\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = toLength(O.length);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw TypeError('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.reduce` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(!_vm.params.data.length),expression:\"!params.data.length\"}],ref:\"chartEl\",style:({width:_vm.canvasStyle.width,height:_vm.canvasStyle.height}),attrs:{\"element-loading-background\":_vm.$STANDARD.loadingBgColor}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\necharts 基本饼图\r\n@auth:lyq\r\n-->\r\n<template>\r\n  <div\r\n    v-loading=\"!params.data.length\"\r\n    :element-loading-background=\"$STANDARD.loadingBgColor\"\r\n    ref=\"chartEl\"\r\n    :style=\"{width:canvasStyle.width,height:canvasStyle.height}\"\r\n  ></div>\r\n</template>\r\n\r\n<script>\r\n  import echarts from 'echarts'\r\n  // // 引入基本模板\r\n  // let echarts = require(\"echarts/lib/echarts\");\r\n  // //引入饼状图\r\n  // require(\"echarts/lib/chart/pie\");\r\n  //\r\n  // // 引入提示框和标题组件\r\n  // require(\"echarts/lib/component/tooltip\");\r\n  // require(\"echarts/lib/component/title\");\r\n  // require(\"echarts/lib/component/legend\");\r\n\r\n  export default {\r\n    name: \"PieProgress\",\r\n    props: {\r\n      params: {\r\n        type: Object,\r\n        default: function () {\r\n          return {\r\n            canvasStyle: {\r\n              width: \"500px\",\r\n              height: \"500px\"\r\n            },\r\n            options: {\r\n              //饼图间隔\r\n              placeHolder: true,\r\n              //饼图高亮\r\n              // blur: true,\r\n              titleShow: true,\r\n              //顺时针 默认为逆时针\r\n              clockwise: true,\r\n              //标签文字与百分比是否折行\r\n              labelCut: true,\r\n              //玫瑰图配置项，默认为空，不配置则为基本饼图\r\n              roseType: \"area\", //area,radius\r\n              //图例\r\n              legend: {\r\n                show: true,\r\n                left: 10,\r\n                top: 240,\r\n                orient: \"vertical\" //horizontal垂直\r\n              },\r\n              // 饼图大小\r\n              radius: [\"30%\", \"60%\"],\r\n              // 饼图位置，默认垂直水平居中\r\n              center: [\"50%\", \"50%\"],\r\n              // 是否让百分比显示在扇区里面，默认false显示在外面\r\n              insidePercent: false,\r\n              // 计量单位\r\n              unit: \"条\"\r\n            },\r\n            data: [\r\n              {\r\n                name: \"A\",\r\n                value: 10\r\n              },\r\n              {\r\n                name: \"B\",\r\n                value: 30\r\n              },\r\n              {\r\n                name: \"C\",\r\n                value: 70\r\n              }\r\n            ]\r\n          };\r\n        }\r\n      },\r\n      animateFlag: Boolean\r\n    },\r\n    data() {\r\n      return {\r\n        myChart: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.initChart();\r\n      this.$once('hook:beforeDestroy', () => {\r\n        if (this.interval) {\r\n          clearInterval(this.interval);\r\n        }\r\n        this.myChart && this.myChart.dispose();\r\n      })\r\n    },\r\n    methods: {\r\n      initChart() {\r\n        if (this.myChart) {\r\n          this.myChart.dispose();\r\n        }\r\n\r\n        this.myChart = echarts.init(this.$refs.chartEl);\r\n        /**\r\n         * 数据处理\r\n         */\r\n\r\n        if (this.params.data.length === 0) return;\r\n\r\n        let options = this.params.options;\r\n\r\n        //注意：使用sort排序会改变原数组，因此会循环处罚watch中的 params 变化。可用复制数据。\r\n        let chartData = [...this.params.data];\r\n\r\n        // chartData.sort((a, b) => b.value - a.value)\r\n\r\n        //根据总数算出每个扇区之间的间隙值\r\n        let total = 0,\r\n          placeHolder = 0;\r\n        chartData.forEach(item => {\r\n          total += item.value;\r\n        });\r\n        placeHolder = total * 0.015;\r\n\r\n        let rich = {\r\n            text: {\r\n              color: \"#fff\",\r\n              fontSize: 16,\r\n              align: \"center\",\r\n            },\r\n            value: {\r\n              color: \"#fff\",\r\n              // color: (params) => {\r\n              // return Array.isArray(options.colors[params.dataIndex])\r\n              //   ?\r\n              //   options.colors[params.dataIndex][0]\r\n              //   :\r\n              //   options.colors[params.dataIndex]\r\n              // },\r\n              fontSize: 20,\r\n              fontWeight: \"bold\",\r\n              align: \"center\",\r\n              lineHeight: 20,\r\n            },\r\n            percent: {\r\n              color: '#e03562',\r\n              fontSize: options.labelInnerSize ? options.labelInnerSize : 16,\r\n              fontWeight: \"bold\",\r\n              lineHeight: 30,\r\n              align: \"center\",\r\n              padding: [3, 0]\r\n            },\r\n            total: {\r\n              color: this.$STANDARD.mainColor,\r\n              // fontSize: this.$STANDARD.h2.fontSize\r\n            }\r\n          },\r\n          //饼图扇区间隔\r\n          placeHolderStyle = {\r\n            normal: {\r\n              label: {\r\n                show: false\r\n              },\r\n              labelLine: {\r\n                show: false\r\n              },\r\n              color: \"rgba(0, 0, 0, 0)\",\r\n              borderColor: \"rgba(0, 0, 0, 0)\",\r\n              borderWidth: 0\r\n            }\r\n          },\r\n          //处理过后的饼图数据\r\n          fixData = [],\r\n          //填充进饼图的数据\r\n          fullData = {},\r\n          //作为间隔的数据\r\n          placeHolderData = {},\r\n          color = options.colors;\r\n\r\n        for (let i = 0, length = chartData.length; i < length; i++) {\r\n          // 扇区数据\r\n          fullData = {\r\n            value: chartData[i].value,\r\n            name: chartData[i].name\r\n          };\r\n\r\n          // 间隔数据\r\n          placeHolderData = {\r\n            value: placeHolder,\r\n            name: \"\",\r\n            itemStyle: placeHolderStyle\r\n          };\r\n\r\n          // 饼图是否有间隔,选择放入不同的数据\r\n          options.placeHolder\r\n            ? fixData.push(fullData, placeHolderData)\r\n            : fixData.push(fullData);\r\n        }\r\n\r\n        // 数据扇区\r\n        let seriesItem = {\r\n            name: \"外部扇区\",\r\n            hoverAnimation: false,\r\n            type: \"pie\",\r\n            center: options.center || [\"50%\", \"50%\"],\r\n            //玫瑰饼图配置项\r\n            roseType: options.roseType ? options.roseType : false, //area,radius\r\n            radius: options.radius ? options.radius : [\"0%\", \"60%\"],\r\n            label: {\r\n              show: true,\r\n              position: \"outside\",\r\n              fontSize: options.labelFontSize ? options.labelFontSize : 16,\r\n              align: \"center\",\r\n              color: \"#fff\"\r\n              // formatter: '{text|{b}}',\r\n              // rich: rich\r\n            },\r\n            labelLine: {\r\n              show: true, //是否显示引导线\r\n              // length: 15,\r\n              // length2: 30,\r\n              lineStyle: {\r\n                color: this.$STANDARD.labelLineColor\r\n              }\r\n            },\r\n            itemStyle: {\r\n              color: (params) => {\r\n                return Array.isArray(options.colors[params.dataIndex])\r\n                  ?\r\n                  {\r\n                    type: 'linear',\r\n                    x: 0,\r\n                    y: 0,\r\n                    x2: 0,\r\n                    y2: 1,\r\n                    colorStops: [{\r\n                      offset: 0, color: options.colors[params.dataIndex][0] // 0% 处的颜色\r\n                    }, {\r\n                      offset: 1, color: options.colors[params.dataIndex][1]// 100% 处的颜色\r\n                    }],\r\n                    global: false // 缺省为 false\r\n                  }\r\n                  :\r\n                  options.colors[params.dataIndex]\r\n              },\r\n            },\r\n            data: fixData,\r\n            animationType: \"scale\",\r\n            animationEasing: \"elasticOut\",\r\n            animationDelay: function (idx) {\r\n              // 越往后的数据延迟越大\r\n              return idx * 80;\r\n            }\r\n          },\r\n          // 占位扇区，为了扇区内部能呈现百分比，而扇区外部能有标签\r\n          seriesBG = {\r\n            name: \"内部扇区\",\r\n            type: \"pie\",\r\n            center: options.center || [\"50%\", \"50%\"],\r\n            //玫瑰饼图配置项\r\n            roseType: options.roseType ? options.roseType : \"\", //area,radius\r\n            radius: options.radius ? options.radius : [\"0%\", \"60%\"],\r\n            itemStyle: {\r\n              color: (params) => {\r\n                return Array.isArray(options.colors[params.dataIndex])\r\n                  ?\r\n                  {\r\n                    type: 'linear',\r\n                    x: 0,\r\n                    y: 0,\r\n                    x2: 0,\r\n                    y2: 1,\r\n                    colorStops: [{\r\n                      offset: 0, color: options.colors[params.dataIndex][0] // 0% 处的颜色\r\n                    }, {\r\n                      offset: 1, color: options.colors[params.dataIndex][1]// 100% 处的颜色\r\n                    }],\r\n                    global: false // 缺省为 false\r\n                  }\r\n                  :\r\n                  options.colors[params.dataIndex]\r\n              },\r\n            },\r\n            label: {\r\n              normal: {\r\n                show: false,\r\n                position: \"center\",\r\n                // fontSize: options.labelInnerSize ? options.labelInnerSize : 16,\r\n                formatter: '{percent|{d}%}',\r\n                // formatter: [\r\n                //   '{value|{c}}',\r\n                //   '{percent|{d}%}'\r\n                // ].join('\\n'),\r\n                rich: rich\r\n              },\r\n              emphasis: {\r\n                show: true\r\n              }\r\n            },\r\n            labelLine: {\r\n              normal: {\r\n                show: false\r\n              }\r\n            },\r\n            data: fixData,\r\n            animationType: \"scale\",\r\n            animationEasing: \"elasticOut\",\r\n            animationDelay: function (idx) {\r\n              // 越往后的数据延迟越大\r\n              return idx * 80;\r\n            }\r\n          },\r\n          // 根据是否要有内部百分比来生成最后series\r\n          seriesObj = options.insidePercent\r\n            ? [seriesBG, seriesItem]\r\n            : [seriesItem];\r\n\r\n        //设置饼图的配置项\r\n        this.myChart.setOption({\r\n          tooltip: {\r\n            show: options.tooltip\r\n              ? options.tooltip.show === undefined\r\n                ? true\r\n                : options.tooltip.show\r\n              : true,\r\n            trigger: \"item\",\r\n            backgroundColor: this.$STANDARD.tooltipBackgroundColor,\r\n            textStyle: {\r\n              color: this.$STANDARD.tooltipColor\r\n            },\r\n            position: options.labelShow === false ? [\"33%\", \"35%\"] : null,\r\n            formatter: function (params) {\r\n              return params.name\r\n                ? `${params.marker}${params.name} : ${params.value}`\r\n                : \"\";\r\n            }\r\n          },\r\n          title: {\r\n            show: options.titleShow ? true : false,\r\n            text: \"{total|\" + total + \"}\" + \"\\n总数\",\r\n            left: \"center\",\r\n            top: \"center\",\r\n            padding: [12, 0],\r\n            textStyle: {\r\n              color: this.$STANDARD.titleColor,\r\n              // fontSize: this.$STANDARD.h3.fontSize,\r\n              align: \"center\",\r\n              rich: rich\r\n            }\r\n          },\r\n          legend: {\r\n            show: options.legend ? options.legend.show : false,\r\n            left: options.legend\r\n              ? options.legend.left\r\n                ? options.legend.left\r\n                : \"left\"\r\n              : \"left\",\r\n            top: options.legend\r\n              ? options.legend.top\r\n                ? options.legend.top\r\n                : \"top\"\r\n              : \"top\",\r\n            textStyle: {\r\n              // fontSize: this.$STANDARD.h4.fontSize,\r\n              color: this.$STANDARD.legendColor\r\n            },\r\n\r\n            orient: options.legend\r\n              ? options.legend.orient\r\n                ? options.legend.orient\r\n                : \"vertical\"\r\n              : \"vertical\"\r\n          },\r\n          series: seriesObj\r\n        });\r\n\r\n        let dataIndex = -1;\r\n        this.myChart.on(\"click\", params => {\r\n          let name = '';\r\n\r\n          // 取消之前高亮的图形\r\n          var dataLen = chartData.length;\r\n          for (let i = 0; i < dataLen; i++) {\r\n            // if (i != params.dataIndex) {\r\n            this.myChart.dispatchAction({\r\n              type: \"downplay\",\r\n              seriesIndex: 0,\r\n              dataIndex: i\r\n            });\r\n            // }\r\n          }\r\n          // 判断是否重复点击\r\n          if (dataIndex === params.dataIndex) {\r\n            dataIndex = -1;\r\n            name = '';\r\n          } else {\r\n            dataIndex = params.dataIndex;\r\n            // 高亮当前图形\r\n            this.myChart.dispatchAction({\r\n              type: \"highlight\",\r\n              seriesIndex: 0,\r\n              dataIndex: params.dataIndex\r\n            });\r\n            name = params.name;\r\n          }\r\n          this.$emit(\"change\", name);\r\n        });\r\n\r\n        if (this.params.options.rollFlag) {\r\n          this.chartMove();\r\n          this.myChart.on(\"mouseover\", params => {\r\n            // 鼠标移到内部圆环上时不触发事件\r\n            if (params.seriesIndex === 0) return;\r\n            this.params.options.rollFlag = false;\r\n            if (params.dataIndex === this.app.currentIndex) {\r\n              // 序号相同不取消高亮\r\n              return;\r\n            } else {\r\n              // 取消之前高亮的图形\r\n              this.myChart.dispatchAction({\r\n                type: \"downplay\",\r\n                seriesIndex: 0,\r\n                dataIndex: this.app.currentIndex\r\n              });\r\n            }\r\n          });\r\n          this.myChart.on(\"mouseout\", params => {\r\n            this.params.options.rollFlag = true;\r\n          });\r\n        } else {\r\n          let defaultHigh = this.params.options.defaultHigh;\r\n          if (defaultHigh !== \"\" && defaultHigh !== undefined) {\r\n            this.myChart.dispatchAction({\r\n              type: \"highlight\",\r\n              seriesIndex: 0,\r\n              dataIndex: defaultHigh\r\n            });\r\n            // let _this = this;\r\n            // _this.myChart.on(\"mouseover\", function (params) {\r\n            //   var dataLen = chartData.length;\r\n            //   for (var i = 0; i < dataLen; i++) {\r\n            //     if (i != params.dataIndex) {\r\n            //       _this.myChart.dispatchAction({\r\n            //         type: \"downplay\",\r\n            //         seriesIndex: 0,\r\n            //         dataIndex: i\r\n            //       });\r\n            //     }\r\n            //   }\r\n            // });\r\n            // _this.myChart.on(\"mouseout\", function (params) {\r\n            //   _this.myChart.dispatchAction({\r\n            //     type: \"highlight\",\r\n            //     seriesIndex: 0,\r\n            //     dataIndex: defaultHigh\r\n            //   });\r\n            // });\r\n          }\r\n        }\r\n      },\r\n      // 控制tootile 的自动轮播\r\n      chartMove() {\r\n        this.app = {};\r\n        this.app.currentIndex = -1;\r\n        if (this.interval) {\r\n          clearInterval(this.interval);\r\n        }\r\n        this.interval = setInterval(() => {\r\n          let dataLen = this.params.data.length;\r\n          if (this.params.options.rollFlag) {\r\n            // 取消之前高亮的图形\r\n            this.myChart.dispatchAction({\r\n              type: \"downplay\",\r\n              seriesIndex: 0,\r\n              dataIndex: this.app.currentIndex\r\n            });\r\n            this.app.currentIndex = (this.app.currentIndex + 1) % dataLen;\r\n            // 高亮当前图形\r\n            this.myChart.dispatchAction({\r\n              type: \"highlight\",\r\n              seriesIndex: 0,\r\n              dataIndex: this.app.currentIndex\r\n            });\r\n            this.myChart.dispatchAction({\r\n              type: \"showTip\",\r\n              seriesIndex: 0,\r\n              dataIndex: this.app.currentIndex\r\n            });\r\n          }\r\n        }, 2000);\r\n      },\r\n    },\r\n    computed: {\r\n      canvasStyle() {\r\n        return {\r\n          width: this.params.canvasStyle\r\n            ? this.params.canvasStyle.width\r\n            : \"500px\",\r\n          height: this.params.canvasStyle\r\n            ? this.params.canvasStyle.height\r\n            : \"500px\"\r\n        };\r\n      },\r\n    },\r\n    watch: {\r\n      animateFlag: {\r\n        handler(newVal, oldVal) {\r\n          this.initChart();\r\n        }\r\n      },\r\n      'params.data': {\r\n        handler(newVal, oldVal) {\r\n          this.initChart();\r\n        },\r\n        deep: true\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BasicPie.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BasicPie.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BasicPie.vue?vue&type=template&id=425e3e62&scoped=true&\"\nimport script from \"./BasicPie.vue?vue&type=script&lang=js&\"\nexport * from \"./BasicPie.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"425e3e62\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./lmwt.vue?vue&type=style&index=0&id=103ebe1a&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./lmwt.vue?vue&type=style&index=0&id=103ebe1a&lang=stylus&scoped=true&\""],"sourceRoot":""}