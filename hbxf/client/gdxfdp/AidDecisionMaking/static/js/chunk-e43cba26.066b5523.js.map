{"version":3,"sources":["webpack:///./src/components/bar/BarLine1.vue?9bc7","webpack:///src/components/bar/BarLine1.vue","webpack:///./src/components/bar/BarLine1.vue?aeec","webpack:///./src/components/bar/BarLine1.vue","webpack:///./src/components/timeChange/index.vue?9741","webpack:///./src/components/line/LinesR.vue?fdba","webpack:///src/components/line/LinesR.vue","webpack:///./src/components/line/LinesR.vue?92bb","webpack:///./src/components/line/LinesR.vue","webpack:///./src/components/bar/PerBar.vue?0909","webpack:///src/components/bar/PerBar.vue","webpack:///./src/components/bar/PerBar.vue?4586","webpack:///./src/components/bar/PerBar.vue","webpack:///./src/views/zdyztfx/erJiViews/szxjjaj.vue?9591","webpack:///./src/components/funnel/Funnel.vue?319a","webpack:///src/components/funnel/Funnel.vue","webpack:///./src/components/funnel/Funnel.vue?14b7","webpack:///./src/components/funnel/Funnel.vue","webpack:///./src/views/zdyztfx/erJiViews/szxjjaj.vue?7840","webpack:///src/views/zdyztfx/erJiViews/szxjjaj.vue","webpack:///./src/views/zdyztfx/erJiViews/szxjjaj.vue?f9a4","webpack:///./src/views/zdyztfx/erJiViews/szxjjaj.vue","webpack:///./src/components/timeChange/index.vue?4b59","webpack:///src/components/timeChange/index.vue","webpack:///./src/components/timeChange/index.vue?08b0","webpack:///./src/components/timeChange/index.vue","webpack:///./src/components/bar/pictorialBar.vue?c909","webpack:///src/components/bar/pictorialBar.vue","webpack:///./src/components/bar/pictorialBar.vue?2ae6","webpack:///./src/components/bar/pictorialBar.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","params","data","length","expression","ref","style","width","canvasStyle","height","attrs","$STANDARD","loadingBgColor","staticRenderFns","item","code","categoryData","push","options","xName","component","xAxis","dataKeys","forEach","maxArr","lineDataArr","staticClass","on","barBack","_e","qvfbBarParams","canvasClick","zbPieParams","rsgmzbPieParams","zbFunnelParams","zsLineParams","zfxszbPieParams","components","ctitle","loopPie","pictorialBar","PieChart3D","funnel","PerBar","barline","LinesR","timeChange","mapJson","广东省","广州市","韶关市","深圳市","珠海市","汕头市","佛山市","江门市","湛江市","茂名市","肇庆市","惠州市","梅州市","汕尾市","河源市","阳江市","清远市","东莞市","中山市","潮州市","揭阳市","云浮市","barBackStatus","curCity","shijCity","shej_02","shij_02","xj_02","axisCategoryName","colors","option","splitNumber","splitLineShow","legenditemWidth","legenditemHeight","axisLabelShow","axisTickShow","axisLabelSize","scales","axisLabelFontSize","yaxisLabelFontSize","Tofixed","smooth","areaShow","smoothMonotone","dataZoomshow","legendIcon","left","right","top","bottom","legendTop","legendRight","map","axisValueShow","categoryBr","axis1Name","barLabelOptions","barWidth","barBorderRadius","barLabelShow","axisLabelColor","itemLabelColor","bar","gradientColors","tooltipShow","sort","borderTop","rollFlag","color","angle","radius","labelRadius","styleObj","isBr","labelPer","curName","center","centerRadius","labelRich","b","fontSize","d","bHeight","length2","borderWidth","bRichPadding","tooltip","show","itemLabelShow","legend","rich","bfontsize","labelSize","bgSize","threeLevel","mounted","getAPIAndMap","date","methods","key","c","getQyfbAPI","nameP","day","console","log","err","getAPI","clientWidth","res","computed","$store","state","watch","val","newVal","_l","index","class","curTime","$event","changeTime","_v","_s"],"mappings":"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","file":"static/js/chunk-e43cba26.066b5523.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(!_vm.params.data.length),expression:\"!params.data.length\"}],ref:\"chartEl\",style:({width : _vm.params.canvasStyle.width, height: _vm.params.canvasStyle.height}),attrs:{\"element-loading-background\":_vm.$STANDARD.loadingBgColor}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\n  @auth:yw\n  echarts柱图折线图\n-->\n\n<template>\n  <div\n    v-loading=\"!params.data.length\"\n    :element-loading-background=\"$STANDARD.loadingBgColor\"\n    ref=\"chartEl\"\n    :style=\"{width : params.canvasStyle.width, height: params.canvasStyle.height}\"\n  ></div>\n</template>\n\n<script>\n  import * as echarts from \"echarts\";\n  import {gradientColor} from \"@/utils/gradient\";\n\n  export default {\n    name: \"barline\",\n    props: {\n      animateFlag: Boolean,\n      params: {\n        type: Object,\n        default() {\n          return {\n            canvasStyle: {\n              width: \"1000px\",\n              height: \"600px\"\n            },\n            data: [],\n            /*\n               *没有写默认值的都为false\n               *带***为必填\n               * */\n            options: {\n              mode: \"abreast\", // 柱图模式  abreast(并排) | overlap(重叠) | stack(堆叠)  默认并排 ***\n              overlap: \"investigators\", // ***如果mode为'abreast' (重叠) 此项为必填 值为重叠在底部数据的key值\n              legendBgSrc: {\n                // ***如果mode为'abreast' (重叠) 此项为必填\n                // 值为 #激活#和 #未激活# 的背景图片的图片名(图片需为png格式,路径需在assets下)\n                // 例: avtive.png 取active\n                active: \"legendActive\",\n                inActive: \"legendInactive\"\n              },\n              colors: {\n                //颜色  STANDARD对象后的值按图表的需求给,详情请看standard.js,\n                //如果值为字符串请放入数组内\n                bar: this.$STANDARD.gradientColors,\n                line: this.$STANDARD.gradientColors\n              },\n              itemLabelColor: \"#fff\",//bar label的颜色\n              rotate: 20,//x轴旋转角度\n              colorisarry: false,//每个柱图选择不同的颜色,\n              //colorsbox:[],//颜色数组\n              xName: \"name\", // ***类目轴key值\n              isVertical: true, // 类目轴是否垂直\n              nameLocation: true, //isVertical为true时,Value轴名称是否在右侧，默认显示\n              splitLine: true, //isVertical为true时,Value轴splitLine是否显示，默认显示\n              axisLabel: true, //isVertical为true时,Value轴label是否显示，默认显示\n              axisValuePosition: true, //isVertical为true时,Value轴显示位置\n              categoryInverse: true, // isVertical为true时,类目轴是否在右侧\n              axisValueShow: true, // value轴 label 和 splitLine是否显示\n              axisLineShow: true, // 类目轴底线是否显示\n              axisLabelColor: \" #fff\",\n              categoryBr: true, // 类目轴label是否折行\n              categoryCut: true, // 类目轴label最后三个字是否折行\n              brNum: 2, // 类目轴label每隔多少字符折行 默认2\n              barBorderRadius: true, //柱图是否显示圆角，默认不显示\n              legendShow: true, // legend是否显示\n              legendCut: true, // legend换行\n              barLabelShow: true, // bar label是否显示  默认true\n              barWidth: 10, // bar label是否隐藏 默认15\n              top: \"5%\", // grid 上下左右值 默认5%\n              left: \"5%\",\n              right: \"5%\",\n              bottom: \"5%\",\n              legendPos: {\n                //图例位置\n                right: \"5%\",\n                top: \"5%\"\n              },\n              legendW: 10, //legend宽  默认25\n              legendH: 10, //legend高  默认14\n              legendGap: 10, //legend间距\n              legendIcon: 'rect', // legend图标形状\n              borderRadius: '50%', //legend的圆角\n              map: {\n                // ***数据映射\n                num: \"班子人数\",\n                age: \"平均年龄\"\n              },\n              addTooltip: {  // legend和图表不显示而tooltip显示的数据\n                \"add_holder\": \"持证人员\"\n              },\n              isLeftScale: true, // 左侧value轴是否取最小值\n              isRightScale: true, // 右侧value轴是否取最小值\n              // 以下为 line 才需要的参数\n              axis1Name: \"（人）\", // 左侧value轴name名称 默认''\n              axis2Name: \"（岁）\", // 右侧value轴name名称 默认''\n              splitLineShow: false, //value轴splitline是否显示\n              line: [\"age\", \"num\"], // ***line 包含的key值\n              isAverage: true, // line 是否需要平均markline\n              lineWidth: 2, // line宽度 默认1\n              tooltipPercent: true, // tooltip 是否带百分比 (需要数据支持,格式为:值|百分数, 1234|23.32)\n              tooltipShow: true,// tooltip是否展示\n              iscolor: true,\n              axisCategoryName: \"政府部门\", // 类目轴name名称 默认''\n              smooth: true, // 曲线是否平滑显示\n              showSymbol: true, // 曲线是否显示拐点\n              lineLabelShow: false, //曲线拐点 label是否隐藏 默认true\n              symbolSize: 5, // 曲线拐点的大小\n              lineShadowBlur: 20, // 曲线阴影宽度\n              lineShadowColor: options.colors.line[1],  // 曲线阴影颜色\n              lineShadowOffsetY: 15, //曲线阴影位移\n              lineOpacity: 0.5, // 曲线阴影透明度\n              tooltipType: \"shadow\", // 选中样式 shadow || line\n              axisLabelSize: 20, // label字号\n              legendSize: 20, // label字号\n            }\n          };\n        }\n      }\n    },\n    data() {\n      return {\n        myChart: null,\n        legendActive: true, //边框bar legend 状态\n        animation: true//是否开启开场动画，切换皮肤时禁用\n      };\n    },\n    mounted() {\n      this.init();\n      this.$once('hook:beforeDestroy', () => {\n        if (this.interval) {\n          clearInterval(this.interval);\n        }\n        this.myChart && this.myChart.dispose();\n      })\n    },\n    methods: {\n      init() {\n\n        if (this.params.data.length === 0) {\n          return;\n        }\n\n        if (this.myChart) {\n          this.myChart.dispose();\n          this.myChart = null;\n        }\n\n        let propData = [...this.params.data]; //深拷贝数据\n        let categoryData = []; //刻度值\n\n        let options = this.params.options;\n        //渐变方向\n        let linearGradient = options.isVertical ? [0, 1, 1, 0] : [0, 0, 0, 1];\n        // 获取keys数组(series数组)\n        let dataKeys = Object.keys(options.map);\n        // 是否全为line\n        let isAllLines = options.line\n          ? options.line.length === dataKeys.length\n          : false;\n        // 获取key对应的中文数组(legend数组)\n        this.legendData = Object.values(options.map);\n        //如果为重叠柱图需要引入legend背景图片\n        if (options.mode === \"overlap\" && options.legendBgSrc) {\n          let activeSrc = options.legendBgSrc.active;\n          let inActiveSrc = options.legendBgSrc.inActive;\n          this.activeLegendBg = require(`@/assets/${activeSrc}.png`);\n          this.inActiveLegendBg = require(`@/assets/${inActiveSrc}.png`);\n\n          this.legendData.forEach((item, index) => {\n            if (options.map[options.overlap] === item) {\n              this.legendData[index] = {\n                name: item,\n                icon:\n                  this.params.legendActive === undefined\n                    ? `image://${this.activeLegendBg}`\n                    : this.params.legendActive[item]\n                    ? `image://${this.activeLegendBg}`\n                    : `image://${this.inActiveLegendBg}`\n              };\n            }\n          });\n        }\n\n        //   let fixLegendData = [];\n        //   legendData.forEach((item, index) => {\n        //     if (options.legendCut && index == 1) {\n        //       fixLegendData.push(item);\n        //       fixLegendData.push(\"\"); //图例换行\n        //     } else {\n        //       fixLegendData.push(item);\n        //     }\n        //   });\n\n        let serirsArr = [];\n        let average = 0;\n        let percentObj = {}; //line百分比\n        if (options.tooltipPercent) {\n          // 为每个类目设置空数组\n          propData.forEach(item => {\n            percentObj[item[options.xName]] = [];\n          });\n        }\n\n        // 为每个类目填充相应的百分比\n        if (options.tooltipPercent) {\n          propData.forEach((item, index) => {\n            //  记录当前类目值\n            let name = item[options.xName];\n            for (let key in item) {\n              //跳过key为name 和 genre\n              if (key !== \"name\" && key !== \"genre\") {\n                percentObj[name].push(item[key].split(\"|\")[1]);\n              }\n            }\n          });\n        }\n        // line和bar的index\n        let lineIndex = 0,\n          barIndex = 0,\n          stack = 1;\n        //循环series数组\n        dataKeys.forEach((item, index) => {\n          //每个series数据\n          let data = [];\n          let map = options.map;\n\n\n          //填充数据\n          propData.forEach(innerItem => {\n\n            if (options.tooltipPercent) {\n              data.push(innerItem[item].split(\"|\")[0]);\n            } else {\n              data.push(innerItem[item]);\n            }\n          });\n          //每个系列的平均数\n          average = options.isAverage\n            ? data.reduce((x, y) => +x + +y) / propData.length\n            : 0;\n\n          let series = {};\n          //判断图表类型\n          if (options.line && options.line.includes(item)) {\n            // lineIndex = 0;\n            //如果line的legend尾部是'比','度','率'为右侧轴\n            this.isRightAxis =\n              map[item].endsWith(\"比\") ||\n              map[item].endsWith(\"度\") ||\n              map[item].endsWith(\"率\");\n            series = {\n              name: map[item],\n              type: \"line\",\n              yAxisIndex: isAllLines ? 0 : this.isRightAxis ? 1 : 0, //全为line 取左侧y轴\n              label: {\n                show: false\n              },\n              symbolSize: options.symbolSize ? options.symbolSize : 5,\n              symbol: \"circle\",\n              showSymbol: options.showSymbol === undefined ? false : options.showSymbol, //是否显示折线上的点\n              smooth: options.smooth === undefined ? false : options.smooth, // 是否平滑\n              // hoverAnimation: false,\n              itemStyle: {\n                normal: {\n                  label: {\n                    show:\n                      options.lineLabelShow === undefined\n                        ? true\n                        : options.lineLabelShow,\n                    fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n                    formatter: this.isRightAxis ? \"{c}%\" : \"{c}\"\n                  },\n                  // shadowColor: options.gradientColor[index][1],\n                  // shadowBlur: 15,\n                  color:\n                    options.colors && options.colors.line\n                      ? this.$STANDARD.getColor(\n                      options.colors.line[lineIndex],\n\n                      [0, 1, 1, 0],\n                      echarts\n                      )\n                      : \"\"\n                },\n                emphasis: {\n                  label: {\n                    show: true,\n                    fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n                  },\n                  borderColor:\n                    options.colors && options.colors.line\n                      ? this.$STANDARD.colorToRgba(\n                      options.colors.line[lineIndex],\n                      0.3\n                      )\n                      : \"rgba(255,255,255,.3)\",\n                  borderWidth: 10\n                }\n              },\n              lineStyle: {\n                // 线性渐变，前四个参数分别是 x0, y0, x2, y2, 范围从 0 - 1，相当于在图形包围盒中的百分比，如果 globalCoord 为 `true`，则该四个值是绝对的像素位置\n                color:\n                  options.colors && options.colors.line\n                    ? this.$STANDARD.getColor(\n                    options.colors.line[lineIndex++],\n                    // linearGradient,\n                    [0, 0, 0, 1],\n                    echarts\n                    )\n                    : \"\",\n                width: options.lineWidth ? options.lineWidth : 3,\n                shadowBlur: options.lineShadowBlur ? options.lineShadowBlur : 0,\n                shadowColor: options.lineShadowColor ? options.lineShadowColor : 'none',\n                shadowOffsetY: options.lineShadowOffsetY ? options.lineShadowOffsetY : 0,\n                opacity: options.lineOpacity ? options.lineOpacity : 1,\n              },\n              //平均线\n              markLine: {\n                symbolSize: 10,\n                label: {\n                  normal: {\n                    show: true,\n                    color: \"#fff\",\n                    fontSize: 20\n                  }\n                },\n                data: [\n                  [\n                    {\n                      symbol: \"line\",\n                      symbolSize: \"0\",\n                      x: options.isAverage ? \"6.7%\" : \"\",\n                      yAxis: average\n                    },\n                    {\n                      symbol: \"line\",\n                      symbolSize: \"0\",\n                      x: \"95%\",\n                      yAxis: average\n                    }\n                  ]\n                ],\n                lineStyle: {\n                  normal: {\n                    width: 2,\n                    type: \"solid\",\n                    color: \"#FF507B\"\n                  }\n                }\n              },\n              data: propData\n            };\n          } else {\n            \n            series = {\n              name: map[item],\n              type: \"bar\",\n              stack: options.mode === \"stack\" ? stack : stack++,\n              yAxisIndex: 0,\n              xAxisIndex:\n                options.mode === \"overlap\" && item === options.overlap ? 1 : 0,\n              barWidth: options.barWidth ? options.barWidth : \"auto\",\n              //同series柱图间距\n              barGap: options.barGaps ? options.barGaps : \"50%\",\n              //不同series之间的间距\n              // barCategoryGap: \"50%\",\n              label: {\n                show:\n                  options.barLabelShow === undefined ? true : options.barLabelShow,\n                position: options.barLabelOptions ? options.barLabelOptions : (options.isVertical ? options.categoryInverse ? 'left' : 'right' : ''),\n                fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n                textStyle: {\n                  color: options.itemLabelColor ? options.itemLabelColor : \"#fff\"\n                }\n                // ,\n              },\n              itemStyle: {\n                normal: {\n                  barBorderRadius:\n                    options.barBorderRadius === undefined\n                      ? 0\n                      : options.barBorderRadius,\n                  color:\n                    options.mode !== \"overlap\" || options.overlap !== item\n                      ? options.colors && options.colors.bar\n                      ? options.colorisarry ?\n                        function (params) {\n                          let colorList = options.colors.bar ?\n                            options.colors.bar : [\n                              \"#fa2b7d\",\n                              \"#ff5463\",\n                              \"#ff874a\",\n                              \"#f1825f\",\n                              \"#c64aa7\",\n                              \"#9a23e6\",\n                              \"#7537fb\",\n                              \"#5660fe\",\n                              \"#4ac0ff\",\n                              \"#4ae6ff\"\n                            ];\n                          return colorList[params.dataIndex];\n                        }\n                        : this.$STANDARD.getColor(\n                          options.colors.bar[barIndex++],\n                          linearGradient,\n                          echarts\n                        )\n                      : \"\"\n                      : \"transparent\",\n                  borderColor:\n                    options.mode === \"overlap\" && options.overlap === item\n                      ? options.colors && options.colors.bar\n                      ? this.$STANDARD.getColor(\n                        options.colors.bar[barIndex++],\n                        linearGradient,\n                        echarts\n                      )\n                      : \"\"\n                      : \"transparent\",\n                  borderWidth: 2,\n\n                }\n              },\n              emphasis: {\n                label: {\n                  show: options.barLabelShow === undefined ? true : options.barLabelShow,\n                  fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n                }\n              },\n              data: propData\n            };\n          }\n          serirsArr.push(series);\n        });\n\n        //值轴\n        let axisValue = [\n          {\n            show: options.axisValueShow,\n            type: \"value\",\n            name: options.axis1Name ? options.axis1Name : \"\",\n            nameLocation: options.nameLocation ? \"start\" : \"end\",\n            nameTextStyle: {\n              color: options.YaxisNameColor ? options.YaxisNameColor : \"#ff517f\",\n              fontSize: options.axisLabelSize ? options.axisLabelSize : 14,\n              fontWeight: 'bold',\n              padding: [0, 45, 0, 0]\n            },\n            splitNumber: options.splitNumber ? options.splitNumber : 5,\n            position: options.isVertical && options.axisValuePosition ? 'top' : 'bottom',\n            inverse: options.categoryInverse,\n            scale: options.isLeftScale ? true : false,\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              show: options.isVertical && options.axisLabel ? false : true,\n              margin: 10,\n              fontSize: 14,\n              color: (value, index) => {\n                let arr = [];\n                let num = options.splitNumber ? options.splitNumber : 5;\n                if (index < num) {\n                  for (let i = 0; i < num; i++) {\n                    arr.push(0)\n                  }\n                  let gradientC = gradientColor(arr, \"#fdc48d\", \"#ff517f\");\n                  return gradientC(index)\n                } else {\n                  return \"#ff517f\"\n                }\n              },\n              // color: options.axisLabelColor? options.axisLabelColor : this.$STANDARD(this.styleType).xAxisColor,\n              // //轴与标签的距离\n              // margin: 15,\n              // fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n            },\n            axisLine: {\n              show: false\n            },\n            splitLine: {\n              show: options.isVertical && options.splitLine ? false : options.splitLineShow === undefined ? options.axisValueShow : options.splitLineShow,\n              lineStyle: {\n                type: 'dashed',\n                color: \"#2c344c\" //网格线颜色（所有图表需要统一）\n              }\n            }\n          },\n          {\n            show: options.axisValueShow,\n            type: \"value\",\n            name: options.axis2Name ? options.axis2Name : \"\",\n            nameTextStyle: {\n              color: this.$STANDARD.xAxisColor,\n              fontSize: 20\n            },\n            scale: options.isRightScale ? true : false,\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              color: this.$STANDARD.xAxisColor,\n              //轴与标签的距离\n              margin: 15,\n              fontSize: 20,\n              formatter: this.isRightAxis ? \"{value}%\" : \"{value}\"\n            },\n            axisLine: {\n              show: false\n            },\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: this.$STANDARD.splitLineColor //网格线颜色（所有图表需要统一）\n              }\n            }\n          }\n        ];\n\n        //类目轴数据\n        for (let item of propData) {\n          if (item.code) {\n            categoryData.push({value: item[options.xName], id: item.code});\n          } else {\n            categoryData.push(item[options.xName]);\n          }\n        }\n        // x轴长度大于等于15 dataZoom 出现\n        let dataZoomShow = categoryData.length >= 100 ? true : false;\n        if (options.isVertical) {\n          dataZoomShow = false;\n        }\n        //类目轴\n        let axisCategory = [\n          {\n            type: \"category\", //类目轴\n            data: categoryData,\n            inverse: options.isVertical ? true : false,\n            axisTick: {\n              show: false\n            },\n            position: options.categoryInverse ? \"right\" : \"left\",\n            triggerEvent: true,\n            name: options.axisCategoryName ? options.axisCategoryName : \"\",\n            nameLocation: options.isVertical && options.nameLocation ? \"start\" : \"end\",\n            nameTextStyle: {\n              color: this.$STANDARD.xAxisColor,\n              fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n            },\n            axisLabel: {\n              interval: 0,\n              rotate: options.rotate ? options.rotate : 0,\n              // color: this.$STANDARD.xAxisColor,\n              color: \"#fff\",\n              inside: options.XasisLabelInside !== undefined ? options.XasisLabelInside : false,\n              padding: options.XasisLabelPad ? options.XasisLabelPad : 0,\n              fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n              lineHeight: options.XaxisLabelLH ? options.XaxisLabelLH : 14,\n              height: options.XaxisLabelH ? options.XaxisLabelH : 30,\n              //轴与标签的距离\n              margin: 15,\n              formatter: params => {\n\n                let res = \"\";\n                let name = \"\";\n                //label换行\n                if (options.categoryBr) {\n                  name = \"\";\n                  let brNum = options.brNum ? options.brNum : 1;\n                  for (let i = 0; i < params.length; i++) {\n                    name += params[i];\n                    if (i % brNum == brNum - 1) name += \"\\n\";\n                  }\n                  res = name;\n                } else {\n                  res = params;\n                }\n                return res;\n              },\n              // rich: {\n              //   value: {\n              //     lineHeight: 16,\n              //     fontSize: 20,\n              //   }\n              // }\n            },\n            //底线颜色\n            axisLine: {\n              show: options.axisLineShow ? true : false,\n              lineStyle: {\n                color: \"#a1a1b4\"\n              }\n            },\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: this.$STANDARD.splitLineColor\n              }\n            }\n          },\n          {\n            show: false,\n            type: \"category\", //类目轴\n            data: categoryData\n          }\n        ];\n\n        // 显示滚动轴过滤\n        let dataZoom = [\n          {\n            show: dataZoomShow,\n            type: \"slider\",\n            backgroundColor: \"rgba(70,235,255,0.1)\",\n            fillerColor: \"rgba(70,235,255,0.3)\",\n            borderColor: \"rgba(70,235,255,0.6)\",\n            xAxisIndex: [0, 1],\n\n            filterMode: \"filter\",\n            start: 0,\n            end: 100,\n            textStyle: {\n              color: \"#fff\"\n            },\n            handleIcon:\n              \"M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z\",\n            handleSize: \"80%\",\n            handleStyle: {\n              color: \"#fff\",\n              shadowBlur: 3,\n              shadowColor: \"rgba(0, 0, 0, 0.6)\",\n              shadowOffsetX: 2,\n              shadowOffsetY: 2\n            }\n          }\n        ];\n\n        this.myChart = echarts.init(this.$refs.chartEl);\n        this.option = {\n          tooltip: {\n            show: options.tooltipShow === undefined ? true : options.tooltipShow,\n            trigger: \"axis\",\n            backgroundColor: this.$STANDARD.tooltipBackgroundColor,\n            borderColor: this.$STANDARD.tooltipBorderColor,\n            // borderWidth: 1,\n            padding: 12,\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: options.tooltipType ? options.tooltipType : \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n            },\n            formatter: function (params) {\n              var result = params[0].name + \"<br/>\";\n\n              if (options.mode === \"overlap\") {\n                params.unshift(params.pop());\n              }\n              if (options.addTooltip) {\n                let name = params[0].name;\n                let dataItem = propData.filter(item => {\n                  return item[options.xName] === name;\n                })[0];\n                for (const n in options.addTooltip) {\n                  if (options.addTooltip.hasOwnProperty(n)) {\n                    params.push({\n                      seriesName: options.addTooltip[n],\n                      value: dataItem[n]\n                    });\n                  }\n                }\n              }\n              params.forEach(function (item, index) {\n                let lastChar = item.seriesName.charAt(item.seriesName.length - 1);\n\n                // 数据名称以\"率\",\"度\"或者\"比\"结尾的加上百分号\n                if (lastChar !== \"率\" && lastChar !== \"度\" && lastChar !== \"比\") {\n                  result += `${item.marker}${item.seriesName} : ${item.value}</br>`;\n                } else {\n                  result += `${item.marker}${item.seriesName} : ${item.value}%</br>`;\n                }\n              });\n              return result;\n            }\n          },\n          legend: {\n            show: options.legendShow,\n            data: this.legendData,\n            itemGap: options.legendGap ? options.legendGap : 10,\n            top: options.legendPos ? options.legendPos.top : \"3%\",\n            right: options.legendPos ? options.legendPos.right : \"5%\",\n            itemWidth: options.legendW ? options.legendW : 25,\n            itemHeight: options.legendH ? options.legendH : 14,\n            icon: options.legendIcon === \"undefined\" ? 'rect' : options.legendIcon,\n            borderRadius: options.borderRadius ? options.borderRadius : 0,\n            selected: this.params.legendActive ? this.params.legendActive : {},\n            //   formatter: name => {\n            //     let fix = \"\";\n            //     fix = options.legendCut ? `{title|${name}}` : name;\n            //     return fix;\n            //   },\n            textStyle: {\n              fontSize: options.legendSize ? options.legendSize : 20,\n              //跟随图标颜色\n              // color: () => {\n              //   return ''\n              // },\n              color: options.legendColor ? options.legendColor : this.$STANDARD.legendColor,\n              rich: {\n                title: {\n                  width: 233,\n                  fontSize: 20,\n                  color: this.$STANDARD.legendColor\n                }\n              }\n            }\n          },\n          grid: {\n            left: options.left ? options.left : \"5%\",\n            right: options.right ? options.right : \"5%\",\n            top: options.top ? options.top : \"5%\",\n            // bottom: options.bottom ? options.bottom : '5%',\n            bottom: dataZoomShow ? \"6%\" : options.bottom ? options.bottom : '5%',\n            containLabel: true,\n          },\n          label: {\n            show: true,\n            position: options.isVertical ? \"right\" : \"top\",\n            distance: 10,\n            color: this.$STANDARD.xAxisColor,\n            fontSize: 20,\n            zlevel: 10,\n          },\n          xAxis: options.isVertical ? axisValue : axisCategory,\n          yAxis: options.isVertical ? axisCategory : axisValue,\n          series: serirsArr,\n          dataZoom: dataZoom,\n          animation: this.animation,\n          // animationEasing: \"elasticOut\",\n          animationDelay: function (idx) {\n            // 越往后的数据延迟越大\n            return idx * 50;\n          }\n        };\n\n        this.myChart.setOption(this.option);\n\n        // 下钻页面\n        this.myChart.on(\"click\", params => {\n          let _this = this;\n\n          if (params.componentType === \"series\") {\n            params.allData = {\n              data: propData,\n              params: params,\n            };\n            _this.$emit(\"canvasClick\", params.allData);\n            _this.$emit(\"departmentClick\", params.name);\n          }\n          if (params.componentType === \"yAxis\") {\n            params.name = params.value;\n            categoryData.filter(item => {\n              if (item.value == params.name) {\n                params.id = item.id;\n              }\n            })\n            params.allData = {\n              data: propData,\n              params: params,\n            };\n            _this.$emit(\"canvasClick\", params.allData);\n          }\n        });\n        this.legendselectchanged();\n      },\n\n      //边框bar legend 点击其背景图切换\n      legendselectchanged() {\n        this.myChart.on(\"legendselectchanged\", params => {\n          let options = this.params.options;\n          let selected = params.selected;\n          this.$emit(\"changeLegend\", selected);\n\n          if (options.mode === \"overlap\") {\n            // 点击的legend name和边框bar name相等 && 其legend处于激活状态\n            if (\n              params.name === options.map[options.overlap] &&\n              this.legendActive\n            ) {\n              this.legendActive = !this.legendActive;\n              // this.imgSrc = require(\"@/assets/legendInactive.png\");\n              this.legendData.forEach((item, index) => {\n                if (typeof item === \"object\") {\n                  this.legendData[index].icon = `image://${\n                    this.inActiveLegendBg\n                    }`;\n                }\n              });\n              this.myChart.setOption({\n                legend: {\n                  data: this.legendData\n                }\n              });\n              // 点击的legend name和边框bar name相等 && 其legend处于未激活状态\n            } else if (\n              params.name === options.map[options.overlap] &&\n              !this.legendActive\n            ) {\n              this.legendActive = !this.legendActive;\n              //this.imgSrc = require(\"@/assets/legendActive.png\");\n              this.legendData.forEach((item, index) => {\n                if (typeof item === \"object\") {\n                  this.legendData[index].icon = `image://${this.activeLegendBg}`;\n                }\n              });\n              this.myChart.setOption({\n                legend: {\n                  data: this.legendData\n                }\n              });\n            }\n          }\n        });\n      },\n\n    },\n    watch: {\n      animateFlag: {\n        handler(newVal, oldVal) {\n          this.init();\n        },\n        deep: true\n      },\n      'params.data': {\n        handler(newVal, oldVal) {\n          this.init();\n        },\n        deep: true\n      }\n    }\n  };\n</script>\n\n<style lang=\"stylus\" scoped>\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarLine1.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BarLine1.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BarLine1.vue?vue&type=template&id=00e7203e&scoped=true&\"\nimport script from \"./BarLine1.vue?vue&type=script&lang=js&\"\nexport * from \"./BarLine1.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"00e7203e\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=0804d838&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=0804d838&lang=stylus&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(!_vm.params.data.length),expression:\"!params.data.length\"}],ref:\"chartEl\",style:({width : _vm.params.canvasStyle.width, height: _vm.params.canvasStyle.height}),attrs:{\"element-loading-background\":_vm.$STANDARD.loadingBgColor}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\n  echarts折线图\n  @auth yw\n-->\n<template>\n  <div\n    v-loading=\"!params.data.length\"\n    :element-loading-background=\"$STANDARD.loadingBgColor\"\n    ref=\"chartEl\"\n    :style=\"{width : params.canvasStyle.width, height: params.canvasStyle.height}\"\n  ></div>\n</template>\n\n<script>\n  import * as echarts from \"echarts\";\n  import {gradientColor} from \"@/utils/gradient\";\n\n  export default {\n    name: \"lines\",\n    props: {\n      animateFlag: Boolean,\n      maps: Object,\n      params: {\n        type: Object,\n        dafault() {\n          return {\n            option: {\n              legendShow: true, //图例是否显示\n              legendfontSize: 14, //图例字体大小\n              XaxisLineShow: false, //x轴线是否显示\n              xaxisLineColor: \"rgba(255,255,255,0.1)\", //x轴线的颜色\n              axisLabelShow: false, //x轴名是否显示\n              axisLabelFontSize: 12, //x轴字体大小\n              yaxisLabelFontSize: 14, //y轴字体大小\n              yaxisLabelColor: \"#fff\",\n              axisLabelColor: \"#fff\",\n              boundaryGap: true, //坐标轴是否留白\n              xAxisBr: false, //x轴标签是否换行\n              YaxisLineShow: true, //y轴线是否显示\n              yaxisLineColor: \"rgba(255,255,255,0.1)\", //y轴线的颜色\n              YaxisaxisLabelShow: true, //y轴刻度是否显示\n              scales: true, //y轴刻度最小值是否为0\n              lineWidth: 2, //指示竖线的宽度\n              Lcolor: \"red\", //指示竖线的颜色\n              splitLineShow: true, //网格线是否显示\n              axisTickShow: true, //x轴刻度是否显示,\n              showK: true, //y轴刻度值是否以k为单位\n              legenditemWidth: 100, //图例icon的宽度\n              //Tofixed:false, //y轴刻度保留小数点\n              dataZoomshow: false, //是否显示datazoom\n              dataZoomstart: 0,\n              dataZoomend: 100,\n              legendTop: \"5%\", //图例高度\n              showSymbol: false, //是否显示折点上的圆点\n              axisCategoryName: \"\",\n              nameLocation: \"start\",\n              XaxisNameColor: \"#fff\",\n              axisLabelSize: 16,\n              legendItemgap: 20 //legend间距\n            },\n            colors: []\n          };\n        }\n      }\n    },\n    data() {\n      return {\n        colors: [\n          {\n            line: \"rgba(209, 48, 20, 1)\",\n            start: \"rgba(62, 73, 67, .3)\",\n            end: \"rgba(78, 173, 254, 0)\"\n          },\n          {\n            line: \"rgba(29, 209, 200, 1)\",\n            start: \"rgba(242, 104, 210, .3)\",\n            end: \"rgba(188, 60, 113, 0)\"\n          },\n          {\n            line: \"rgba(208, 45, 222, 1)\",\n            start: \"rgba(208, 45, 222, .3)\",\n            end: \"rgba(101, 30, 206, 0)\"\n          },\n          {\n            line: \"rgba(162, 227, 105, 1)\",\n            start: \"rgba(162, 227, 105, .3)\",\n            end: \"rgba(60, 234, 166, 0)\"\n          },\n\n          {\n            line: \"rgba(240, 151, 26, 1)\",\n            start: \"rgba(240, 151, 26, .3)\",\n            end: \"rgba(255, 88, 88, 0)\"\n          }\n        ]\n      };\n    },\n    mounted() {\n      this.init();\n    },\n    methods: {\n      init() {\n        if (this.myChart) {\n          this.myChart.dispose();\n        }\n        if (this.params.data.length === 0) return;\n\n        let options = this.params.option;\n        let propData = this.params.data;\n        let map = {};\n        if (this.maps) {\n          map = this.maps;\n        } else {\n          map = this.params.map;\n        }\n        // 获取keys数组\n        let dataKeys = Object.keys(map);\n\n        // 获取key对应的中文数组\n        let legendData = Object.values(map);\n\n        let xAxis = [];\n        // 所有line数据数组\n        let lineDataArr = [];\n        // echarts series数据\n        let seriesArr = [];\n        // 根据legend设置每条line数据对应的key值\n        let maxArr = [];\n        dataKeys.forEach(value => {\n          lineDataArr[value] = [];\n        });\n\n        for (let [index, item] of propData.entries()) {\n          // x轴数据添加\n\n          xAxis.push(item[this.params.xName]);\n          dataKeys.forEach(value => {\n            maxArr.push(item[value]);\n            // 为每条line对应的数组添加数据\n            lineDataArr[value].push(item[value]);\n          });\n        }\n        let max = Math.max(...maxArr) + 100;\n        let min = Math.min(...maxArr) - 100;\n        if (min < 0) min = 0;\n\n        dataKeys.forEach((value, index) => {\n          let series = {\n            name: map[value],\n            type: \"line\",\n            smooth: options.smooth === undefined ? false : options.smooth,\n            smoothMonotone:\n              options.smooth && options.smoothMonotone\n                ? options.smoothMonotone\n                : \"none\",\n            symbolSize: 10,\n            symbol: \"circle\",\n            hoverAnimation: false,\n            showSymbol: options.showSymbol === undefined ? false : options.showSymbol, //是否显示折线上的点\n            itemStyle: {\n              normal: {\n                borderWidth: 2,\n                borderColor: \"#fff\",\n                color: this.params.colors[index].line\n              },\n              emphasis: {\n                // borderWidth: 3,\n                color: this.params.colors[index].line,\n                borderColor: this.params.colors[index].start,\n                borderWidth: 12\n              }\n            },\n            lineStyle: {\n              type: options.type ? (map[value] === options.dashKey ? \"dashed\" : \"solid\") : \"solid\",\n              width: options.lineWidth?options.lineWidth:3,\n              color: this.params.colors[index].line\n              //type:\"dotted\"\n            },\n            areaStyle: {\n              normal: {\n                opacity: options.areaShow === undefined ? true : options.areaShow,\n                color: new echarts.graphic.LinearGradient(\n                  0,\n                  0,\n                  0,\n                  1,\n                  [\n                    {\n                      offset: 0,\n                      color: this.params.colors[index].start\n                    },\n                    {\n                      offset: 1,\n                      color: this.params.colors[index].end\n                    }\n                  ],\n                  false\n                ),\n                shadowColor: \"rgba(0, 0, 0, 0.1)\",\n                shadowBlur: 10,\n              }\n            },\n            data: lineDataArr[value]\n          };\n          seriesArr.push(series);\n        });\n\n        this.myChart = echarts.init(this.$refs.chartEl);\n        this.option = {\n          // 鼠标悬浮时弹框样式（所有图表需统一）\n          tooltip: {\n            show:options.tooltipShow!==false,\n            trigger: \"axis\",\n            backgroundColor: this.$STANDARD.tooltipBackgroundColor,\n            padding: [10, 20],\n            // axisPointer: {\n            //   type: \"line\",\n            //   lineStyle: {\n            //     // color: options.Lcolor ? options.Lcolor : \"#00d8d2\",\n            //     width: options.lineWidth ? options.lineWidth : 2\n            //   }\n            // },\n            formatter: function (params) {\n              var result = params[0].name + options.axisCategoryName + \"<br/>\";\n              params.forEach(function (item, index) {\n                let lastChar = item.seriesName.charAt(item.seriesName.length - 1);\n                // 数据名称以比的加上百分号\n                if (options.axisYName === '%') {\n                  result += `${item.marker} ${item.seriesName} : ${\n                    (item.value * 100).toFixed(2)\n                    }%</br>`;\n                } else {\n                  // result += `${item.marker} ${item.seriesName} : ${item.value.toLocaleString()}</br>`;\n                  result += `${item.marker} ${item.seriesName} : ${item.value}</br>`;\n                }\n              });\n              return result;\n            }\n          },\n          grid: {\n            left: options.left ? options.left : \"6%\",\n            right: options.right ? options.right : \"6%\",\n            bottom: options.bottom ? options.bottom : \"6%\",\n            top: options.top ? options.top : \"6%\",\n            containLabel: true\n          },\n          legend: {\n            icon: options.legendIcon ? options.legendIcon : \"roundRect\",\n            // itemWidth: 10, //图例的大小\n            show: options.legendShow === undefined ? true : options.legendShow,\n            itemWidth: 20,\n            itemHeight: 5,\n            color: \"#fff\",\n            itemGap: options.legendItemgap ? options.legendItemgap : 20,\n            right: options.legendRight ? options.legendRight : \"5%\",\n            top: options.legendTop ? options.legendTop : \"2%\",\n            textStyle: {\n              color: \"#fff\", //图例颜色\n              //fontSize: 14,\n              fontSize: options.legendfontSize ? options.legendfontSize : 18\n            },\n            data: legendData\n          },\n          xAxis: [\n            {\n              type: \"category\",\n              boundaryGap:\n                options.boundaryGap === undefined ? false : options.boundaryGap,\n              triggerEvent: true,\n              interval: 1,\n              data: xAxis,\n              name: options.axisCategoryName ? options.axisCategoryName : \"\",\n              nameLocation: options.nameLocation ? \"start\" : \"end\",\n              nameTextStyle: {\n                color: options.XaxisNameColor ? options.XaxisNameColor : \"#fff\",\n                fontSize: options.axisLabelSize ? options.axisLabelSize : 20\n              },\n              axisLabel: {\n                show: options.axisLabelShow ? true : false,\n                margin: 10,\n                fontSize: 16,\n                color: this.$STANDARD.xAxisColor,\n                formatter: params => {\n                  return options.xAxisBr ? params.split(\"\").join(\"\\n\") : params;\n                }\n              },\n              axisLine: {\n                show: true,\n                lineStyle: {\n                  width: 2,\n                  color: this.$STANDARD.xAxisLineColor\n                }\n              },\n              axisTick: {\n                alignWithLabel: true,\n                //show: false,//x轴刻度是否显示\n                show: options.axisTickShow ? true : false,\n                inside: true //x轴刻度是否朝内\n              }\n            }\n          ],\n          yAxis: [\n            {\n              type: \"value\",\n              name: options.axisYName ? options.axisYName : \"\",\n              nameLocation: options.nameLocation ? \"start\" : \"end\",\n              nameTextStyle: {\n                color: options.YaxisNameColor ? options.YaxisNameColor : \"#ff517f\",\n                fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n                fontWeight: 'bold',\n                padding: [0, 45, 0, 0]\n              },\n              //scale: true, //y轴最小值是否为0\n              scale: options.scales ? false : true,\n              // max: this.params.areaShow === undefined ? null : max,\n              max: this.params.axisMax === undefined ? null : this.params.axisMax,\n              // min: this.params.areaShow === undefined ? null : min,\n              min: this.params.axisMin === undefined ? null : this.params.axisMin,\n              splitNumber: options.splitNumber ? options.splitNumber : 5,\n              axisLabel: {\n                show: options.YaxisaxisLabelShow ? false : true,\n                margin: 10,\n                fontSize: 14,\n                color:\"#fff\",\n                // color: (value, index) => {\n                //   let arr = [];\n                //   let num = options.splitNumber ? options.splitNumber : 5;\n                //   if (index < num) {\n                //     for (let i = 0; i < num; i++) {\n                //       arr.push(0)\n                //     }\n                //     let gradientC = gradientColor(arr, \"#fdc48d\", \"#ff517f\");\n                //     return gradientC(index)\n                //   } else {\n                //     return \"#ff517f\"\n                //   }\n                // },\n                formatter: (value) => {\n                  if (options.axisYName === '%') {\n                    return value * 100\n                  } else {\n                    return value\n                  }\n                }\n              },\n              axisLine: {\n                show: options.YaxisLineShow ? true : false,\n                width: 2,\n                type: \"dotted\",\n                color: this.$STANDARD.yAxisSplitLineColor\n              },\n              axisTick: {\n                show: false\n              },\n              splitLine: {\n                show: options.splitLineShow ? true : false,\n                lineStyle: {\n                  type: 'dashed',\n                  color: \"#2c344c\" //网格线颜色（所有图表需要统一）\n                }\n              }\n            }\n          ],\n          dataZoom: {\n            show: options.dataZoomshow ? true : false,\n            realtime: true, //拖动时实时更新\n            // backgroundColor: \"rgba(70,235,255,0.1)\",\n            fillerColor: \"rgba(70,235,255,0.3)\",\n            borderColor: \"rgba(70,235,255,0.6)\",\n            showDetail: false,\n            handleIcon:\n              \"M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z\",\n            handleSize: \"100%\",\n            bottom: 0,\n            height: 20,\n            start: options.dataZoomstart ? options.dataZoomstart : 0,\n            end: options.dataZoomend ? options.dataZoomend : 100\n\n            //itemWidth: options.legenditemWidth ? options.legenditemWidth : 10,\n          },\n          series: seriesArr\n        };\n        this.myChart.setOption(this.option);\n\n        if (this.params.option.rollFlag) {\n          this.chartMove();\n          this.myChart.on(\"mouseover\", params => {\n            this.params.option.rollFlag = false;\n            if (params.dataIndex === this.app.currentIndex) {\n              // 序号相同不取消高亮\n              return;\n            } else {\n              // 取消之前高亮的图形\n              this.myChart.dispatchAction({\n                type: \"downplay\",\n                dataIndex: this.app.currentIndex\n              });\n            }\n          });\n          this.myChart.on(\"mouseout\", params => {\n            this.params.option.rollFlag = true;\n          });\n        }\n\n        //柱图点击事件\n        this.myChart.on(\"click\", params => {\n          if (params.componentType === \"series\") {\n            this.$emit(\"departmentClick\", params.name);\n          } else {\n            this.$emit(\"departmentClick\", params.value);\n          }\n        });\n      },\n      chartMove() {\n        this.app = {};\n        this.app.currentIndex = -1;\n        if (this.interval) {\n          clearInterval(this.interval);\n        }\n        this.interval = setInterval(() => {\n          let dataLen = this.params.data.length;\n          if (this.params.option.rollFlag) {\n            // 取消之前高亮的图形\n            this.myChart.dispatchAction({\n              type: \"downplay\",\n              dataIndex: this.app.currentIndex\n            });\n            this.app.currentIndex = (this.app.currentIndex + 1) % dataLen;\n            // 高亮当前图形\n            this.myChart.dispatchAction({\n              type: \"highlight\",\n              dataIndex: this.app.currentIndex\n            });\n            this.myChart.dispatchAction({\n              type: \"showTip\",\n              seriesIndex: 0,\n              dataIndex: this.app.currentIndex\n            });\n          }\n        }, 2000);\n      }\n    },\n    computed: {\n      // realData() {\n      //   return this.params.data\n      // }\n    },\n    watch: {\n      animateFlag: {\n        handler(newVal, oldVal) {\n          this.init();\n        },\n        deep: true\n      },\n      'params.data': {\n        handler(newVal, oldVal) {\n          this.init();\n        },\n        deep: true\n      }\n    }\n  };\n</script>\n\n<style lang=\"stylus\" scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LinesR.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LinesR.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LinesR.vue?vue&type=template&id=2ac9614c&scoped=true&\"\nimport script from \"./LinesR.vue?vue&type=script&lang=js&\"\nexport * from \"./LinesR.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2ac9614c\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(!_vm.params.data.length),expression:\"!params.data.length\"}],ref:\"chartEl\",style:({width : _vm.params.canvasStyle.width, height: _vm.params.canvasStyle.height}),attrs:{\"element-loading-background\":_vm.$STANDARD.loadingBgColor}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\n  @auth:yw\n  echarts柱图折线图\n-->\n<template>\n  <div\n    v-loading=\"!params.data.length\"\n    :element-loading-background=\"$STANDARD.loadingBgColor\"\n    ref=\"chartEl\"\n    :style=\"{width : params.canvasStyle.width, height: params.canvasStyle.height}\"\n  ></div>\n</template>\n\n<script>\n  import * as echarts from \"echarts\";\n  import {gradientColor} from \"@/utils/gradient\";\n\n  export default {\n    name: \"barline\",\n    props: {\n      animateFlag: Boolean,\n      params: {\n        type: Object,\n        default() {\n          return {\n            canvasStyle: {\n              width: \"1000px\",\n              height: \"600px\"\n            },\n\n            /*\n             *没有写默认值的都为false\n             *带***为必填\n             * */\n            options: {\n              mode: \"abreast\", // 柱图模式  abreast(并排) | overlap(重叠) | stack(堆叠)  默认并排 ***\n              overlap: \"investigators\", // ***如果mode为'abreast' (重叠) 此项为必填 值为重叠在底部数据的key值\n              legendBgSrc: {\n                // ***如果mode为'abreast' (重叠) 此项为必填\n                // 值为 #激活#和 #未激活# 的背景图片的图片名(图片需为png格式,路径需在assets下)\n                // 例: avtive.png 取active\n                active: \"legendActive\",\n                inActive: \"legendInactive\"\n              },\n              colors: {\n                //颜色  STANDARD对象后的值按图表的需求给,详情请看standard.js,\n                //如果值为字符串请放入数组内\n                bar: this.$STANDARD.gradientColors,\n                line: this.$STANDARD.gradientColors\n              },\n              itemLabelColor: \"#fff\", //bar label的颜色\n              rotate: 20, //x轴旋转角度\n              colorisarry: false, //每个柱图选择不同的颜色,\n              //colorsbox:[],//颜色数组\n              xName: \"name\", // ***类目轴key值\n              isVertical: true, // 类目轴是否垂直\n              nameLocation: true, //isVertical为true时,Value轴名称是否在右侧，默认显示\n              xsplitLineShow: true, //Value轴splitLine是否显示，默认显示\n              axisLabel: true, //isVertical为true时,Value轴label是否显示，默认显示\n              axisValuePosition: true, //isVertical为true时,Value轴显示位置\n              categoryInverse: true, // isVertical为true时,类目轴是否在右侧\n              axisValueShow: true, // value轴 label 和 splitLine是否显示\n              axisLineShow: true, // 类目轴底线是否显示\n              categoryBr: true, // 类目轴label是否折行\n              categoryCut: true, // 类目轴label最后三个字是否折行\n              brNum: 2, // 类目轴label每隔多少字符折行 默认2\n              barBorderRadius: true, //柱图是否显示圆角，默认不显示\n              legendShow: true, // legend是否显示\n              legendCut: true, // legend换行\n              barLabelShow: true, // bar label是否显示  默认true\n              barWidth: 10, // bar label是否隐藏 默认15\n              top: \"5%\", // grid 上下左右值 默认5%\n              left: \"5%\",\n              right: \"5%\",\n              bottom: \"5%\",\n              legendPos: {\n                //图例位置\n                right: \"5%\",\n                top: \"5%\"\n              },\n              legendW: 10, //legend宽  默认25\n              legendH: 10, //legend高  默认14\n              legendGap: 10, //legend间距\n              legendIcon: \"rect\", // legend图标形状\n              borderRadius: \"50%\", //legend的圆角\n              map: {\n                // ***数据映射\n                num: \"班子人数\",\n                age: \"平均年龄\"\n              },\n              addTooltip: {\n                // legend和图表不显示而tooltip显示的数据\n                add_holder: \"持证人员\"\n              },\n              isLeftScale: true, // 左侧value轴是否取最小值\n              isRightScale: true, // 右侧value轴是否取最小值\n              // 以下为 line 才需要的参数\n              axis1Name: \"（人）\", // 左侧value轴name名称 默认''\n              axis2Name: \"（岁）\", // 右侧value轴name名称 默认''\n              line: [\"age\", \"num\"], // ***line 包含的key值\n              isAverage: true, // line 是否需要平均markline\n              lineWidth: 2, // line宽度 默认1\n              tooltipPercent: true, // tooltip 是否带百分比 (需要数据支持,格式为:值|百分数, 1234|23.32)\n              iscolor: true,\n              axisCategoryName: \"政府部门\", // 类目轴name名称 默认''\n              smooth: true, // 曲线是否平滑显示\n              showSymbol: true, // 曲线是否显示拐点\n              lineLabelShow: false, //曲线拐点 label是否隐藏 默认true\n              symbolSize: 5, // 曲线拐点的大小\n              lineShadowBlur: 20, // 曲线阴影宽度\n              lineShadowColor: options.colors.line[1], // 曲线阴影颜色\n              lineShadowOffsetY: 15, //曲线阴影位移\n              lineOpacity: 0.5, // 曲线阴影透明度\n              tooltipType: \"shadow\", // 选中样式 shadow || line\n              axisLabelSize: 20, // label字号\n              legendSize: 20 // label字号\n            },\n            data: [\n              {\n                department: \"汉族\",\n                value: 6719\n              },\n              {\n                department: \"少数民族\",\n                value: 3345\n              }\n            ]\n          };\n        }\n      }\n    },\n    data() {\n      return {\n        myChart: null,\n        legendActive: true, //边框bar legend 状态\n        animation: true //是否开启开场动画，切换皮肤时禁用\n      };\n    },\n    mounted() {\n      this.init();\n      this.$once('hook:beforeDestroy', () => {\n        if (this.interval) {\n          clearInterval(this.interval);\n        }\n        this.myChart && this.myChart.dispose();\n      })\n    },\n    methods: {\n      init() {\n        if (this.myChart) {\n          this.myChart.dispose();\n          this.myChart = null;\n        }\n        if (this.params.data.length === 0) return;\n\n        let propData = [...this.params.data]; //深拷贝数据\n        let categoryData = []; //刻度值\n\n        let options = this.params.options;\n        //渐变方向\n        let linearGradient = options.isVertical ? [0, 1, 1, 0] : [0, 0, 0, 1];\n        // 获取keys数组(series数组)\n        let dataKeys = Object.keys(options.map);\n        // 是否全为line\n        let isAllLines = options.line\n          ? options.line.length === dataKeys.length\n          : false;\n        // 获取key对应的中文数组(legend数组)\n        this.legendData = Object.values(options.map);\n        //如果为重叠柱图需要引入legend背景图片\n        if (options.mode === \"overlap\" && options.legendBgSrc) {\n          let activeSrc = options.legendBgSrc.active;\n          let inActiveSrc = options.legendBgSrc.inActive;\n          this.activeLegendBg = require(`@/assets/${activeSrc}.png`);\n          this.inActiveLegendBg = require(`@/assets/${inActiveSrc}.png`);\n\n          this.legendData.forEach((item, index) => {\n            if (options.map[options.overlap] === item) {\n              this.legendData[index] = {\n                name: item,\n                icon:\n                  this.params.legendActive === undefined\n                    ? `image://${this.activeLegendBg}`\n                    : this.params.legendActive[item]\n                    ? `image://${this.activeLegendBg}`\n                    : `image://${this.inActiveLegendBg}`\n              };\n            }\n          });\n        }\n        let serirsArr = [];\n        let average = 0;\n        let percentObj = {}; //line百分比\n        if (options.tooltipPercent) {\n          // 为每个类目设置空数组\n          propData.forEach(item => {\n            percentObj[item[options.xName]] = [];\n          });\n        }\n\n        // 为每个类目填充相应的百分比\n        if (options.tooltipPercent) {\n          propData.forEach((item, index) => {\n            //  记录当前类目值\n            let name = item[options.xName];\n            for (let key in item) {\n              //跳过key为name 和 genre\n              if (key !== \"name\" && key !== \"genre\") {\n                percentObj[name].push(item[key].split(\"|\")[1]);\n              }\n            }\n          });\n        }\n        // line和bar的index\n        let lineIndex = 0,\n          barIndex = 0,\n          stack = 1;\n        let data = [];\n        propData.forEach((innerItem, innerIndex) => {\n          let total = 0;\n          let beforeTotal = 0;\n          dataKeys.forEach((items, indexs) => {\n            total += innerItem[items];\n          });\n          dataKeys.forEach((items, indexs) => {\n            if(total===0){\n              data.push(0)\n            }else{\n              data.push(((innerItem[items] / total) * 100).toFixed(2));\n            }\n          });\n        });\n\n        let size = dataKeys.length;\n        let newarr = [];\n        for (let i = 0; i < data.length; i = i + size) {\n          newarr.push(data.slice(i, i + size));\n        }\n\n        let arrTotal = [];\n        newarr[0].forEach(el => {\n          arrTotal.push([]);\n        });\n        newarr.forEach((item, index) => {\n          let total = 0;\n          item.forEach((innerItem, innerIndex) => {\n            total += item[innerIndex];\n          });\n          total = total - item[item.length - 1];\n          // item[item.length - 1] = 100 - total;\n          // item.splice(item.length - 1, 1, item[item.length - 1]);\n        });\n        newarr.forEach((item, index) => {\n          item.forEach((innerItem, innerIndex) => {\n            arrTotal[innerIndex].push(innerItem);\n          });\n        });\n\n        //循环series数组\n        dataKeys.forEach((item, index) => {\n          //每个series数据\n          let data = [];\n          let map = options.map;\n          data = arrTotal[index];\n          let series = {};\n          //判断图表类型\n          if (options.line && options.line.includes(item)) {\n            //如果line的legend尾部是'比','度','率'为右侧轴\n            this.isRightAxis =\n              map[item].endsWith(\"比\") ||\n              map[item].endsWith(\"度\") ||\n              map[item].endsWith(\"率\");\n            series = {\n              name: map[item],\n              type: \"line\",\n              yAxisIndex: isAllLines ? 0 : this.isRightAxis ? 1 : 0, //全为line 取左侧y轴\n              label: {\n                show: false\n              },\n              symbolSize: options.symbolSize ? options.symbolSize : 5,\n              symbol: \"circle\",\n              showSymbol:\n                options.showSymbol === undefined ? false : options.showSymbol, //是否显示折线上的点\n              smooth: options.smooth === undefined ? false : options.smooth, // 是否平滑\n              // hoverAnimation: false,\n              itemStyle: {\n                normal: {\n                  label: {\n                    show:\n                      options.lineLabelShow === undefined\n                        ? true\n                        : options.lineLabelShow,\n                    fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n                    formatter: this.isRightAxis ? \"{c}%\" : \"{c}\"\n                  },\n                  color:\n                    options.colors && options.colors.line\n                      ? this.$STANDARD.getColor(\n                      options.colors.line[lineIndex],\n\n                      [0, 1, 1, 0],\n                      echarts\n                      )\n                      : \"\"\n                },\n                emphasis: {\n                  label: {\n                    show: true,\n                    fontSize: options.axisLabelSize ? options.axisLabelSize : 20\n                  },\n                  borderColor:\n                    options.colors && options.colors.line\n                      ? this.$STANDARD.colorToRgba(\n                      options.colors.line[lineIndex],\n                      0.3\n                      )\n                      : \"rgba(255,255,255,.3)\",\n                  borderWidth: 10\n                }\n              },\n              lineStyle: {\n                // 线性渐变，前四个参数分别是 x0, y0, x2, y2, 范围从 0 - 1，相当于在图形包围盒中的百分比，如果 globalCoord 为 `true`，则该四个值是绝对的像素位置\n                color:\n                  options.colors && options.colors.line\n                    ? this.$STANDARD.getColor(\n                    options.colors.line[lineIndex++],\n                    // linearGradient,\n                    [0, 0, 0, 1],\n                    echarts\n                    )\n                    : \"\",\n                width: options.lineWidth ? options.lineWidth : 3,\n                shadowBlur: options.lineShadowBlur ? options.lineShadowBlur : 0,\n                shadowColor: options.lineShadowColor\n                  ? options.lineShadowColor\n                  : \"none\",\n                shadowOffsetY: options.lineShadowOffsetY\n                  ? options.lineShadowOffsetY\n                  : 0,\n                opacity: options.lineOpacity ? options.lineOpacity : 1\n              },\n              //平均线\n              markLine: {\n                symbolSize: 10,\n                label: {\n                  normal: {\n                    show: true,\n                    color: \"#fff\",\n                    fontSize: 20\n                  }\n                },\n                data: [\n                  [\n                    {\n                      symbol: \"line\",\n                      symbolSize: \"0\",\n                      x: options.isAverage ? \"6.7%\" : \"\",\n                      yAxis: average\n                    },\n                    {\n                      symbol: \"line\",\n                      symbolSize: \"0\",\n                      x: \"95%\",\n                      yAxis: average\n                    }\n                  ]\n                ],\n                lineStyle: {\n                  normal: {\n                    width: 2,\n                    type: \"solid\",\n                    color: \"#FF507B\"\n                  }\n                }\n              },\n              data: data\n            };\n          } else {\n            series = {\n              name: map[item],\n              type: \"bar\",\n              stack: options.mode === \"stack\" ? stack : stack++,\n              yAxisIndex: 0,\n              xAxisIndex:\n                options.mode === \"overlap\" && item === options.overlap ? 1 : 0,\n              barWidth: options.barWidth ? options.barWidth : \"auto\",\n              //同series柱图间距\n              barGap: options.barGaps ? options.barGaps : \"50%\",\n              //不同series之间的间距\n              barCategoryGap: \"50%\",\n              label: {\n                show:\n                  options.barLabelShow === undefined\n                    ? true\n                    : options.barLabelShow,\n                position: options.barLabelOptions\n                  ? options.barLabelOptions\n                  : options.isVertical\n                    ? options.categoryInverse\n                      ? \"left\"\n                      : \"right\"\n                    : \"\",\n                fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n                textStyle: {\n                  color: options.itemLabelColor ? options.itemLabelColor : \"\"\n                }\n                // ,\n              },\n              itemStyle: {\n                normal: {\n                  barBorderRadius:\n                    options.barBorderRadius === undefined\n                      ? 0\n                      : options.barBorderRadius,\n                  color:\n                    options.mode !== \"overlap\" || options.overlap !== item\n                      ? options.colors && options.colors.bar\n                      ? options.colorisarry\n                        ? function (params) {\n                          let colorList = options.colors.bar\n                            ? options.colors.bar\n                            : [\n                              \"#fa2b7d\",\n                              \"#ff5463\",\n                              \"#ff874a\",\n                              \"#f1825f\",\n                              \"#c64aa7\",\n                              \"#9a23e6\",\n                              \"#7537fb\",\n                              \"#5660fe\",\n                              \"#4ac0ff\",\n                              \"#4ae6ff\"\n                            ];\n                          return colorList[params.dataIndex];\n                        }\n                        : this.$STANDARD.getColor(\n                          options.colors.bar[barIndex++],\n                          linearGradient,\n                          echarts\n                        )\n                      : \"\"\n                      : \"transparent\",\n                  borderColor:\n                    options.mode === \"overlap\" && options.overlap === item\n                      ? options.colors && options.colors.bar\n                      ? this.$STANDARD.getColor(\n                        options.colors.bar[barIndex++],\n                        linearGradient,\n                        echarts\n                      )\n                      : \"\"\n                      : \"transparent\",\n                  borderWidth: 2\n                }\n              },\n              emphasis: {\n                label: {\n                  show:\n                    options.barLabelShow === undefined\n                      ? true\n                      : options.barLabelShow,\n                  fontSize: options.axisLabelSize ? options.axisLabelSize : 20\n                }\n              },\n              data: data\n            };\n          }\n\n          serirsArr.push(series);\n        });\n\n        //值轴\n        let axisValue = [\n          {\n            show: options.axisValueShow,\n            type: \"value\",\n            name: options.axis1Name ? options.axis1Name : \"%\",\n            position:\n              options.isVertical && options.axisValuePosition ? \"top\" : \"bottom\",\n            inverse: options.categoryInverse,\n            nameTextStyle: {\n              color: \"#ff517f\",\n              fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n              fontWeight:'bold',\n              padding: [0, 30, 0,0]\n            },\n            scale: options.isLeftScale ? true : false,\n            splitNumber: options.splitNumber ? options.splitNumber : 5,\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              show: options.isVertical && options.axisLabel ? false : true,\n              color: (value, index) => {\n                let arr=[];\n                let num=options.splitNumber ? options.splitNumber : 5;\n                if(index<num){\n                  for(let i=0;i<num;i++){\n                    arr.push(0)\n                  }\n                  let gradientC = gradientColor(arr, \"#fdc48d\", \"#ff517f\");\n                  return gradientC(index)\n                }else{\n                  return \"#ff517f\"\n                }\n              },\n              margin: 10,\n              fontSize: 14,\n              formatter: \"{value}\"\n            },\n            axisLine: {\n              show: false\n            },\n            splitLine: {\n              show:\n                options.xsplitLineShow === undefined\n                  ? true\n                  : options.xsplitLineShow,\n              lineStyle: {\n                color: options.xsplitLineColor\n                  ? options.xsplitLineColor\n                  : this.$STANDARD.splitLineColor //网格线颜色（所有图表需要统一）\n              }\n            }\n          },\n          {\n            show: options.axisValueShow,\n            type: \"value\",\n            name: options.axis2Name ? options.axis2Name : \"\",\n            nameTextStyle: {\n              color: this.$STANDARD.xAxisColor,\n              fontSize: 20\n            },\n            scale: options.isRightScale ? true : false,\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              color: this.$STANDARD.xAxisColor,\n              //轴与标签的距离\n              margin: 15,\n              fontSize: 20,\n              formatter: this.isRightAxis ? \"{value}%\" : \"{value}\"\n            },\n            axisLine: {\n              show: false\n            },\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: this.$STANDARD.splitLineColor //网格线颜色（所有图表需要统一）\n              }\n            }\n          }\n        ];\n\n        //类目轴数据\n        for (let item of propData) {\n          categoryData.push(item[options.xName]);\n        }\n        // x轴长度大于等于15 dataZoom 出现\n        let dataZoomShow = categoryData.length >= 100 ? true : false;\n        if (options.isVertical) {\n          dataZoomShow = false;\n        }\n        //类目轴\n        let axisCategory = [\n          {\n            type: \"category\", //类目轴\n            data: categoryData,\n            inverse: options.isVertical ? true : false,\n            axisTick: {\n              show: false\n            },\n            position: options.categoryInverse ? \"right\" : \"left\",\n            triggerEvent: true,\n            name: options.axisCategoryName ? options.axisCategoryName : \"\",\n            nameLocation:\n              options.isVertical && options.nameLocation ? \"start\" : \"end\",\n            nameTextStyle: {\n              color: this.$STANDARD.xAxisColor,\n              fontSize: options.axisLabelSize ? options.axisLabelSize : 20\n              // textBorderColor:\"#16337e\",\n              // textBorderWidth:6,\n              // textShadowBlur:40,\n              // shadowOffsetX:30,\n              // shadowOffsetY:30,\n            },\n            axisLabel: {\n              rotate: options.rotate ? options.rotate : 0,\n              // color: this.$STANDARD.xAxisColor,\n              color: \"#fefefe\",\n\n              fontSize: options.axisLabelSize ? options.axisLabelSize : 20,\n              lineHeight: 24,\n              height: 30,\n              // textBorderColor:\"#16337e\",\n              // textBorderWidth:6,\n              // textShadowBlur:40,\n              // shadowOffsetX:30,\n              // shadowOffsetY:30,\n              // interval: 0,\n              //轴与标签的距离\n              margin: 15,\n              formatter: params => {\n                let res = \"\";\n                let name = \"\";\n                //label换行\n                if (options.categoryBr) {\n                  name = \"\";\n                  let brNum = options.brNum ? options.brNum : 1;\n                  for (let i = 0; i < params.length; i++) {\n                    name += params[i];\n                    if (i % brNum == brNum - 1) name += \"\\n\";\n                  }\n                  res = name;\n                } else {\n                  res = params;\n                }\n                // return res;\n                return options.islineHeight ? \"{value|\" + res + \"}\" : res;\n              },\n              rich: {\n                value: {\n                  lineHeight: 26,\n                  fontSize: 20\n                }\n              }\n            },\n            //底线颜色\n            axisLine: {\n              show: options.axisLineShow ? true : false,\n              lineStyle: {\n                color: \"#a1a1b4\"\n              }\n            },\n            splitLine: {\n              show: false,\n              lineStyle: {\n                color: this.$STANDARD.splitLineColor\n              }\n            }\n          },\n          {\n            show: false,\n            type: \"category\", //类目轴\n            data: categoryData\n          }\n        ];\n\n        // 显示滚动轴过滤\n        let dataZoom = [\n          {\n            show: dataZoomShow,\n            type: \"slider\",\n            backgroundColor: \"rgba(70,235,255,0.1)\",\n            fillerColor: \"rgba(70,235,255,0.3)\",\n            borderColor: \"rgba(70,235,255,0.6)\",\n            xAxisIndex: [0, 1],\n\n            filterMode: \"filter\",\n            start: 0,\n            end: 100,\n            textStyle: {\n              color: \"#fff\"\n            },\n            handleIcon:\n              \"M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z\",\n            handleSize: \"80%\",\n            handleStyle: {\n              color: \"#fff\",\n              shadowBlur: 3,\n              shadowColor: \"rgba(0, 0, 0, 0.6)\",\n              shadowOffsetX: 2,\n              shadowOffsetY: 2\n            }\n          }\n        ];\n\n        this.myChart = echarts.init(this.$refs.chartEl);\n        this.option = {\n          tooltip: {\n            trigger: \"axis\",\n            backgroundColor: this.$STANDARD.tooltipBackgroundColor,\n            borderColor: this.$STANDARD.tooltipBorderColor,\n            padding: 12,\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: options.tooltipType ? options.tooltipType : \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n            },\n            formatter: function (params) {\n              let result = params[0].name + options.axisCategoryName + \"<br/>\";\n              params.forEach(function (item, index) {\n                let marker = '';\n                if (typeof(options.colors.bar[index]) === 'string') {\n                  marker = item.marker;\n                } else {\n                  marker = '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:' + options.colors.bar[index][0] + ';\"></span>'\n                }\n                result += `${marker}${item.seriesName} : ${item.value}%</br>`;\n              });\n\n              return result;\n            }\n          },\n          legend: {\n            show: options.legendShow,\n            data: this.legendData,\n            itemGap: options.legendGap ? options.legendGap : 10,\n            top: options.legendPos ? options.legendPos.top : \"3%\",\n            right: options.legendPos ? options.legendPos.right : \"5%\",\n            itemWidth: options.legendW ? options.legendW : 25,\n            itemHeight: options.legendH ? options.legendH : 14,\n            icon:\n              options.legendIcon === \"undefined\" ? \"rect\" : options.legendIcon,\n            borderRadius: options.borderRadius ? options.borderRadius : 0,\n            selected: this.params.legendActive ? this.params.legendActive : {},\n            //   formatter: name => {\n            //     let fix = \"\";\n            //     fix = options.legendCut ? `{title|${name}}` : name;\n            //     return fix;\n            //   },\n            textStyle: {\n              fontSize: options.legendSize ? options.legendSize : 20,\n              //跟随图标颜色\n              // color: () => {\n              //   return ''\n              // },\n              color: options.legendColor\n                ? options.legendColor\n                : this.$STANDARD.legendColor,\n              rich: {\n                title: {\n                  width: 233,\n                  fontSize: 20,\n                  color: this.$STANDARD.legendColor\n                }\n              }\n            }\n          },\n          grid: {\n            left: options.left ? options.left : \"5%\",\n            right: options.right ? options.right : \"5%\",\n            top: options.top ? options.top : \"5%\",\n            // bottom: options.bottom ? options.bottom : '5%',\n            bottom: dataZoomShow ? \"6%\" : options.bottom ? options.bottom : \"5%\",\n            containLabel: true\n          },\n          label: {\n            show: true,\n            position: options.isVertical ? \"right\" : \"top\",\n            distance: 10,\n            color: this.$STANDARD.xAxisColor,\n            fontSize: 20,\n            zlevel: 10\n          },\n          xAxis: options.isVertical ? axisValue : axisCategory,\n          yAxis: options.isVertical ? axisCategory : axisValue,\n          series: serirsArr,\n          dataZoom: dataZoom,\n          animation: this.animation,\n          // animationEasing: \"elasticOut\",\n          animationDelay: function (idx) {\n            // 越往后的数据延迟越大\n            return idx * 50;\n          }\n        };\n        this.myChart.setOption(this.option);\n\n        // 下钻页面\n        this.myChart.on(\"click\", params => {\n          if (params.componentType === \"series\") {\n            this.$emit(\"departmentClick\", params.name);\n          } else {\n            this.$emit(\"departmentClick\", params.value);\n          }\n        });\n        this.legendselectchanged();\n      },\n\n      //边框bar legend 点击其背景图切换\n      legendselectchanged() {\n        this.myChart.on(\"legendselectchanged\", params => {\n          let options = this.params.options;\n          let selected = params.selected;\n          this.$emit(\"changeLegend\", selected);\n\n          if (options.mode === \"overlap\") {\n            // 点击的legend name和边框bar name相等 && 其legend处于激活状态\n            if (\n              params.name === options.map[options.overlap] &&\n              this.legendActive\n            ) {\n              this.legendActive = !this.legendActive;\n              // this.imgSrc = require(\"@/assets/legendInactive.png\");\n              this.legendData.forEach((item, index) => {\n                if (typeof item === \"object\") {\n                  this.legendData[index].icon = `image://${\n                    this.inActiveLegendBg\n                    }`;\n                }\n              });\n              this.myChart.setOption({\n                legend: {\n                  data: this.legendData\n                }\n              });\n              // 点击的legend name和边框bar name相等 && 其legend处于未激活状态\n            } else if (\n              params.name === options.map[options.overlap] &&\n              !this.legendActive\n            ) {\n              this.legendActive = !this.legendActive;\n              //this.imgSrc = require(\"@/assets/legendActive.png\");\n              this.legendData.forEach((item, index) => {\n                if (typeof item === \"object\") {\n                  this.legendData[index].icon = `image://${this.activeLegendBg}`;\n                }\n              });\n              this.myChart.setOption({\n                legend: {\n                  data: this.legendData\n                }\n              });\n            }\n          }\n        });\n      }\n    },\n    watch: {\n      animateFlag: {\n        handler(newVal, oldVal) {\n          this.init();\n        },\n        deep: true\n      },\n      'params.data': {\n        handler(newVal, oldVal) {\n          this.init();\n        },\n        deep: true\n      }\n    }\n  };\n</script>\n\n<style lang=\"stylus\" scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PerBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PerBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PerBar.vue?vue&type=template&id=94409c7a&scoped=true&\"\nimport script from \"./PerBar.vue?vue&type=script&lang=js&\"\nexport * from \"./PerBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"94409c7a\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./szxjjaj.vue?vue&type=style&index=0&id=09d3ed75&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./szxjjaj.vue?vue&type=style&index=0&id=09d3ed75&lang=stylus&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(!_vm.params.data.length),expression:\"!params.data.length\"}],ref:\"cahrtEl\",style:({width:_vm.params.canvasStyle.width,height:_vm.params.canvasStyle.height}),attrs:{\"element-loading-background\":_vm.$STANDARD.loadingBgColor}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div\n    v-loading=\"!params.data.length\"\n    :element-loading-background=\"$STANDARD.loadingBgColor\"\n    ref=\"cahrtEl\"\n    :style=\"{width:params.canvasStyle.width,height:params.canvasStyle.height}\"\n  ></div>\n</template>\n<script>\n  import * as echarts from \"echarts\";\n\n  export default {\n    name: \"funnel\",\n    data() {\n      return {\n        myChart: null\n      };\n    },\n    props: {\n      params: {\n        type: Object,\n        default() {\n          return {\n            canvasStyle: {\n              width: \"500px\",\n              height: \"500px\"\n            },\n            options: {\n              title: \"\",\n              sort: \"\" // ascending || descending || none\n            }\n          };\n        }\n      }\n    },\n    mounted() {\n      this.init();\n    },\n    methods: {\n      init() {\n        if (this.myChart) {\n          this.myChart.dispose();\n          this.myChart = null;\n        }\n        if (this.params.data.length === 0) return;\n\n        let chartData = this.params.data;\n\n        let options = this.params.options;\n        // 基于准备好的dom，初始化echarts实例\n        this.myChart = echarts.init(this.$refs.cahrtEl);\n        this.myChart.setOption({\n          title: {\n            // text: \"年度信访量各级登记机构分布\"\n            text: options.title ? options.title : \"\",\n            textStyle: {\n              color: \"#13f0ff\",\n              fontSize: \"20%\"\n            },\n            x: \"center\",\n            y: \"bottom\"\n          },\n          tooltip: {\n            show: options.tooltipShow,\n            trigger: \"item\",\n            backgroundColor: this.$STANDARD.tooltipBackgroundColor,\n            padding: [10, 20],\n            formatter: \"{b} : {d}%\"\n          },\n          series: [\n            {\n              name: \"\",\n              type: \"funnel\",\n              left: \"10%\",\n              top: options.top ? options.top : \"19%\",\n              right: \"10%\",\n              bottom: options.bottom ? options.bottom : \"5%\",\n              width: \"66%\",\n              height: \"76%\",\n              sort: options.sort ? options.sort : \"\",\n              silent: true,\n              gap: 0,\n              label: {\n                normal: {\n                  show: true,\n                  formatter: \"{c}\",\n                  position: \"center\",\n                  fontSize: \"16%\",\n                  color: \"#fff\",\n                  textShadowColor: \"#000\",\n                  textShadowBlur: 5,\n                  // textShadowOffsetX:5,\n                  textShadowOffsetY: 5,\n                },\n                emphasis: {\n                  color: \"#fff\"\n                }\n              },\n              itemStyle: {\n                normal: {\n                  borderColor: \"rgba(14,149,210,.2)\",\n                  borderWidth: 2,\n                  color: \"transparent\"\n                }\n              },\n              data: chartData\n            },\n            {\n              name: \"漏斗图\",\n              type: \"funnel\",\n              left: \"13%\",\n              top: options.borderTop ? options.borderTop : \"20%\",\n              bottom: options.borderBot ? options.borderBot : \"5%\",\n              width: \"60%\",\n              height: \"73%\",\n              sort: options.sort ? options.sort : \"\",\n              gap: 8,\n              label: {\n                normal: {\n                  show: true,\n                  formatter: \"{b}\",\n                  position: \"right\",\n                  fontSize: \"16%\",\n                  color: \"#fff\"\n                },\n                emphasis: {\n                  // textStyle: {\n                  //   fontSize: \"20%\"\n                  // }\n                }\n              },\n              labelLine: {\n                normal: {\n                  length: options.labelLineLen ? options.labelLineLen : 60,\n                  lineStyle: {\n                    width: 1,\n                    type: \"solid\"\n                  }\n                }\n              },\n              itemStyle: {\n                normal: {\n                  borderColor: \"transparent\",\n                  borderWidth: 0,\n                  color: (params) => {\n                    return {\n                      type: 'linear',\n                      x: 0,\n                      y: 0,\n                      x2: 0,\n                      y2: 1,\n                      colorStops: [{\n                        offset: 0, color: options.colors[params.dataIndex][0] // 0% 处的颜色\n                      }, {\n                        offset: 1, color: options.colors[params.dataIndex][1]// 100% 处的颜色\n                      }],\n                      global: false // 缺省为 false\n                    }\n                  },\n                }\n              },\n              data: chartData\n            }\n          ]\n        });\n        if (this.params.options.rollFlag) {\n          this.chartMove();\n          this.myChart.on(\"mouseover\", params => {\n            this.params.options.rollFlag = false;\n            if (params.dataIndex === this.app.currentIndex) {\n              // 序号相同不取消高亮\n              return;\n            } else {\n              // 取消之前高亮的图形\n              this.myChart.dispatchAction({\n                type: \"downplay\",\n                dataIndex: this.app.currentIndex\n              });\n            }\n          });\n          this.myChart.on(\"mouseout\", params => {\n            this.params.options.rollFlag = true;\n          });\n        }\n      },\n      // 控制tootile 的自动轮播\n      chartMove() {\n        this.app = {};\n        this.app.currentIndex = -1;\n        if (this.interval) {\n          clearInterval(this.interval);\n        }\n        this.interval = setInterval(() => {\n          if (this.params.data.length === 0) return;\n          let dataLen = this.params.data.length;\n          if (this.params.options.rollFlag) {\n            // 取消之前高亮的图形\n            this.myChart.dispatchAction({\n              type: \"downplay\",\n              dataIndex: this.app.currentIndex\n            });\n            this.app.currentIndex = (this.app.currentIndex + 1) % dataLen;\n            // 高亮当前图形\n            this.myChart.dispatchAction({\n              type: \"highlight\",\n              dataIndex: this.app.currentIndex\n            });\n            this.myChart.dispatchAction({\n              type: \"showTip\",\n              seriesIndex: 0,\n              dataIndex: this.app.currentIndex\n            });\n          }\n        }, 2000);\n      }\n    },\n    watch: {\n      'params.data': {\n        handler(newVal, oldVal) {\n          this.init();\n        },\n        deep: true\n      }\n    }\n  };\n</script>\n\n<style lang=\"stylus\" scoped></style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Funnel.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Funnel.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Funnel.vue?vue&type=template&id=edf52fa2&scoped=true&\"\nimport script from \"./Funnel.vue?vue&type=script&lang=js&\"\nexport * from \"./Funnel.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"edf52fa2\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"content\"},[_c('div',{staticClass:\"c-top\"},[_c('div',{staticClass:\"part ct-left\"},[_c('ctitle',{attrs:{\"title\":'区划分布'}}),_c('div',{staticClass:\"inner\"},[(_vm.barBackStatus)?_c('div',{staticClass:\"map-back\",on:{\"click\":_vm.barBack}}):_vm._e(),_c('barline',{attrs:{\"params\":_vm.qvfbBarParams},on:{\"canvasClick\":_vm.canvasClick}})],1)],1),_c('div',{staticClass:\"part ct-right\"},[_c('ctitle',{attrs:{\"title\":'信访形式'}}),_c('div',{staticClass:\"inner\"},[_c('pie-chart3D',{attrs:{\"params\":_vm.zbPieParams}})],1)],1),_c('div',{staticClass:\"part ct-right\"},[_c('ctitle',{attrs:{\"title\":'信访目的'}}),_c('div',{staticClass:\"inner\"},[_c('loopPie',{staticClass:\"chart\",attrs:{\"params\":_vm.rsgmzbPieParams}})],1)],1)]),_c('div',{staticClass:\"c-btm\"},[_c('div',{staticClass:\"part\"},[_c('ctitle',{attrs:{\"title\":'信访量四级登记机构分布'}}),_c('div',{staticClass:\"inner\"},[_c('funnel',{staticClass:\"inner-left\",attrs:{\"params\":_vm.zbFunnelParams}})],1)],1),_c('div',{staticClass:\"part\"},[_c('ctitle',{attrs:{\"title\":'信访量四级登记机构分布走势'}}),_c('div',{staticClass:\"inner\"},[_c('LinesR',{staticClass:\"chart\",attrs:{\"params\":_vm.zsLineParams}})],1)],1),_c('div',{staticClass:\"part\"},[_c('ctitle',{attrs:{\"title\":'个访集体访'}}),_c('div',{staticClass:\"inner\"},[_c('loopPie',{staticClass:\"chart\",attrs:{\"params\":_vm.zfxszbPieParams}})],1)],1)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"wrapper\">\n    <div class=\"content\">\n      <div class=\"c-top\">\n        <div class=\"part ct-left\">\n          <ctitle :title=\"'区划分布'\"></ctitle>\n          <div class=\"inner\">\n            <div\n                v-if=\"barBackStatus\"\n                class=\"map-back\"\n                @click=\"barBack\"\n              ></div>\n            <barline :params=\"qvfbBarParams\"  @canvasClick='canvasClick'></barline>\n          </div>\n        </div>\n        <div class=\"part ct-right\">\n          <ctitle :title=\"'信访形式'\"></ctitle>\n          <div class=\"inner\">\n            <pie-chart3D :params=\"zbPieParams\"></pie-chart3D>\n          </div>\n        </div>\n        <div class=\"part ct-right\">\n          <ctitle :title=\"'信访目的'\"></ctitle>\n          <div class=\"inner\">\n            <loopPie class=\"chart\" :params=\"rsgmzbPieParams\"></loopPie>\n          </div>\n        </div>\n      </div>\n      <div class=\"c-btm\">\n        <div class=\"part\">\n          <ctitle :title=\"'信访量四级登记机构分布'\"></ctitle>\n          <div class=\"inner\">\n            <funnel class=\"inner-left\" :params=\"zbFunnelParams\"></funnel>\n          </div>\n        </div>\n        <div class=\"part\">\n          <ctitle :title=\"'信访量四级登记机构分布走势'\"></ctitle>\n          <div class=\"inner\">\n            <LinesR\n              class=\"chart\"\n              :params=\"zsLineParams\"\n            ></LinesR>\n          </div>\n        </div>\n        <div class=\"part\">\n          <ctitle :title=\"'个访集体访'\"></ctitle>\n          <div class=\"inner\">\n            <loopPie\n              class=\"chart\"\n              :params=\"zfxszbPieParams\"\n            ></loopPie>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { get_http } from \"@/api/index\";\nimport ctitle from \"@/components/title/index\";\nimport loopPie from \"@/components/pie/LoopPie\";\nimport pictorialBar from \"@/components/bar/pictorialBar\";\nimport PieChart3D from \"@/components/pie/PieChart3D\";\nimport funnel from \"@/components/funnel/Funnel\";\nimport PerBar from \"@/components/bar/PerBar\";\nimport barline from \"@/components/bar/BarLine1\";\nimport LinesR from \"@/components/line/LinesR\";\nimport timeChange from \"@/components/timeChange/index\";\n\nexport default {\n  name: \"xfbm\",\n  components: {\n    ctitle,\n    loopPie,\n    pictorialBar,\n    PieChart3D,\n    funnel,\n    PerBar,\n    barline,\n    LinesR,\n    timeChange\n  },\n  data() {\n    return {\n      mapJson: {\n        广东省: \"440000\",\n        广州市: \"440100\",\n        韶关市: \"440200\",\n        深圳市: \"440300\",\n        珠海市: \"440400\",\n        汕头市: \"440500\",\n        佛山市: \"440600\",\n        江门市: \"440700\",\n        湛江市: \"440800\",\n        茂名市: \"440900\",\n        肇庆市: \"441200\",\n        惠州市: \"441300\",\n        梅州市: \"441400\",\n        汕尾市: \"441500\",\n        河源市: \"441600\",\n        阳江市: \"441700\",\n        清远市: \"441800\",\n        东莞市: \"441900\",\n        中山市: \"442000\",\n        潮州市: \"445100\",\n        揭阳市: \"445200\",\n        云浮市: \"445300\"\n      },\n      barBackStatus: false,\n      curCity: '广东省',\n      shijCity: \"\",\n      shej_02: \"invalid\",\n      shij_02: \"invalid\",\n      xj_02: \"invalid\",\n      zsLineParams: {\n        data: [],\n        axisCategoryName: '日',\n        colors: [\n          {\n            line: \"#e11770\",\n            start: \"rgba(225, 23, 112, .5)\",\n            end: \"rgba(225, 23, 112, .5)\"\n          },\n          {\n            line: \"#ffb435\",\n            start: \"rgba(255, 180, 53, .5)\",\n            end: \"rgba(255, 180, 53, .5)\"\n          },\n          {\n            line: \"#1a82f7\",\n            start: \"rgba(26, 130, 247, .5)\",\n            end: \"rgba(26, 130, 247, .5)\"\n          },\n          {\n            line: \"#a1d871\",\n            start: \"rgba(161, 216, 113, .5)\",\n            end: \"rgba(161, 216, 113, .5)\"\n          },\n          {\n            line: \"#ff825b\",\n            start: \"rgba(255, 130, 91, .5)\",\n            end: \"rgba(255, 130, 91, .5)\"\n          }\n        ],\n        option: {\n          splitNumber: 4,\n          splitLineShow: true,\n          legenditemWidth: 22,\n          legenditemHeight: 4,\n          axisLabelShow: true,\n          axisTickShow: false,\n          axisCategoryName: \"年\",\n          // axisYName: \"件次\",\n          axisLabelSize: 14,\n          scales: true,\n          axisLabelFontSize: 16,\n          yaxisLabelFontSize: 14,\n          Tofixed: false,\n          smooth: true,\n          areaShow: 0,\n          smoothMonotone: \"none\",\n          dataZoomshow: false,\n          legendIcon: \"rect\",\n          left: \"8%\",\n          right: \"15%\",\n          top: \"15%\",\n          bottom: \"10%\",\n          legendTop: \"2%\",\n          legendRight: \"15%\"\n        },\n        canvasStyle: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        map: {},\n        xName: \"name\"\n      },\n\n      // 区划分布\n      qvfbBarParams: {\n        data: [],\n        canvasStyle: {\n          width: \"80%\",\n          height: \"85%\"\n        },\n        options: {\n          xName: \"name\", //x轴字段\n          axisValueShow: false,\n          categoryBr: true,\n          axis1Name: \"人次\",\n          axisLabelSize: \"12%\", // label字号\n          left: \"5%\",\n          right: \"5%\",\n          top: \"0%\",\n          bottom: \"0%\",\n          barLabelOptions: \"top\",\n          barWidth: \"35%\", // 每个柱形图宽\n          barBorderRadius: 5,\n          splitLineShow: false,\n          barLabelShow: false, //柱状图数量值显示\n          axisLabelColor: \"rgba(0, 176, 255, .8)\",\n          itemLabelColor: \"rgba(0, 176, 255, .8)\",\n          colors: {\n            bar: [[\"#fa71cd\", \"#c471f5\"]]\n          },\n          map: {\n            value: \"数量\"\n          }\n        }\n      },\n      // 信访量四级登记机构分布\n      zbFunnelParams: {\n        canvasStyle: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        data: [],\n        options: {\n          colors: this.$STANDARD.gradientColors,\n          tooltipShow: false,\n          sort: \"none\",\n          top: \"10%\",\n          borderTop: \"11%\",\n          rollFlag: true\n        }\n      },\n      // 信访形式\n      zbPieParams: {\n        data: [],\n        color: [\"#655CDD\", \"#50B3FF\", \"#62EDAC\"],\n\n        angle: 20,\n        radius: \"35%\",\n        labelRadius: 40,\n        styleObj: {\n          width: \"80%\",\n          height: \"90%\"\n        },\n        isBr: true,\n        labelPer: true\n      },\n      curName: \"部门索引\",\n      \n      // 信访目的\n      rsgmzbPieParams: {\n        canvasStyle: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        data: [],\n        options: {\n          colors: this.$STANDARD.gradientColors,\n          radius: [\"50%\", \"65%\"],\n          center: [\"50%\", \"50%\"],\n          centerRadius: [\"42%\", \"43%\"],\n          labelRich: {\n            b: this.fontSize(0.2),\n            d: this.fontSize(0.22),\n            bHeight: this.fontSize(0.3)\n          },\n          length: 20,\n          length2: 45,\n          borderWidth: this.fontSize(0.05),\n          bRichPadding: [30, -45, 0, -45],\n          tooltip: {\n            show: true\n          },\n          itemLabelShow: true, //数据扇区label是否显示\n          //图例\n          legend: {\n            show: false\n          },\n          rich: {\n            bfontsize: \"14%\" //文字大小\n          },\n          labelSize: \"22%\", // label字号\n          rollFlag: true\n        }\n      },\n      // 走访形式占比\n      zfxszbPieParams: {\n        canvasStyle: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        data: [],\n        options: {\n          bgSize: 220,\n          colors: this.$STANDARD.gradientColors,\n          radius: [\"45%\", \"55%\"],\n          center: [\"50%\", \"50%\"],\n          centerRadius: [\"40%\", \"41%\"],\n          labelRich: {\n            b: this.fontSize(0.18),\n            d: this.fontSize(0.2),\n            bHeight: this.fontSize(0.3)\n          },\n          length: 20,\n          length2: 70,\n          // borderColor: \"#050f28\",\n          itemLabelShow: true, //数据扇区label是否显示\n          //图例\n          legend: {\n            show: false\n          },\n          rich: {\n            bfontsize: \"16%\" //文字大小\n          },\n          labelSize: \"24%\", // label字号\n          rollFlag: true,\n          threeLevel: true\n        }\n      }\n    };\n  },\n  mounted() {\n    this.getAPIAndMap(this.date);\n  },\n  methods: {\n    canvasClick(item) {\n      this.barBackStatus = true;\n      this.curCity = item.params.name;\n      let obj={color:'#fefa82'}\n      let c = ''\n      for(let key in this.mapJson) {\n        if (key === item.params.name) {\n          c = key;\n        }\n      }\n      if (!c) {\n        this.qvfbBarParams.data.forEach((item,index)=>{\n          if(this.curCity == item.name){\n            this.$set(item, \"itemStyle\", obj)\n          }else{\n            this.$delete(item,\"itemStyle\");\n          }\n        })\n      }\n    },\n    getQyfbAPI(date) {\n      if (this.curCity === \"广东省\") {\n        this.shej_02 = this.curCity;\n        this.shij_02 = \"invalid\";\n        this.xj_02 = \"invalid\";\n        this.nameP = \"shij_02\";\n      } else {\n        // 市级\n        if (this.shijCity) {\n          this.shej_02 = \"广东省\";\n          this.shij_02 = this.shijCity;\n          this.nameP = \"xj_02\";\n          if (this.xj_02 !== 'invalid') {\n            this.shej_02 = \"广东省\";\n            this.shij_02 = this.shijCity;\n            this.xj_02 = this.curCity;\n          } else {\n            this.shej_02 = \"广东省\";\n            this.shij_02 = this.shijCity;\n            this.xj_02 = 'invalid';\n          }\n        } else {\n          this.shej_02 = \"广东省\";\n          this.shijCity = 'invalid',\n          this.xj_02 = 'invalid'\n          this.nameP = \"invalid\";\n        }\n      }\n      // 1.区划分布(柱状图)\n      get_http(\"zdyztfxSzxjjajQyfbBar\", {\n        day: `[${date.startDate},${date.endDate}]`,\n        shej_02: this.shej_02,\n        shij_02: this.shij_02,\n        xj_02: this.xj_02,\n        name: this.nameP,\n      })\n      .then(res => {\n        this.qvfbBarParams.data = res.data.data;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    },\n    getAPIAndMap(date) {\n      this.getQyfbAPI(date)\n      this.getAPI(date)\n    },\n    getAPI(date) {\n      \n      // 2.信访形式占比（饼图）\n      get_http(\"zdyztfxSzxjjajZbPie\", {\n        day: `[${date.startDate},${date.endDate}]`,\n        shej_02: this.shej_02,\n        shij_02: this.shij_02,\n        xj_02: this.xj_02\n      })\n      .then(res => {\n        this.zbPieParams.data = res.data.data;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n      // 3.信访目的（环图）\n      get_http(\"zdyztfxSzxjjajRsgmzbPie\", {\n        day: `[${date.startDate},${date.endDate}]`,\n        shej_02: this.shej_02,\n        shij_02: this.shij_02,\n        xj_02: this.xj_02\n      })\n      .then(res => {\n        this.rsgmzbPieParams.data = res.data.data;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n      // 4.登记机构占比（漏斗图）\n      get_http(\"zdyztfxSzxjjajZbFunnel\", {\n        day: `[${date.startDate},${date.endDate}]`,\n        shej_02: this.shej_02,\n        shij_02: this.shij_02,\n        xj_02: this.xj_02,\n      })\n      .then(res => {\n        this.zbFunnelParams.data = res.data.data;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n      // 5.信访量四级登记机构分布走势\n      get_http(\"zdyztfxSzxjjajZsLine\", { \n        day: `[${date.startDate},${date.endDate}]`,\n        shej_02: this.shej_02,\n        shij_02: this.shij_02,\n        xj_02: this.xj_02,\n      })\n      .then(res => {\n        this.zsLineParams.option.axisCategoryName = '日'\n        this.zsLineParams.map = res.data.map;\n        this.zsLineParams.data = res.data.data;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n      // 6.个访集体访（环图）\n      get_http(\"zdyztfxSzxjjajZfxszbPie\", {\n        day: `[${date.startDate},${date.endDate}]`,\n        shej_02: this.shej_02,\n        shij_02: this.shij_02,\n        xj_02: this.xj_02,\n      })\n      .then(res => {\n        this.zfxszbPieParams.data = res.data.data;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n     \n    },\n    fontSize(res) {\n      let docEl = document.documentElement,\n        clientWidth =\n          window.innerWidth ||\n          document.documentElement.clientWidth ||\n          document.body.clientWidth;\n      if (!clientWidth) return;\n      let fontSize = 100 * (clientWidth / 1920);\n      return res * fontSize;\n    },\n    // 地图返回全省\n    barBack() {\n      this.barBackStatus = false;\n      this.curCity = \"广东省\";\n    },\n  },\n  computed: {\n    date() {\n      return this.$store.state.date;\n    }\n  },\n  watch: {\n    date(val) {\n      this.getAPIAndMap(val);\n    },\n    curCity: function(newVal, oldVal) {\n      if (newVal === '广东省') {\n        this.getAPIAndMap(this.date)\n      } else {\n        let c = \"\";\n        for (let key in this.mapJson) {\n          if (newVal === key) {\n            this.shijCity = newVal;\n            c = newVal;\n            this.getAPIAndMap(this.date);\n          }\n        }\n        if (!c) {\n          this.xj_02 = newVal;\n          this.getAPI(this.date);\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"stylus\" scoped>\n.inner\n  width 100%\n.wrapper\n  position relative\n  top 0.8rem\n  height calc(100% - 0.8rem)\n  .fade-enter-active, .fade-leave-active\n    transition opacity .3s\n  .fade-enter, .fade-leave-to\n    opacity 0\n  .w-seach\n    position absolute\n    top -78px\n    right 113px\n    z-index 1000\n    box-sizing border-box\n    padding-left 42px\n    width 262px\n    line-height 62px\n    font-size 22px\n    color #cbfbff\n    background url(\"../../../assets/seach-bg.png\") no-repeat\n    cursor pointer\n    p\n      width 150px\n      text-align center\n      white-space nowrap\n      overflow hidden\n      text-overflow ellipsis\n  .content\n    position relative\n    z-index 1\n    width 100%\n    height 100%\n    display flex\n    flex-direction column\n    padding .2rem .3rem\n    box-sizing border-box\n    .part\n      display flex\n      flex-direction column\n      width 100%\n      height 100%\n      .inner\n        display flex\n        justify-content center\n        height calc(100% - 0.28rem)\n        .chart\n          width 100%\n          height 100%\n    .c-top\n      flex 1\n      display flex\n      .ct-left\n        flex 1.5\n        .inner\n          position relative\n          .map-back\n            position absolute\n            background url(\"~@/assets/back-icon.png\") no-repeat\n            top 30px\n            right 60px\n            width 30px\n            height 30px\n            z-index 1000\n            font-size 0.2rem\n            color #fff\n            cursor pointer\n      .ct-right\n        flex 1\n    .c-btm\n      flex 1\n      display flex\n      .part\n        flex 1\n        .inner\n          position relative\n          .inner-left\n            margin-left 1rem\n          .timeChange\n            top -0.3rem\n            right 0.9rem\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./szxjjaj.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./szxjjaj.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./szxjjaj.vue?vue&type=template&id=09d3ed75&scoped=true&\"\nimport script from \"./szxjjaj.vue?vue&type=script&lang=js&\"\nexport * from \"./szxjjaj.vue?vue&type=script&lang=js&\"\nimport style0 from \"./szxjjaj.vue?vue&type=style&index=0&id=09d3ed75&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"09d3ed75\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"timeChange\"},_vm._l((_vm.arr),function(item,index){return _c('li',{key:index,class:_vm.curTime === item ? 'active' : '',on:{\"click\":function($event){return _vm.changeTime(item)}}},[_vm._v(_vm._s(item)+\" \")])}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--年度、月度切换-->\n<template>\n  <ul class=\"timeChange\">\n    <li\n      v-for=\"(item, index) in arr\"\n      :key=\"index\"\n      @click=\"changeTime(item)\"\n      :class=\"curTime === item ? 'active' : ''\"\n    >{{item}}\n    </li>\n  </ul>\n</template>\n\n<script>\n  export default {\n    name: \"index\",\n    data() {\n      return {\n        arr: [\"年度\", \"月度\"],\n        curTime: \"年度\"\n      }\n    },\n    methods: {\n      changeTime(item) {\n        this.curTime = item;\n        this.$emit(\"change\", this.curTime);\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\" scoped>\n  .timeChange\n    position absolute\n    width 100px\n    line-height 0.28rem\n    z-index 1000\n    display flex\n    li\n      flex 1\n      cursor pointer\n      color #1d81c9\n      font-size 0.16rem\n      text-align center\n      &.active\n        color #82d8ff\n        font-weight 700\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=0804d838&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=0804d838&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0804d838\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(!_vm.params.data.length),expression:\"!params.data.length\"}],ref:\"chartEl\",style:({width : _vm.params.canvasStyle.width, height: _vm.params.canvasStyle.height}),attrs:{\"element-loading-background\":_vm.$STANDARD.loadingBgColor}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\n  @auth:lcw\n  象形柱图\n-->\n<template>\n  <div\n    v-loading=\"!params.data.length\"\n    :element-loading-background=\"$STANDARD.loadingBgColor\"\n    ref=\"chartEl\"\n    :style=\"{width : params.canvasStyle.width, height: params.canvasStyle.height}\"\n  ></div>\n</template>\n\n<script>\n  import * as echarts from 'echarts';\n  import {gradientColor} from \"@/utils/gradient\";\n\n  export default {\n    name: \"pictorialBar\",\n    props: {\n      animateFlag: false,\n      params: {\n        type: Object,\n        default() {\n          return {\n            canvasStyle: {\n              width: \"1000px\",\n              height: \"600px\"\n            },\n            options: {\n              barColors: this.$STANDARD.barColors,\n              labelCut: true,\n            },\n            data: []\n          }\n        }\n      }\n    },\n    data() {\n      return {\n        myChart: null,\n      };\n    },\n    mounted() {\n      this.init();\n      this.$once('hook:beforeDestroy', () => {\n        if (this.interval) {\n          clearInterval(this.interval);\n        }\n        this.myChart && this.myChart.dispose();\n      })\n    },\n    methods: {\n      init() {\n        if (this.myChart) {\n          this.myChart.dispose();\n          this.myChart = null;\n        }\n        if (this.params.data.length === 0) {\n          return;\n        }\n        this.myChart = echarts.init(this.$refs.chartEl);\n        let options = this.params.options;\n        let categoryData = [], valueData = [];\n        this.params.data.forEach((item) => {\n          categoryData.push(item.name);\n          valueData.push(item[this.params.options.valueKey ? this.params.options.valueKey : \"value\"]);\n        });\n\n        let option = {\n          tooltip: {\n            trigger: \"axis\",\n            backgroundColor: this.$STANDARD.tooltipBackgroundColor,\n            padding: [10, 20],\n            axisPointer: {\n              // 坐标轴指示器，坐标轴触发有效\n              type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\n            },\n            formatter: function (params) {\n              if (options.axisCategoryName) {\n                return params[0].name + options.axisCategoryName + \"<br/>\" + params[0].value.toLocaleString();\n              } else {\n                return params[0].name + ' : ' + params[0].value.toLocaleString();\n              }\n            }\n          },\n          // legend: {\n          //   show: true,\n          //   selectedMode: false,\n          //   top: '2%',\n          //   right: '4%',\n          //   textStyle: {\n          //     color: '#fff',\n          //     fontSize: 16\n          //   }\n          // },\n          grid: {\n            top: options.top ? options.top : \"5%\",\n            bottom: options.bottom ? options.bottom : \"5%\",\n            left: options.left ? options.left : \"5%\",\n            right: options.right ? options.right : \"5%\",\n          },\n          xAxis: {\n            type: 'category',\n            name: options.axisCategoryName ? options.axisCategoryName : \"\",\n            nameLocation: options.nameLocation ? \"start\" : \"end\",\n            nameTextStyle: {\n              color: options.XaxisNameColor ? options.XaxisNameColor : \"#fff\",\n              fontSize: options.axisLabelSize ? options.axisLabelSize : 20\n            },\n            data: categoryData,\n            axisLine: {\n              show: true,\n              lineStyle: {\n                width: 2,\n                color: this.$STANDARD.xAxisLineColor\n              }\n            },\n            axisTick: {\n              alignWithLabel: true,\n              //show: false,//x轴刻度是否显示\n              show: options.axisTickShow ? true : false,\n              inside: true //x轴刻度是否朝内\n            },\n            axisLabel: {\n              interval: 0,\n              margin: 10,\n              fontSize: 16,\n              color: this.$STANDARD.xAxisColor,\n              // 坐标label垂直显示\n              // formatter: (params) => {\n              //   return this.params.data.length <= 5 ? params : params.split('').join('\\n')\n              // }\n            },\n            splitLine: {\n              show: false\n            }\n          },\n          yAxis: {\n            type: 'value',\n            name: options.axisYName ? options.axisYName : \"\",\n            nameLocation: options.nameLocation ? \"start\" : \"end\",\n            nameTextStyle: {\n              color: options.YaxisNameColor ? options.YaxisNameColor : \"#ff517f\",\n              fontSize: options.axisLabelSize ? options.axisLabelSize : 14,\n              fontWeight:'bold',\n              padding: [0, 45, 0,0]\n            },\n            splitNumber: options.splitNumber ? options.splitNumber : 5,\n            axisLabel: {\n              show: options.YaxisaxisLabelShow ? false : true,\n              margin: 10,\n              fontSize: 14,\n              color: (value, index) => {\n                let arr=[];\n                let num=options.splitNumber ? options.splitNumber : 5;\n                if(index<num){\n                  for(let i=0;i<num;i++){\n                    arr.push(0)\n                  }\n                  let gradientC = gradientColor(arr, \"#fdc48d\", \"#ff517f\");\n                  return gradientC(index)\n                }else{\n                  return \"#ff517f\"\n                }\n              },\n            },\n            axisLine: {\n              show: options.YaxisLineShow ? true : false,\n              width: 2,\n              type: \"dotted\",\n              color: this.$STANDARD.yAxisSplitLineColor\n            },\n            axisTick: {\n              show: false\n            },\n            splitLine: {\n              show: options.splitLineShow ? true : false,\n              lineStyle: {\n                type: 'dashed',\n                color: \"#2c344c\" //网格线颜色（所有图表需要统一）\n              }\n            }\n          },\n          series: [\n            {\n              name: '数量',\n              type: 'pictorialBar',\n              symbol: this.params.options.symbol,\n              // symbol:'path://d=\"M0,455s114-80,170-235S218,0,253,0s52,165,82,219c0,0,63,164,171,236Z\"',\n              symbolSize: this.params.options.symbolSize,\n              itemStyle: {\n                color: this.params.options.gradient ?\n                  new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: this.params.options.gradient[0]\n                  }, {\n                    offset: 1,\n                    color: this.params.options.gradient[1]\n                  }])\n                  : this.params.options.barColor\n              },\n              data: valueData,\n            },\n            {\n              name: '圆圈',\n              type: 'pictorialBar',\n              symbolSize: this.params.options.circleShow ? [30, 30] : [0, 0],\n              symbolOffset: [0, -10],\n              z: 12,\n              symbolPosition: 'end',\n              itemStyle: {\n                color: this.params.options.barColor\n              },\n              data: valueData,\n            },\n          ]\n        };\n\n        this.myChart.setOption(option);\n      }\n    },\n    watch: {\n      animateFlag: {\n        handler(newVal, oldVal) {\n          this.init();\n        },\n        deep: true\n      },\n      'params.data': {\n        handler(newVal, oldVal) {\n          this.init();\n        },\n        deep: true\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./pictorialBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./pictorialBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./pictorialBar.vue?vue&type=template&id=185e81d3&scoped=true&\"\nimport script from \"./pictorialBar.vue?vue&type=script&lang=js&\"\nexport * from \"./pictorialBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"185e81d3\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}